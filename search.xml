<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文章索引</title>
      <link href="/2033/post-index/"/>
      <url>/2033/post-index/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于 A.D.2022.2.13</p></blockquote><a id="more"></a><hr><p>这是一篇索引.</p><p>因为我还不太想去折腾置顶的东西，所以手动置顶.</p><p>日期含义是<code>Metro2033</code>+<code>洛天依</code>生日.</p><p><a href="https://x.lyxw.xyz/about">关于</a></p><p><a href="https://x.lyxw.xyz/chat">闲聊</a></p><h1 id="计算机-3"><a href="#计算机-3" class="headerlink" title="计算机 3"></a>计算机 3</h1><p><a href="https://x.lyxw.xyz/2019/GFW">科学上网 | GFW与SSR简介</a></p><p><a href="https://x.lyxw.xyz/2019/chrome">Chrome浏览器 | 插件与设置</a></p><p><a href="https://x.lyxw.xyz/2019/software">Windows软件快速指南</a></p><h1 id="编程-6"><a href="#编程-6" class="headerlink" title="编程 6"></a>编程 6</h1><p><a href="https://x.lyxw.xyz/2019/pyqt">PyQt5上手指南</a></p><p><a href="https://x.lyxw.xyz/2019/python">VSCode配置Python环境及Python入门学习</a></p><p><a href="https://x.lyxw.xyz/2019/C++">从零开始的C++学习</a></p><p><a href="https://x.lyxw.xyz/2019/C++_stl">C++STL的OI常用内容</a></p><p><a href="https://x.lyxw.xyz/2022/python_web_crawler/">Python网络爬虫学习</a></p><p><a href="https://x.lyxw.xyz/2022/backend/">后端开发学习</a></p><h1 id="技术-5"><a href="#技术-5" class="headerlink" title="技术 5"></a>技术 5</h1><p><a href="https://x.lyxw.xyz/2020/MMD/">MMD制作简介</a></p><p><a href="https://x.lyxw.xyz/2019/blog">Hexo博客搭建及Material主题使用指南</a></p><p><a href="https://x.lyxw.xyz/2020/cdn/">使用jsDelivr+PicGo对图片进行cdn加速</a></p><p><a href="https://x.lyxw.xyz/2019/html_page">Github Pages+HTML5 up制作个人主页及绑定二级域名</a></p><p><a href="https://x.lyxw.xyz/2022/domain_mail/">使用Gmail进行域名邮箱邮件收发</a></p><h1 id="杂谈-8"><a href="#杂谈-8" class="headerlink" title="杂谈 8"></a>杂谈 8</h1><p><a href="https://x.lyxw.xyz/2021/diary_1">夏日小日记</a></p><p><a href="https://x.lyxw.xyz/2019/science_fiction">《意识宇宙》</a></p><p><a href="https://x.lyxw.xyz/2021/end_1/">一切都结束了</a></p><p><a href="https://x.lyxw.xyz/2020/august/">烦躁沉寂的八月</a></p><p><a href="https://x.lyxw.xyz/2021/talk_1/">「观测者轻语」杂谈</a></p><p><a href="https://x.lyxw.xyz/2020/about-program"> 我接触及学习编程的经历 </a></p><p><a href="https://x.lyxw.xyz/2020/marxist_philosophy_1/">个人价值与集体价值的统一性</a></p><p><a href="https://x.lyxw.xyz/2020/metagame/">一些metagame的介绍与评价（无剧透）</a></p><h1 id="数学-4"><a href="#数学-4" class="headerlink" title="数学 4"></a>数学 4</h1><p><a href="https://x.lyxw.xyz/2019/FFT">「FFT/NTT」「多项式」</a></p><p><a href="https://x.lyxw.xyz/2019/mobius">「莫比乌斯反演」</a></p><p><a href="https://x.lyxw.xyz/2019/probability">「概率期望」</a></p><p><a href="https://x.lyxw.xyz/2019/science_fiction">「数论」</a></p><h1 id="算法-5"><a href="#算法-5" class="headerlink" title="算法 5"></a>算法 5</h1><p><a href="https://x.lyxw.xyz/2019/dp">「动态规划」</a></p><p><a href="https://x.lyxw.xyz/2019/SA">「后缀数组」</a></p><p><a href="https://x.lyxw.xyz/2019/segment_tree">「线段树」</a></p><p><a href="https://x.lyxw.xyz/2019/network_flow">「网络流」</a></p><p><a href="https://x.lyxw.xyz/2019/layered_graph">「分层图」</a></p><h1 id="杂项-2"><a href="#杂项-2" class="headerlink" title="杂项 2"></a>杂项 2</h1><p><a href="https://x.lyxw.xyz/2022/electronics/">电子产品评测</a></p><p><a href="https://x.lyxw.xyz/2021/record_set/">落影汐雾的记录集</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Gmail进行域名邮箱邮件收发</title>
      <link href="/2022/domain_mail/"/>
      <url>/2022/domain_mail/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于：A.D.2022.2.13</p></blockquote><a id="more"></a><hr><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>1.域名</p><p>2.Gmail账号</p><h1 id="收取"><a href="#收取" class="headerlink" title="收取"></a>收取</h1><p>根据域名服务商不同，设置也有所不同，我是使用的是<code>Namesilo</code></p><h2 id="设置域名服务商DNS"><a href="#设置域名服务商DNS" class="headerlink" title="设置域名服务商DNS"></a>设置域名服务商DNS</h2><p>检查DNS设置中是否有MX配置</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_1.png" alt></p><p>若没有，从下方选项中添加<code>Email Forwarding</code>默认配置（点击红色区域按钮）</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_2.png" alt></p><h2 id="设置域名服务商邮件转发"><a href="#设置域名服务商邮件转发" class="headerlink" title="设置域名服务商邮件转发"></a>设置域名服务商邮件转发</h2><p>填写域名邮箱地址</p><p>填写转发到邮箱地址</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_3.png" alt></p><h1 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h1><h2 id="获取Google应用专用密码"><a href="#获取Google应用专用密码" class="headerlink" title="获取Google应用专用密码"></a>获取Google应用专用密码</h2><p><a href="https://myaccount.google.com/security" target="_blank" rel="noopener">https://myaccount.google.com/security</a></p><p>1.打开 两步验证</p><p>2.点击 应用专用密码</p><p>3.填写 选择应用-邮件 选择设备-其他（自定义名称）</p><p>4.填写 域名邮箱地址（方便分辨）</p><p>5.获得16位应用专用密码，保存密码后续使用</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_4.png" alt></p><h2 id="设置Gmail邮箱SMTP服务"><a href="#设置Gmail邮箱SMTP服务" class="headerlink" title="设置Gmail邮箱SMTP服务"></a>设置Gmail邮箱SMTP服务</h2><p>点击 用这个地址发送邮件：添加其他电子邮件地址</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_5.png" alt></p><p>填写Gmail中邮件地址的显示名称与域名邮箱地址，点击下一步</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_6.png" alt></p><p>SMTP服务器 填写 <a href="http://smtp.gmail.com" target="_blank" rel="noopener">smtp.gmail.com</a></p><p>用户名 填写 去除@gmail.com的gmail邮件地址</p><p>密码 填写 前文保存的应用专用密码</p><p>端口选择587</p><p>选择使用TLS的安全连接</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_7.png" alt></p><p>点击添加账号，从Gmail中收取确认邮件并点击确认链接</p><p>最后，可以选择是否作为默认发信地址，选择回复邮件时的方式，设置选项在 用这个地址发送邮件 中</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="测试收取邮件"><a href="#测试收取邮件" class="headerlink" title="测试收取邮件"></a>测试收取邮件</h2><p>使用域名邮箱和Gmail邮箱外的一个邮箱</p><p>1.向域名邮箱发送一封邮件，并测试是否发送成功及送达速度</p><p>2.使用Gmail收取邮件后，检查收件人，邮送域，署域，安全性是否正确</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/domain_mail_8.png" alt></p><h2 id="测试发送邮件"><a href="#测试发送邮件" class="headerlink" title="测试发送邮件"></a>测试发送邮件</h2><p>使用Gmail发送一封邮件到其他邮箱</p><p>1.测试是否发送成功及送达速度</p><p>2.检查是否为域名邮箱并显示从Gmail邮箱代发</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名邮箱 </tag>
            
            <tag> Gmail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端开发学习</title>
      <link href="/2022/backend/"/>
      <url>/2022/backend/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于：A.D.2022.2.13</p></blockquote><a id="more"></a><hr><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><p>主要学习<code>SpringBoot</code>和<code>SpringMVC</code>后端开发，文档书写等</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>1.安装<code>IntelliJ IDEA 2021.2.3</code>，用于Java开发</p><p>2.安装<code>Navicat Premium 15</code>，用于图形化查看MySQL数据</p><p>3.安装<code>MySQL Workbench</code>，用于数据库管理</p><p>4.安装<code>Postman</code>，用于接口测试</p><p>5.配置<code>MySQL</code>，用于数据库环境</p><p>6.配置<code>Maven</code>，用于项目管理</p><h1 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h1><h2 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h2><p>1.配置<code>Golang</code>编译器，环境变量与<code>VSCode</code>开发环境，用于学习语法</p><p>2.安装<code>GoLand 2021.2.2</code>，用于<code>Golang</code>开发</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> SpringMVC </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子产品评测</title>
      <link href="/2022/electronics/"/>
      <url>/2022/electronics/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于：A.D.2022.1.30</p></blockquote><a id="more"></a><hr><p>我一直喜欢虚拟世界和电子设备，这也是几乎我的全部娱乐方式</p><p>这里简单评测一些我用过的电子设备</p><h1 id="笔记本"><a href="#笔记本" class="headerlink" title="笔记本"></a>笔记本</h1><p>机械革命umi pro3 | i7-11800H RTX3060 16+512+1T W.D.sn550</p><h1 id="耳机"><a href="#耳机" class="headerlink" title="耳机"></a>耳机</h1><p>飞利浦 SHP9500 | AirPods 2 | 铁三角ATH-CLR100 | SONY WH1000-XM4</p><h1 id="平板"><a href="#平板" class="headerlink" title="平板"></a>平板</h1><p>iPad Pro 2021 |  Apple Pencil</p><h1 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h1><h2 id="小米11-Pro"><a href="#小米11-Pro" class="headerlink" title="小米11 Pro"></a>小米11 Pro</h2><p>人生第二个手机，或许是因为我一直喜欢小米</p><h2 id="红米-Note5"><a href="#红米-Note5" class="headerlink" title="红米 Note5"></a>红米 Note5</h2><p>人生第一个手机，在当时那个价位屏幕真的很漂亮</p><h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><p>罗技G502 | 罗技G304</p><h1 id="数位板"><a href="#数位板" class="headerlink" title="数位板"></a>数位板</h1><p>Wacom CTL672</p><h1 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h1><p>iKBC c104 青轴 | iKBC c87 红轴</p><h1 id="VR"><a href="#VR" class="headerlink" title="VR"></a>VR</h1><p>Oculus Quest 2</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评测 </tag>
            
            <tag> 电子产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫学习</title>
      <link href="/2022/python_web_crawler/"/>
      <url>/2022/python_web_crawler/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于：A.D.2022.2.13</p></blockquote><a id="more"></a><hr><h1 id="按功能学习"><a href="#按功能学习" class="headerlink" title="按功能学习"></a>按功能学习</h1><h2 id="下载HTML源代码"><a href="#下载HTML源代码" class="headerlink" title="下载HTML源代码"></a>下载HTML源代码</h2><pre><code class="lang-python">from urllib.request import urlopenimport syshtml = urlopen(    &quot;https://www.hitwh.edu.cn/&quot;).read().decode(&#39;utf-8&#39;)if sys.getdefaultencoding() == &#39;ascii&#39;:    sys.stdout = open(&quot;2.输出html.html&quot;, &quot;w&quot;, encoding = &#39;gb2312&#39;)else:    sys.stdout = open(&quot;2.输出html.html&quot;, &quot;w&quot;, encoding = &#39;utf-8&#39;)print(html)</code></pre><h2 id="下载网页图片"><a href="#下载网页图片" class="headerlink" title="下载网页图片"></a>下载网页图片</h2><pre><code class="lang-python">from urllib.request import urlopenimport urllib.parseimport sysimport reimport osdef getHtml(url):    html = urlopen(url).read().decode(&#39;utf-8&#39;)    return htmldef printImg(imgList, url):    for i in imgList:        imgName = i.split(&quot;/&quot;)[-1]        imgPicture = urlopen(url + i)        File = open(&#39;D:\\image\\&#39; + imgName, &#39;wb&#39;)        File.write(imgPicture.read())        File.close()def downloadImg(url):    html = getHtml(url)    rule_1 = r&#39;&lt;img src=&quot;([^&quot;]+\.png)&quot;&#39;    rule_2 = r&#39;&lt;img src=&quot;([^&quot;]+\.jpg)&quot;&#39;    imgList_1 = re.findall(rule_1, html)    printImg(imgList_1, url)    imgList_2 = re.findall(rule_2, html)    printImg(imgList_2, url)if __name__ == &#39;__main__&#39;:    url = &quot;https://www.hitwh.edu.cn/&quot;    downloadImg(url)</code></pre><h2 id="下载通知"><a href="#下载通知" class="headerlink" title="下载通知"></a>下载通知</h2><pre><code class="lang-python">from urllib.request import urlopenimport sysimport redef getHtml(url):    html = urlopen(url).read().decode(&#39;utf-8&#39;)    return htmldef printList(list_1, list_2, list_3):    if sys.getdefaultencoding() == &#39;ascii&#39;:        sys.stdout = open(&quot;4.爬取通知.txt&quot;, &quot;w&quot;, encoding = &#39;gb2312&#39;)    else:        sys.stdout = open(&quot;4.爬取通知.txt&quot;, &quot;w&quot;, encoding = &#39;utf-8&#39;)    for i in range(0, len(list_1)):        print(&#39;#%d&#39; % (i+1))        print(&#39;标题：&#39; + list_2[i])        print(&#39;日期：&#39; + list_3[i])        print(&#39;网址：&#39; + &#39;http://today.hitwh.edu.cn&#39; + list_1[i])        print(&#39;&#39;)def download(url):    html = getHtml(url)    rule_1 = r&#39;&lt;a target=&quot;_blank&quot; href=&quot;([^&quot;]+\.htm)&quot;&gt;&#39;    List_1 = re.findall(rule_1, html)    rule_2 = r&#39;&lt;a target=&quot;_blank&quot; href=.*?&gt;(.*?)&lt;/a&gt;&#39;    List_2 = re.findall(rule_2, html)    rule_3 = r&#39;&lt;font color=&quot;#3a6399&quot;&gt;&amp;nbsp;&amp;nbsp;(.*?)&lt;/font&gt;&#39;    List_3 = re.findall(rule_3, html)    printList(List_1, List_2, List_3)if __name__ == &#39;__main__&#39;:    url = &quot;http://today.hitwh.edu.cn/1024/list.htm&quot;    download(url)</code></pre><h2 id="下载任意页数通知"><a href="#下载任意页数通知" class="headerlink" title="下载任意页数通知"></a>下载任意页数通知</h2><pre><code class="lang-python">from urllib.request import urlopenimport sysimport redef getHtml(url):    html = urlopen(url).read().decode(&#39;utf-8&#39;)    return htmldef printList(list_1, list_2, list_3):    if sys.getdefaultencoding() == &#39;ascii&#39;:        sys.stdout = open(&quot;5.爬取任意页数通知.txt&quot;, &quot;w&quot;, encoding = &#39;gb2312&#39;)    else:        sys.stdout = open(&quot;5.爬取任意页数通知.txt&quot;, &quot;w&quot;, encoding = &#39;utf-8&#39;)    print(&#39;通知页数：第&#39; + pageNumber + &#39;页&#39;)    print(&#39;&#39;)    for i in range(0, len(list_1)):        print(&#39;#%d&#39; % (i+1))        print(&#39;标题：&#39; + list_2[i])        print(&#39;日期：&#39; + list_3[i])        print(&#39;网址：&#39; + &#39;http://today.hitwh.edu.cn&#39; + list_1[i])        print(&#39;&#39;)def download(url):    html = getHtml(url)    rule_1 = r&#39;&lt;a target=&quot;_blank&quot; href=&quot;([^&quot;]+\.htm)&quot;&gt;&#39;    List_1 = re.findall(rule_1, html)    rule_2 = r&#39;&lt;a target=&quot;_blank&quot; href=.*?&gt;(.*?)&lt;/a&gt;&#39;    List_2 = re.findall(rule_2, html)    rule_3 = r&#39;&lt;font color=&quot;#3a6399&quot;&gt;&amp;nbsp;&amp;nbsp;(.*?)&lt;/font&gt;&#39;    List_3 = re.findall(rule_3, html)    printList(List_1, List_2, List_3)if __name__ == &#39;__main__&#39;:    print(&#39;请输入需要爬取的通知页数：&#39;)    pageNumber = input()    url = &quot;http://today.hitwh.edu.cn/1024/list&quot; + pageNumber + &quot;.htm&quot;    download(url)</code></pre><h1 id="Bilibili-Favorites-Download"><a href="#Bilibili-Favorites-Download" class="headerlink" title="Bilibili-Favorites-Download"></a>Bilibili-Favorites-Download</h1><p>用于下载B站个人收藏夹信息</p><p><a href="https://github.com/ShioKiri/Bilibili-Favorites-Download" target="_blank" rel="noopener">https://github.com/ShioKiri/Bilibili-Favorites-Download</a></p><ul><li>因为调用一个外部网站API查询了失效视频且没有处理失败情况，目前因为API有一定问题，不能稳定运行，可以自行删去处理失效视频的代码使用</li><li>没有使用数据库和图形界面，直接保存为TXT或者CSV文件</li></ul><h2 id="生成TXT文件"><a href="#生成TXT文件" class="headerlink" title="生成TXT文件"></a>生成TXT文件</h2><p>按照一定格式保存为TXT，推荐使用编辑器打开TXT避免速度过慢</p><pre><code class="lang-python">from urllib.request import urlopenimport jsonimport reimport timeimport sysimport logging# -*- coding: UTF-8 -*-bilibili_uid = 0aFavVideoCnt = 0totVideoCnt = 0totVideoNum = 0def initUid():    global bilibili_uid    bilibili_uid = int(input())def getJsonUrl(url):    Data = urlopen(url).read().decode(&#39;utf-8&#39;)    jsonData = json.loads(Data)    return jsonDatadef getFavoriteList(uid):    global totVideoNum    favoriteListUrl = &#39;https://api.bilibili.com/medialist/gateway/base/created?pn=1&amp;ps=100&amp;up_mid={uid}&amp;is_space=0&amp;jsonp=jsonp&#39;.format(uid=uid)    favoriteListData = getJsonUrl(favoriteListUrl)    listInfo = favoriteListData[&#39;data&#39;][&#39;list&#39;]    favNum = len(listInfo)    for i in range(0, favNum):        totVideoNum += listInfo[i][&#39;media_count&#39;]    for i in range(0, favNum):        print(&#39;收藏夹编号:#%d 名称:%s 视频数量:%d\n&#39; % (i+1, listInfo[i][&#39;title&#39;], listInfo[i][&#39;media_count&#39;]))        getFavListVideo(uid, listInfo[i][&#39;fid&#39;])def getFavListVideo(uid, fid):    global aFavVideoCnt, totVideoCnt, totVideoNum    aFavVideoCnt = 0    favPageUrl = &#39;https://api.bilibili.com/x/space/fav/arc?vmid={uid}&amp;ps=30&amp;fid={fid}&amp;tid=0&amp;keyword=&amp;pn={page}&amp;order=fav_time&amp;jsonp=jsonp&#39;.format(uid=uid,fid=fid,page=1)    favPageDate = getJsonUrl(favPageUrl)    printVideoInfo(favPageDate[&#39;data&#39;][&#39;archives&#39;])    pageCount = favPageDate[&#39;data&#39;][&#39;pagecount&#39;]    for i in range(2, pageCount+1):        favPageUrl = &#39;https://api.bilibili.com/x/space/fav/arc?vmid={uid}&amp;ps=30&amp;fid={fid}&amp;tid=0&amp;keyword=&amp;pn={page}&amp;order=fav_time&amp;jsonp=jsonp&#39;.format(uid=uid,fid=fid,page=i)        favPageDate = getJsonUrl(favPageUrl)        printVideoInfo(favPageDate[&#39;data&#39;][&#39;archives&#39;])def printInfo(Info):    print(&#39;投稿时间:&#39; + time.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;, time.gmtime(Info[&#39;pubdate&#39;])))    print(&#39;描述:%s&#39; % (Info[&#39;desc&#39;]))    print(&#39;分区:%s&#39; % (Info[&#39;tname&#39;]))    print(&#39;标签:%s&#39; % (Info[&#39;dynamic&#39;]))    print(&#39;up主用户名:%s  up主uid:%s&#39; % (Info[&#39;owner&#39;][&#39;name&#39;], Info[&#39;owner&#39;][&#39;mid&#39;]))    print(&#39;播放:%s  弹幕:%s  回复:%s  收藏:%s  硬币:%s  分享:%s  喜欢:%s&#39; % (Info[&#39;stat&#39;][&#39;view&#39;], Info[&#39;stat&#39;][&#39;danmaku&#39;], Info[&#39;stat&#39;][&#39;reply&#39;], Info[&#39;stat&#39;][&#39;favorite&#39;], Info[&#39;stat&#39;][&#39;coin&#39;], Info[&#39;stat&#39;][&#39;share&#39;], Info[&#39;stat&#39;][&#39;like&#39;],))    print(&#39;收藏时间:&#39; + time.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;, time.gmtime(Info[&#39;fav_at&#39;])))    print()def printVideoInfo(aPageInfo):    global aFavVideoCnt, totVideoCnt, totVideoNum    for i in range(0, len(aPageInfo)):        aFavVideoCnt += 1        totVideoCnt += 1        if totVideoCnt % 10 == 0 or totVideoCnt == totVideoNum: logging.info(&#39;已经完成了{num1}/{num2}个视频...&#39;.format(num1 = totVideoCnt,num2 = totVideoNum))        Info = aPageInfo[i]        video_id = Info[&#39;aid&#39;]        if Info[&#39;title&#39;] == &#39;已失效视频&#39;:            getInvalidVideoInfo(video_id, Info)        else:            print(&#39;视频编号:#%d  AV号:%d  视频标题:%s&#39; % (aFavVideoCnt, Info[&#39;aid&#39;], Info[&#39;title&#39;]))            print(&#39;封面图片:%s&#39; % (Info[&#39;pic&#39;]))            printInfo(Info)biliplusApiCnt = 0runTime = 0def getInvalidVideoInfo(video_id, Info):    global aFavVideoCnt, biliplusApiCnt, runTime    biliplusApiCnt += 1    while biliplusApiCnt / ((time.time() - runTime) / 60.0) &gt;= 5: time.sleep(1)    url = &#39;https://www.biliplus.com/api/view?id={vid}&#39;.format(vid = video_id)    InvVideoInfo = getJsonUrl(url)    if &#39;code&#39; in InvVideoInfo:        print(&#39;视频编号:#%d  [已失效][BiliplusApi数据缺失]  AV号:%d  视频标题:已失效视频&#39; % (aFavVideoCnt, video_id))        print(&#39;封面图片:%s&#39; % (Info[&#39;pic&#39;]))        printInfo(Info)    else:        print(&#39;视频编号:#%d  [已失效][BiliplusApi获得标题与封面图片]  AV号:%d  视频标题:%s&#39; % (aFavVideoCnt, video_id, InvVideoInfo[&#39;title&#39;]))        print(&#39;封面图片:%s&#39; % (InvVideoInfo[&#39;pic&#39;]))        printInfo(Info)def start(): # for cmd    global totVideoNum, runTime    logging.basicConfig(level=logging.DEBUG)    if sys.getdefaultencoding() == &#39;ascii&#39;:        sys.stdout = open(&quot;FavoriteVideoList.txt&quot;, &quot;w&quot;, encoding = &#39;gb2312&#39;)    else:        sys.stdout = open(&quot;FavoriteVideoList.txt&quot;, &quot;w&quot;, encoding = &#39;utf-8&#39;)    initUid()    runTime = time.time()    getFavoriteList(bilibili_uid)    print(&#39;你的收藏夹共有%d个视频&#39; % (totVideoNum))    logging.info(&#39;已完成！&#39;)# def windowMain(Uid, filePath): # for window uiif __name__ == &#39;__main__&#39;: # cmd    start()</code></pre><h2 id="生成CSV文件"><a href="#生成CSV文件" class="headerlink" title="生成CSV文件"></a>生成CSV文件</h2><p>生成可以用<code>Excel</code>打开的逗号分隔值文件，因为<code>Unicode(UTF-8)</code>文件头没有<code>BOM编码</code>会导致编码错误（后期会处理），可以使用<code>Notepad++</code>修改<code>Unicode(UTF-8)</code>为<code>ANSI</code>，或者修改为<code>带BOM编码格式的Unicode(UTF-8)文件</code>。</p><pre><code class="lang-python">from urllib.request import urlopenimport jsonimport reimport timeimport sysimport logging# -*- coding: UTF-8 -*-bilibili_uid = 0aFavVideoCnt = 0totVideoCnt = 0totVideoNum = 0def initUid():    global bilibili_uid    bilibili_uid = int(input())def getJsonUrl(url):    Data = urlopen(url).read().decode(&#39;utf-8&#39;)    jsonData = json.loads(Data)    return jsonDatadef getFavoriteList(uid):    global totVideoNum    print(&#39;收藏夹编号,收藏夹名称,收藏夹视频数量,视频编号,AV号,视频状态,视频标题,封面图片,投稿时间,描述,分区,标签,up主用户名,up主uid,播放,弹幕,回复,收藏,硬币,分享,喜欢,收藏时间,&#39;)    favoriteListUrl = &#39;https://api.bilibili.com/medialist/gateway/base/created?pn=1&amp;ps=100&amp;up_mid={uid}&amp;is_space=0&amp;jsonp=jsonp&#39;.format(uid=uid)    favoriteListData = getJsonUrl(favoriteListUrl)    listInfo = favoriteListData[&#39;data&#39;][&#39;list&#39;]    favNum = len(listInfo)    for i in range(0, favNum):        totVideoNum += listInfo[i][&#39;media_count&#39;]    for i in range(0, favNum):        favInformation = &#39;#{x1},{x2},{x3}&#39;.format(x1=i+1, x2=listInfo[i][&#39;title&#39;], x3=listInfo[i][&#39;media_count&#39;])        getFavListVideo(uid, listInfo[i][&#39;fid&#39;], favInformation)def printInfo(Info):    print(time.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;, time.gmtime(Info[&#39;pubdate&#39;])), end=&#39;,&#39;)    print(&#39;&quot;%s&quot;&#39; % (Info[&#39;desc&#39;]), end=&#39;,&#39;)    print(&#39;&quot;%s&quot;&#39; % (Info[&#39;tname&#39;]), end=&#39;,&#39;)    print(&#39;&quot;%s&quot;&#39; % (Info[&#39;dynamic&#39;]), end=&#39;,&#39;)    print(&#39;&quot;%s&quot;,&quot;%s&quot;&#39; % (Info[&#39;owner&#39;][&#39;name&#39;], Info[&#39;owner&#39;][&#39;mid&#39;]), end=&#39;,&#39;)    print(&#39;%s,%s,%s,%s,%s,%s,%s&#39; % (Info[&#39;stat&#39;][&#39;view&#39;], Info[&#39;stat&#39;][&#39;danmaku&#39;], Info[&#39;stat&#39;][&#39;reply&#39;], Info[&#39;stat&#39;][&#39;favorite&#39;], Info[&#39;stat&#39;][&#39;coin&#39;], Info[&#39;stat&#39;][&#39;share&#39;], Info[&#39;stat&#39;][&#39;like&#39;],), end=&#39;,&#39;)    print(time.strftime(&quot;%Y-%m-%d-%H:%M:%S&quot;, time.gmtime(Info[&#39;fav_at&#39;])), end=&#39;,&#39;)    print()def getFavListVideo(uid, fid, favInfo):    global aFavVideoCnt, totVideoCnt, totVideoNum    aFavVideoCnt = 0    favPageUrl = &#39;https://api.bilibili.com/x/space/fav/arc?vmid={uid}&amp;ps=30&amp;fid={fid}&amp;tid=0&amp;keyword=&amp;pn={page}&amp;order=fav_time&amp;jsonp=jsonp&#39;.format(uid=uid, fid=fid, page=1)    favPageDate = getJsonUrl(favPageUrl)    printVideoInfo(favPageDate[&#39;data&#39;][&#39;archives&#39;], favInfo)    pageCount = favPageDate[&#39;data&#39;][&#39;pagecount&#39;]    for i in range(2, pageCount+1):        favPageUrl = &#39;https://api.bilibili.com/x/space/fav/arc?vmid={uid}&amp;ps=30&amp;fid={fid}&amp;tid=0&amp;keyword=&amp;pn={page}&amp;order=fav_time&amp;jsonp=jsonp&#39;.format(uid=uid, fid=fid, page=i)        favPageDate = getJsonUrl(favPageUrl)        printVideoInfo(favPageDate[&#39;data&#39;][&#39;archives&#39;], favInfo)def printVideoInfo(aPageInfo, favInfo):    global aFavVideoCnt, totVideoCnt, totVideoNum    for i in range(0, len(aPageInfo)):        print(favInfo, end=&#39;,&#39;)        aFavVideoCnt += 1        totVideoCnt += 1        if totVideoCnt % 10 == 0 or totVideoCnt == totVideoNum: logging.info(&#39;已经完成了{num1}/{num2}个视频...&#39;.format(num1=totVideoCnt, num2=totVideoNum))        Info = aPageInfo[i]        video_id = Info[&#39;aid&#39;]        if Info[&#39;title&#39;] == &#39;已失效视频&#39;:            getInvalidVideoInfo(video_id, Info)        else:            print(&#39;#%d,%d,[有效],&quot;%s&quot;,&quot;%s&quot;&#39; % (aFavVideoCnt, Info[&#39;aid&#39;], Info[&#39;title&#39;], Info[&#39;pic&#39;]), end=&#39;,&#39;)            printInfo(Info)biliplusApiCnt = 0runTime = 0def getInvalidVideoInfo(video_id, Info):    global aFavVideoCnt, biliplusApiCnt, runTime    biliplusApiCnt += 1    while biliplusApiCnt / ((time.time() - runTime) / 60.0) &gt;= 5: time.sleep(1)    url = &#39;https://www.biliplus.com/api/view?id={vid}&#39;.format(vid = video_id)    InvVideoInfo = getJsonUrl(url)    if &#39;code&#39; in InvVideoInfo:        print(&#39;#%d,%d,[失效][BiliplusApi数据缺失],已失效视频,(·w·)&#39; % (aFavVideoCnt, Info[&#39;aid&#39;]), end=&#39;,&#39;)        printInfo(Info)    else:        print(&#39;#%d,%d,有效,&quot;%s&quot;,&quot;%s&quot;&#39; % (aFavVideoCnt, Info[&#39;aid&#39;], InvVideoInfo[&#39;title&#39;], InvVideoInfo[&#39;pic&#39;]), end=&#39;,&#39;)        printInfo(Info)def start(): # for cmd    global totVideoNum, runTime    logging.basicConfig(level=logging.DEBUG)    if sys.getdefaultencoding() == &#39;ascii&#39;:        sys.stdout = open(&quot;FavoriteVideoList.csv&quot;, &quot;w&quot;, encoding = &#39;gb2312&#39;)    else:        sys.stdout = open(&quot;FavoriteVideoList.csv&quot;, &quot;w&quot;, encoding = &#39;utf-8&#39;)    initUid()    runTime = time.time()    getFavoriteList(bilibili_uid)    print(&#39;你的收藏夹共有%d个视频&#39; % (totVideoNum))    logging.info(&#39;已完成！&#39;)# def windowMain(Uid, filePath): # for window uiif __name__ == &#39;__main__&#39;: # cmd    start()</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「观测者轻语」杂谈</title>
      <link href="/2021/talk_1/"/>
      <url>/2021/talk_1/</url>
      
        <content type="html"><![CDATA[<p>1.关于生活意义</p><p>2.关于电子游戏</p><p>3.关于编程学习</p><a id="more"></a><hr><h1 id="关于生活意义"><a href="#关于生活意义" class="headerlink" title="关于生活意义"></a>关于生活意义</h1><p>一般情况下，以<strong>存在主义</strong>的前提来看：</p><p>1.在社会生活中获得一定质量的物质与精神享受，将意识存在能力发挥在部分个人愿望的实现，享受意识存在的过程。</p><p>例：学习喜欢的科学知识，欣赏喜欢的文化产品，进行一定程度的社会交际并获取社会认同感</p><p>2.参与实现更高的社会意识形态的过程，参与对物质世界的利用和改造</p><p>例：为无产阶级革命做出贡献，为社会生产做出贡献</p><h1 id="关于电子游戏"><a href="#关于电子游戏" class="headerlink" title="关于电子游戏"></a>关于电子游戏</h1><p>电子游戏作为一个近代的产物，具有极大的争议，不过具有成瘾性的游戏或许并不是一个有意义的游戏，我对此的理解为游戏作为一种事物的存在形式，一个合理且富有存在意义的电子游戏应该是至少具有一下三种性质中其中一种的通过电子计算机与计算机网络运行的交互程序。</p><h2 id="艺术性"><a href="#艺术性" class="headerlink" title="艺术性"></a>艺术性</h2><p>图像、音乐、视频、文本可以作为一种游戏的子集。</p><p>正如文本可以构造剧情，图像可以表现艺术，音乐可以显露和谐，视频可以记录实际，这四种艺术形式在合理的运用下可以表现出独特的效果，那么游戏则可以包容不同艺术独特的优点，例如视觉小说。</p><h2 id="游戏性"><a href="#游戏性" class="headerlink" title="游戏性"></a>游戏性</h2><p>一定规则的游戏可以作为竞技的手段，这类游戏与电子计算机出现之前的棋牌类游戏有一定的相似之处，只不过规则与算法复杂化了，例如反恐精英，DOTA2。</p><p>一定规则的游戏可以作为发挥个人创造能力的空间，满足非专业设计的创造满足感，例如模拟经营类游戏戴森球计划，沙盒游戏我的世界。</p><h2 id="抽象性"><a href="#抽象性" class="headerlink" title="抽象性"></a>抽象性</h2><p>游戏也可以作为对现实世界的抽象，无论是3D建模还是物理引擎的设计都是基于现实世界的真实数学物理模型所做的简化操作，我们不可能通过模拟每一个原子的运动来建构一个世界，但可以通过对宏观现象的简化性描述来开始进行建构新的一个世界的起点。</p><p>例如开放世界游戏GTA5，看门狗2</p><blockquote><p>Jason Gregory.游戏引擎架构[M]北京：电子工业出版社，2014.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/talk_1_1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/talk_1_2.png" alt></p><h1 id="关于编程学习"><a href="#关于编程学习" class="headerlink" title="关于编程学习"></a>关于编程学习</h1><h2 id="信息资源的获取"><a href="#信息资源的获取" class="headerlink" title="信息资源的获取"></a>信息资源的获取</h2><p>有问题尽量使用谷歌，学会查找阅读文档，出现bug也可以尝试用stackoverflow搜索，很多时候使用英文搜素更可能找到有用的解决方案。</p><h2 id="各种工具的用法"><a href="#各种工具的用法" class="headerlink" title="各种工具的用法"></a>各种工具的用法</h2><p>熟悉git和github的用法，可以先自己搭一个hexo博客试试，然后可以学习使用各种现代ide和编辑器，一开始学习可以使用ide（编辑器要配置不同语言的开发环境），但是一些依赖项的环境配置还是很难避免的。实际编程肯定也会使用更多的辅助工具，比如数据库的图形化显示。</p><h2 id="学习顺序与学习内容"><a href="#学习顺序与学习内容" class="headerlink" title="学习顺序与学习内容"></a>学习顺序与学习内容</h2><p>我推荐先学习C++，这样可以建立对常用编程语言的快速学习能力，使用C++语言学习数据结构和算法，因为一来招聘会考算法，二来这方面会建立一些实际编程中一般性的思路。之后可以看CS的基础内容（操作系统，计算机组成，计算机网络，编译原理），学一些语言（Python、C#、Java）和开发框架（例如Spring Boot、Flutter），写一些实际项目（例如Windows桌面应用，Unity或者UE4游戏，网页前后端等），学习设计模式等软件开发的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>落影汐雾的记录集</title>
      <link href="/2021/record_set/"/>
      <url>/2021/record_set/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最后更新：A.D.2022.2.13</p></blockquote><p>这篇文章大概就是用来在网页上看看的……（？</p><a id="more"></a><hr><blockquote><p>缓缓的河流绕过泛黄的长廊 ~ 过往烟云</p></blockquote><h1 id="网站历史"><a href="#网站历史" class="headerlink" title="网站历史"></a>网站历史</h1><div class="table-container"><table><thead><tr><th style="text-align:center">日期</th><th style="text-align:center">字符串</th></tr></thead><tbody><tr><td style="text-align:center">2019.6</td><td style="text-align:center">搭建了此<code>Blog</code></td></tr><tr><td style="text-align:center">2019.9.12</td><td style="text-align:center">购买了域名<code>66ccff.xyz</code></td></tr><tr><td style="text-align:center">2019.9.22</td><td style="text-align:center">用<code>HTML5 up</code>模板制作个人主页并使用域名<code>66ccff.xyz</code>，<code>Blog</code>改为二级域名<code>blog.66ccff.xyz</code></td></tr><tr><td style="text-align:center">2019.9.22</td><td style="text-align:center">往主域名下加了几个网页游戏</td></tr><tr><td style="text-align:center">2019.11.04</td><td style="text-align:center">创建了Virtual Dimension页面</td></tr><tr><td style="text-align:center">2020.8.16</td><td style="text-align:center">购买了域名<code>lyxw.xyz</code></td></tr><tr><td style="text-align:center">2021.9.10</td><td style="text-align:center">开始这样一个新的世界</td></tr></tbody></table></div><h1 id="生活随想"><a href="#生活随想" class="headerlink" title="生活随想"></a>生活随想</h1><div class="table-container"><table><thead><tr><th style="text-align:center">日期</th><th style="text-align:center">字符串</th></tr></thead><tbody><tr><td style="text-align:center">2019.6</td><td style="text-align:center">词语<code>时光 岁月 年华</code></td></tr><tr><td style="text-align:center">2019.9.7</td><td style="text-align:center">读完了<code>《白鹿原》</code></td></tr><tr><td style="text-align:center">2019.9.8</td><td style="text-align:center">吃了一颗<code>柠檬</code></td></tr><tr><td style="text-align:center">2019.9.10</td><td style="text-align:center">开坑<code>套接字</code></td></tr><tr><td style="text-align:center">2019.9.14</td><td style="text-align:center">看完了刀剑神域<code>Animation</code>的<code>SAO</code>篇</td></tr><tr><td style="text-align:center">2019.9.15</td><td style="text-align:center">打了第一场<code>Codeforces</code>和<code>AtCoder</code></td></tr></tbody></table></div><hr><blockquote><p>亲切的遥远 温柔的岁月 就是那样的一个世界 ~ 虚拟维度</p></blockquote><h1 id="歌词"><a href="#歌词" class="headerlink" title="歌词"></a>歌词</h1><div class="table-container"><table><thead><tr><th style="text-align:center">Lyrics</th><th style="text-align:center">Song</th></tr></thead><tbody><tr><td style="text-align:center">每一个梦都是个旋律 漫天回忆该如何去聆听</td><td style="text-align:center">Step on your heart -心印-(Album ver) Luna Safari</td></tr><tr><td style="text-align:center">晨风中的一缕光 折射梦想的宽广</td><td style="text-align:center">Trii - Feel Your Dream 2018</td></tr><tr><td style="text-align:center">亲切的遥远 温柔的岁月 就是那样的一个世界</td><td style="text-align:center">枝江</td></tr><tr><td style="text-align:center">缓缓的河流绕过泛黄的长廊 她们的故事慢慢讲</td><td style="text-align:center">枝江</td></tr><tr><td style="text-align:center">如果还能找到你 就让风儿告诉你</td><td style="text-align:center">Artificial Emotions</td></tr><tr><td style="text-align:center">虚和实的叠重 光和影的交错 触摸流云和清风勾勒的美梦</td><td style="text-align:center">寻遍星空</td></tr><tr><td style="text-align:center">夜雾里去闪烁 光年外去诉说 让星辉照耀我浩瀚的宇宙</td><td style="text-align:center">寻遍星空</td></tr><tr><td style="text-align:center">风 将我的思绪打乱 也看不清未来 梦 穿越过人山人海 快要醒来</td><td style="text-align:center">化尘旅行</td></tr><tr><td style="text-align:center">阳光斜照进窗台，记忆皆化作尘埃</td><td style="text-align:center">化尘旅行</td></tr><tr><td style="text-align:center">将漂浮的声音都吞没 描绘着贝壳上的轮廓 趁暮色未干枯 让泪水藏匿那 未曾见过的颜色</td><td style="text-align:center">涟漪</td></tr><tr><td style="text-align:center">纵流光如水逝尽千年的河川 一梦又脉脉涨满</td><td style="text-align:center">流光逝梦</td></tr><tr><td style="text-align:center">曙神星的尘埃 镶嵌漆黑缎带 它们各自旋转 轨迹精密切开</td><td style="text-align:center">尘降</td></tr><tr><td style="text-align:center">琴瑟愿与 共沐春秋 滢溪潺潺 炊烟悠悠</td><td style="text-align:center">白石溪</td></tr><tr><td style="text-align:center">唱 你给我的梦想 在天空中回荡 就像那风一样 吹向四面八方</td><td style="text-align:center">唱给雅音宫羽Ⅱ</td></tr><tr><td style="text-align:center">没有叹息的别离 飘散在 十一月的秋风里</td><td style="text-align:center">浔阳江</td></tr><tr><td style="text-align:center">至少此刻我们的心意相连 愿那片纯蓝天空一般高远</td><td style="text-align:center">纯蓝</td></tr><tr><td style="text-align:center">寻觅着 风的波折</td><td style="text-align:center">世末歌者</td></tr><tr><td style="text-align:center">初夏的蝉鸣声 轻轻掠过耳边的风</td><td style="text-align:center">火花</td></tr><tr><td style="text-align:center">夏露秋霜，匆匆十载 记忆里的人都裁开</td><td style="text-align:center">梨花泽泽远山远</td></tr><tr><td style="text-align:center">踏上未知列车 一直飞到云层最高空</td><td style="text-align:center">一日都市</td></tr><tr><td style="text-align:center">在屏幕那边 天涯般遥远</td><td style="text-align:center">心跳同步的时光</td></tr><tr><td style="text-align:center">穿越过浩瀚星间 经历过无数世界 看时光交替更迭</td><td style="text-align:center">星愿StarWish</td></tr><tr><td style="text-align:center">接一片 落雪在温热掌心 街道光斑交映 排列节日的讯息</td><td style="text-align:center">冬去春来再尽年</td></tr><tr><td style="text-align:center">その日、眺めていた校庭は 薄く青い空が染みていて</td><td style="text-align:center">Euphoria</td></tr><tr><td style="text-align:center">偏离了航道 任黑夜吞噬 安静等待轨迹的放逐</td><td style="text-align:center">坠落星空</td></tr><tr><td style="text-align:center">觥筹恍惚交杯 劝留几小杯 棋逢红颜一醉 千军万马退</td><td style="text-align:center">苏幕遮</td></tr><tr><td style="text-align:center">寻寻觅觅 冷冷清清 月落乌啼月牙落孤井</td><td style="text-align:center">声声慢</td></tr><tr><td style="text-align:center">未实现的誓言 穿过似水华年 没写完的诗篇 应该如何重现</td><td style="text-align:center">不存在的夏天</td></tr><tr><td style="text-align:center">横平竖直点捺勾折皆变化 笔走龙蛇墨书春秋尽潇洒</td><td style="text-align:center">横竖撇点折</td></tr><tr><td style="text-align:center">聊以数笔写遍古今的繁华 出经入典顾自将历史传达</td><td style="text-align:center">横竖撇点折</td></tr><tr><td style="text-align:center">当火焰划破夜空 我落入银河雨中 当所有人抬起头 凝望着短暂的梦</td><td style="text-align:center">倒数到零</td></tr><tr><td style="text-align:center">天山千里雪 伸手拦一拦 花雕敬一盏 请为我开颜</td><td style="text-align:center">不问天</td></tr><tr><td style="text-align:center">若不是《浣溪沙》把《秋夜月》儿掩 我怎会困守《牧羊关》</td><td style="text-align:center">繁华唱遍</td></tr><tr><td style="text-align:center">我自那 皑皑冰川经行过 笔尖被霜雪尽然覆没</td><td style="text-align:center">烈火灼冰</td></tr><tr><td style="text-align:center">渐渐 渐渐 渐渐 我也将追逐遥远 循着八月的思恋</td><td style="text-align:center">夏日延长战</td></tr><tr><td style="text-align:center">曾经在天空绽放过的刹那烟火 熄灭后会落在城市的哪个角落</td><td style="text-align:center">刹那烟火，落尽清凉</td></tr></tbody></table></div><h1 id="人设"><a href="#人设" class="headerlink" title="人设"></a>人设</h1><h2 id="Vocaloid"><a href="#Vocaloid" class="headerlink" title="Vocaloid"></a>Vocaloid</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称A</th><th style="text-align:center">名称B</th><th style="text-align:center">归属</th></tr></thead><tbody><tr><td style="text-align:center">$\color{rgb(102,204,255)}{洛天依}$</td><td style="text-align:center">Luo Tianyi</td><td style="text-align:center">天矢禾念</td></tr><tr><td style="text-align:center">$\color{rgb(238,0,0)}{乐正绫}$</td><td style="text-align:center">Yuezheng Ling</td><td style="text-align:center">天矢禾念</td></tr><tr><td style="text-align:center">$\color{rgb(0,255,204)}{言和}$</td><td style="text-align:center">Yan He</td><td style="text-align:center">天矢禾念</td></tr><tr><td style="text-align:center">$\color{rgb(153,153,255)}{ 星尘Stardust }$</td><td style="text-align:center">Stardust</td><td style="text-align:center">平行四界</td></tr><tr><td style="text-align:center">$\color{rgb(238,130,238)}{心华}$</td><td style="text-align:center">Xin Hua</td><td style="text-align:center">上海望乘</td></tr><tr><td style="text-align:center">$\color{rgb(255,192,203)}{IA}$</td><td style="text-align:center">イア</td><td style="text-align:center">1st PLACE</td></tr></tbody></table></div><h2 id="Synthesizer-V"><a href="#Synthesizer-V" class="headerlink" title="Synthesizer V"></a>Synthesizer V</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">代表物</th><th style="text-align:center">团体 / 归属</th></tr></thead><tbody><tr><td style="text-align:center">赤羽</td><td style="text-align:center">正四面体</td><td style="text-align:center">五维介质 / 平行四界</td></tr><tr><td style="text-align:center">苍穹</td><td style="text-align:center">正八面体</td><td style="text-align:center">五维介质 / 平行四界</td></tr><tr><td style="text-align:center">诗岸</td><td style="text-align:center">六面体</td><td style="text-align:center">五维介质 / 平行四界</td></tr><tr><td style="text-align:center">海伊</td><td style="text-align:center">二十面体</td><td style="text-align:center">五维介质 / 平行四界</td></tr><tr><td style="text-align:center">星尘Minus</td><td style="text-align:center">梅塔特隆立方体（星形八面体）</td><td style="text-align:center">五维介质 / 平行四界</td></tr></tbody></table></div><h2 id="虚拟偶像"><a href="#虚拟偶像" class="headerlink" title="虚拟偶像"></a>虚拟偶像</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称A</th><th style="text-align:center">名称B</th><th style="text-align:center">团体 / 归属</th></tr></thead><tbody><tr><td style="text-align:center">嘉然(Diana)</td><td style="text-align:center">嘉然今天吃什么</td><td style="text-align:center">A-SOUL / 乐华娱乐 &amp; 字节跳动</td></tr><tr><td style="text-align:center">永远酱</td><td style="text-align:center">永远永远酱w</td><td style="text-align:center">独立Vup</td></tr><tr><td style="text-align:center">阿梓(Azusa)</td><td style="text-align:center">阿梓从小就很可爱</td><td style="text-align:center">VirtuaReal Link</td></tr><tr><td style="text-align:center">新科娘</td><td style="text-align:center">心萪</td><td style="text-align:center">CCTV新科动漫</td></tr><tr><td style="text-align:center">鸠羽伦</td><td style="text-align:center">鳩羽つぐ</td><td style="text-align:center">独立VTuber</td></tr><tr><td style="text-align:center">七海Nana7mi</td><td style="text-align:center">010</td><td style="text-align:center">VirtuaReal</td></tr><tr><td style="text-align:center">白神遥</td><td style="text-align:center">Shirakami Haruka</td><td style="text-align:center">Project SP</td></tr></tbody></table></div><h1 id="ACGN作品"><a href="#ACGN作品" class="headerlink" title="ACGN作品"></a>ACGN作品</h1><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">开始日期 ~ 完成日期</th></tr></thead><tbody><tr><td style="text-align:center">Re：从零开始的异世界生活</td><td style="text-align:center">2016.10 ~ 2016.12</td></tr><tr><td style="text-align:center">埃罗芒阿老师</td><td style="text-align:center">2017.4 ~ 2017.6</td></tr><tr><td style="text-align:center">BLACK★ROCK SHOOTER OVA</td><td style="text-align:center">2015.5 ~ 2017.7</td></tr><tr><td style="text-align:center">非人哉</td><td style="text-align:center">2019.1 ~ 2019.2</td></tr><tr><td style="text-align:center">刀剑神域 第一季</td><td style="text-align:center">2019.9 ~ 2019.9.30</td></tr><tr><td style="text-align:center">月色真美</td><td style="text-align:center">2017.4 ~ 2019.10.4</td></tr><tr><td style="text-align:center">云之彼端，约定的地方</td><td style="text-align:center">2019.10 ~ 2019.11</td></tr><tr><td style="text-align:center">Charlotte</td><td style="text-align:center">2020.7 ~ 2020.8</td></tr><tr><td style="text-align:center">Angel Beats!</td><td style="text-align:center">2017.10 ~ 2020.8</td></tr><tr><td style="text-align:center">我的妹妹不可能那么可爱 第一季</td><td style="text-align:center">2013.7 ~2020.8</td></tr><tr><td style="text-align:center">我的妹妹不可能那么可爱 第二季</td><td style="text-align:center">2013.7 ~ 2020.8</td></tr><tr><td style="text-align:center">魔法少女小圆</td><td style="text-align:center">2017 ~ 2021.9</td></tr><tr><td style="text-align:center">玉子市场</td><td style="text-align:center">2020.1 ~</td></tr><tr><td style="text-align:center">摇曳百合</td><td style="text-align:center">2017.9 ~</td></tr><tr><td style="text-align:center">境界的彼方</td><td style="text-align:center">2019.9 ~</td></tr><tr><td style="text-align:center">轻音少女</td><td style="text-align:center">2018 ~</td></tr><tr><td style="text-align:center">中二病也要谈恋爱</td><td style="text-align:center">2017 ~</td></tr><tr><td style="text-align:center">凉宫春日的忧郁</td><td style="text-align:center">2020.8 ~</td></tr><tr><td style="text-align:center">稻荷恋之歌</td><td style="text-align:center">2020.1 ~</td></tr><tr><td style="text-align:center">冰菓</td><td style="text-align:center">2021 ~</td></tr><tr><td style="text-align:center">樱花庄的宠物女孩</td><td style="text-align:center">2019 ~</td></tr></tbody></table></div><h2 id="动画电影"><a href="#动画电影" class="headerlink" title="动画电影"></a>动画电影</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">完成日期</th></tr></thead><tbody><tr><td style="text-align:center">大鱼海棠</td><td style="text-align:center">2016.7</td></tr><tr><td style="text-align:center">你的名字</td><td style="text-align:center">2017.10</td></tr><tr><td style="text-align:center">声之形</td><td style="text-align:center">2019.8</td></tr><tr><td style="text-align:center">天气之子</td><td style="text-align:center">2019.11.2</td></tr><tr><td style="text-align:center">HELLO WORLD 你好世界</td><td style="text-align:center">2020.3</td></tr></tbody></table></div><h2 id="视觉小说Visual-Novel"><a href="#视觉小说Visual-Novel" class="headerlink" title="视觉小说Visual Novel"></a>视觉小说Visual Novel</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">开始日期 ~ 完成日期</th></tr></thead><tbody><tr><td style="text-align:center">NEKOPARA Vol.0/1/2</td><td style="text-align:center">2016 ~ 2017.4</td></tr><tr><td style="text-align:center">妄想症：Deliver Me</td><td style="text-align:center">. ~ 2018.8</td></tr><tr><td style="text-align:center">美少女万华镜 1</td><td style="text-align:center">2017 ~ 2018.11</td></tr><tr><td style="text-align:center">KARAKARA 1</td><td style="text-align:center">2017 ~ 2019.7</td></tr><tr><td style="text-align:center">千恋*万花</td><td style="text-align:center">2019.8 ~ 2020.1</td></tr><tr><td style="text-align:center">魔女的夜宴</td><td style="text-align:center">2019.8 ~ 2020.2</td></tr><tr><td style="text-align:center">沙耶の唄</td><td style="text-align:center">2013.7 ~ 2020.2</td></tr><tr><td style="text-align:center">Doki Doki Literature Club!</td><td style="text-align:center">2019 ~ 2020.2</td></tr><tr><td style="text-align:center">君と彼女と彼女の恋</td><td style="text-align:center">. ~ 2020.2</td></tr><tr><td style="text-align:center">Narcissu 1st</td><td style="text-align:center">. ~ 2020.3</td></tr><tr><td style="text-align:center">Ever17 —the out of infinity—</td><td style="text-align:center">2019 ~ 2020.3</td></tr><tr><td style="text-align:center">しゅがてん!-sugarfull tempering-</td><td style="text-align:center">2020.1 ~</td></tr><tr><td style="text-align:center">恋×シンアイ彼女</td><td style="text-align:center">2020.1 ~ 2021.10</td></tr><tr><td style="text-align:center">Summer Pockets</td><td style="text-align:center">2020.1 ~</td></tr><tr><td style="text-align:center">eden*</td><td style="text-align:center">2020.2 ~</td></tr><tr><td style="text-align:center">三色绘恋 Tricolour Lovestory</td><td style="text-align:center">2020.1 ~</td></tr><tr><td style="text-align:center">Riddle Joker</td><td style="text-align:center">2020.2 ~</td></tr><tr><td style="text-align:center">枝江往事</td><td style="text-align:center">2021.7 ~</td></tr><tr><td style="text-align:center">恋爱绮谭~不存在的夏天~</td><td style="text-align:center">2019 ~ 2021.7</td></tr><tr><td style="text-align:center">LOOPERS</td><td style="text-align:center">2021.6 ~ 2021.9</td></tr><tr><td style="text-align:center">青空下的加缪</td><td style="text-align:center">2021.1 ~</td></tr><tr><td style="text-align:center">Clover Day’s</td><td style="text-align:center">2021.1 ~</td></tr></tbody></table></div><h2 id="轻小说"><a href="#轻小说" class="headerlink" title="轻小说"></a>轻小说</h2><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">完成日期</th></tr></thead><tbody><tr><td style="text-align:center">[伏见つかさ].我的妹妹不可能那么可爱</td><td style="text-align:center">2020.8</td></tr><tr><td style="text-align:center">[谷川流].第1卷 凉宫春日的忧郁</td><td style="text-align:center">2020.8</td></tr></tbody></table></div><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="Bilibili-Macro-Link-Visual-Release-2019"><a href="#Bilibili-Macro-Link-Visual-Release-2019" class="headerlink" title="Bilibili Macro Link-Visual Release 2019"></a>Bilibili Macro Link-Visual Release 2019</h2><iframe width="560" height="470" src="https://www.youtube.com/embed/yju-0-IOG1g" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="【⚡️-热-爱-1-0-5-°-C-的-然-然⚡️-】"><a href="#【⚡️-热-爱-1-0-5-°-C-的-然-然⚡️-】" class="headerlink" title="【⚡️ 热 爱 1 0 5 ° C 的 然 然⚡️ 】"></a>【⚡️ 热 爱 1 0 5 ° C 的 然 然⚡️ 】</h2><iframe width="560" height="470" src="//player.bilibili.com/player.html?aid=333835997&bvid=BV1bw411o7cq&cid=357902482&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><h2 id="【嘉然-100W庆祝】“我们只是朋友？”𝓕𝓻𝓲𝓮𝓷𝓭𝓼【MMD-PV】"><a href="#【嘉然-100W庆祝】“我们只是朋友？”𝓕𝓻𝓲𝓮𝓷𝓭𝓼【MMD-PV】" class="headerlink" title="【嘉然/100W庆祝】“我们只是朋友？”𝓕𝓻𝓲𝓮𝓷𝓭𝓼【MMD/PV】"></a>【嘉然/100W庆祝】“我们只是朋友？”𝓕𝓻𝓲𝓮𝓷𝓭𝓼【MMD/PV】</h2><iframe width="560" height="470" src="//player.bilibili.com/player.html?aid=335530733&bvid=BV1mA411F7Cg&cid=411848579&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><h2 id="“想把夏天的橘子汽水，卖给颜料用完的梵高。”-【4K-完整版】"><a href="#“想把夏天的橘子汽水，卖给颜料用完的梵高。”-【4K-完整版】" class="headerlink" title="“想把夏天的橘子汽水，卖给颜料用完的梵高。” 【4K/完整版】"></a>“想把夏天的橘子汽水，卖给颜料用完的梵高。” 【4K/完整版】</h2><div><iframe width="560" height="470" src="https://player.bilibili.com/player.html?aid=804307307&bvid=BV1fy4y1L75s&cid=373333986&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏日小日记</title>
      <link href="/2021/diary_1/"/>
      <url>/2021/diary_1/</url>
      
        <content type="html"><![CDATA[<p>o(=•ェ•=)m  以此或多或少记录下一点暑假的生活 \(￣︶￣*\))</p><a id="more"></a><hr><h1 id="6-7-6-10"><a href="#6-7-6-10" class="headerlink" title="6.7-6.10"></a>6.7-6.10</h1><p>6.7第一天上午语文没什么特殊的地方，中规中矩弄完，十分幸运地在文言文翻译提笔忘字，诗歌看不太懂写了一堆废话（大概是寄了😭，发现选择也错了），考完感觉就……还挺正常的。</p><p>中午食堂的饭挺好吃的，也不想多聊天。</p><p>下午好热，考试的时候特别焦燥，数学选择第八题把概念弄错了，然后第十二题匆匆看完AB选项选了一个不太想接着做了，接着……第四个填空第二个空算错好几次，最后还把n写成k了日。这时候已经快开考一个小时了，心里开始很慌张，第三个大题写成了$cos(A)=cos(\pi-A)$😅，第四个大题把底面画错了，虽然后面做对了可都错了靠前的步骤，第五第六个大题就剩了15分钟，匆匆写了一问，圆锥联立韦达了一下，导数考的东西学得也不太会。考完出来就烦得要命，还特别热……想了想也很无奈，不过我同桌勇敢对答案发现比我更爆，不想说什么了。（同桌已经寄了</p><p>晚上想了想发现写错了字母……心态有点不太好。</p><p>第二天上午来了聊聊天，课间出去走了走，心里估计可能只能上600分了（事实也是这样）。</p><p>下午英语的难度刚好能让我看懂，到时间刚刚写完作文，挺正常的。这两天搬到了实验室，圆凳真是坐得让人腰疼得要死🥵。心态还算好，希望化学别裂开。</p><p>第三天物理前面都还好，最后一题出个弹簧一直都不太会，估计没分了。化学单选都记不清知识点，多选后两个依然不会，有机倒是倒推完，就能全写出来了，最后一题发挥想象力编了几个空上去。</p><p>晚上一直在想考完怎么玩半天没睡着……</p><p>最后一天考试的时候下起来了雨，感觉很期待结束，但是也不着急。生物多选后四个可能都单选了，遗传就会前三个空，基因工程一个不会，猜了一个酶切位点和用想象力写满了这个题，考完两个大题只会三个空，都不好说什么了。挺难受的……最有把握的数学就这么寄了😥。出来还下大雨，淋了半天才出校门😰。</p><p>出了成绩感觉和想象的差不多，……算了算分报山大怕是要上天坑专业，不去了，提前批报了哈工大威海，本一批随便报了点。最后……专业没去什么天坑🥰，我真是感恩戴德。</p><h1 id="6-10-6-30"><a href="#6-10-6-30" class="headerlink" title="6.10 - 6.30"></a>6.10 - 6.30</h1><p>6月10日中午天晴了，去河边转了转，下午回去收拾了教室。很怅然若失吗？</p><p>6月23日去了毕业典礼，去了机房，也是最后一次回高中。</p><h1 id="7-1-7-28"><a href="#7-1-7-28" class="headerlink" title="7.1 - 7.28"></a>7.1 - 7.28</h1><p>考了科目一，玩游戏，买了csgo深海复仇的ak47皮肤，又买了只狼、死亡细胞、undertale、恋爱绮谭，报志愿，查录取结果，买了电脑和ipad。</p><h1 id="7-29"><a href="#7-29" class="headerlink" title="7.29"></a>7.29</h1><p>台风到了但是雨下得不是特别大，早晨起来先给域名续了费，namesilo买的xyz域名，第一年0.99美元，续费9.29美元，namesilo用起来还是挺靠谱的。</p><p>现在早上要去练车，不过下雨了难得放个假，早饭先去吃了一包火鸡面，依旧是等录取通知书的一天。</p><p>终于收集够了原神雪山的80个绯红玉髓，因为我想要那个翅膀……</p><p>今天把台式机上的博客源文件之类的东西用局域网转移到笔记本上来了。</p><p>晚上和同学打csgo和gta5，麦克风又出了点小问题，调了半天。</p><h1 id="7-30"><a href="#7-30" class="headerlink" title="7.30"></a>7.30</h1><p>今天上午接着练车，倒车入库……</p><p>中午apple pencil到了，ems还要签收签字，不得不说ems送件员工的工作态度是真的好。</p><p>好像要下周三才能发录取通知书了= =真是绝了。</p><p>中午雨过天晴后难得有这么清澈的阳光啊了，天很蓝。</p><p>又睡了一下午，不怎么想玩了，随便翻翻书了，晚上想看看K-On，或许是因为看到了某虚拟偶像的事。</p><p>不知不觉就快到八月了。</p><h1 id="7-31"><a href="#7-31" class="headerlink" title="7.31"></a>7.31</h1><p>上午练车，其余时间睡觉。</p><h1 id="8-1"><a href="#8-1" class="headerlink" title="8.1"></a>8.1</h1><p>睡觉，拿ems快递，试水airpods听听歌，漫无止境的八月到了。</p><h1 id="8-2"><a href="#8-2" class="headerlink" title="8.2"></a>8.2</h1><p>中午把node.js环境之类的东西配一下，设置一下github的ssh密钥，调整了一下blog。</p><h1 id="8-3"><a href="#8-3" class="headerlink" title="8.3"></a>8.3</h1><p>光猫坏了……等明天来修，出去骑车转转。</p><h1 id="8-4"><a href="#8-4" class="headerlink" title="8.4"></a>8.4</h1><p>今天不用练车，录取通知书终于发货了，ems应该明天就能到。</p><h1 id="8-5"><a href="#8-5" class="headerlink" title="8.5"></a>8.5</h1><p>中午通知书到了，开箱。</p><p>下午找同学玩，交流一番，有可爱的猫猫和狗，喝了咖啡豆磨的咖啡。</p><h1 id="8-6"><a href="#8-6" class="headerlink" title="8.6"></a>8.6</h1><p>在家，无事，阅读CSAPP，浏览bilibili、zhihu等网络平台</p><h1 id="8-7"><a href="#8-7" class="headerlink" title="8.7"></a>8.7</h1><p>立秋，下午试了试<a href="https://twitter.com/ameshiokiri/status/1424054632985161729" target="_blank" rel="noopener">基岩版我的世界光线追踪</a>，晚上和同学出去聊天，回忆高中生活。</p><h1 id="8-8"><a href="#8-8" class="headerlink" title="8.8"></a>8.8</h1><p>晨起，写一点东西。</p><p>下午去工商银行改一下预留信息……</p><p>买了ipad保护套。</p><h1 id="8-9"><a href="#8-9" class="headerlink" title="8.9"></a>8.9</h1><p>睡了一天觉，买了《心庭荧彩》</p><h1 id="8-10"><a href="#8-10" class="headerlink" title="8.10"></a>8.10</h1><p>中午看了一点CSAPP，下午和同学玩你画我猜，接龙模式笑死了。买了个四级的题看看。</p><h1 id="8-11-8-25"><a href="#8-11-8-25" class="headerlink" title="8.11 - 8.25"></a>8.11 - 8.25</h1><p>开箱ipad，用ipad试试看了一点网络的书。看了一点数字电路</p><p>20号去考了科目二，好累……</p><p>和同学出去吃火锅</p><p>收拾了开学物品</p><h1 id="8-26"><a href="#8-26" class="headerlink" title="8.26"></a>8.26</h1><p>初中同学聚会</p><h1 id="8-27"><a href="#8-27" class="headerlink" title="8.27"></a>8.27</h1><p>来报到，去领了好多小礼品</p><h1 id="8-28"><a href="#8-28" class="headerlink" title="8.28"></a>8.28</h1><p>早上去工商银行补办了因为曾用名问题没有随录取通知书寄送的银行卡</p><h1 id="8-30"><a href="#8-30" class="headerlink" title="8.30"></a>8.30</h1><p>上午下雨，下午开学典礼，躺平</p><h1 id="8-31"><a href="#8-31" class="headerlink" title="8.31"></a>8.31</h1><p>军训，下大雨，躺平</p><h1 id="9-1"><a href="#9-1" class="headerlink" title="9.1"></a>9.1</h1><p>军训，去海边拉练，听各种讲座，本篇至此结束</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一切都结束了</title>
      <link href="/2021/end_1/"/>
      <url>/2021/end_1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>也确实到了结束的的时候了</p></blockquote><a id="more"></a><p>我的高中生活就这么结束了，很多时候确实是有趣的，但都很遥远，也很模糊了。</p><p>我一直能回想起各种各样的事，以后可能会再慢慢记录下来吧。</p><p>最终的纪念品</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/end_1_1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/end_1_2.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MMD制作简介</title>
      <link href="/2020/MMD/"/>
      <url>/2020/MMD/</url>
      
        <content type="html"><![CDATA[<p>刚刚做的：【MMD/洛天依】你是分割我人生的线 又将它们相连~勾指起誓 [1080p60fps]</p><a id="more"></a><div class="bilibili">    <iframe src="//player.bilibili.com/player.html?aid=541799937&bvid=BV1Ci4y1g7Aq&cid=226185631&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><p>做了一个MMD</p><p>先写一下用到的所有内容</p><hr><p>模型：TDA 改变学院风洛天依.pmx by 星空下の轩雨</p><p>动作：勾指起誓-柔美版-动作数据.vmd by-2TIGers（呆喵挠琴）</p><p>镜头：(Camera DL) 勾指起誓.vmd by SakuraHayato</p><p>场景：skura no ame.pmx by 挽挽姌<br>School_Desk_Chair_TypeA.pmx by 下校</p><p>MME：Rui_cg：ray-mmd-1.5.0<br>そぼろ：AutoLuminous4,Diffusion7<br>おたもん：likelooksBY<br>ビームマンP：Sakura_v2_32_64_MMM<br>iKeno,RedialC：ikClut_RC<br>ikeno：ikBokeh</p><p>工具：Miku Miku Dance<br>Adobe Premiere Pro<br>Adobe After Effects</p><hr><p>简单讲一下制作步骤</p><h1 id="获取软件及资源并学习"><a href="#获取软件及资源并学习" class="headerlink" title="获取软件及资源并学习"></a>获取软件及资源并学习</h1><p>如果制作一个MMD主要需要场景、人物模型、动作数据等，如果我们需要用到别人制作好的内容时，在作者允许使用的情况下注明原作者，即写清借物表。如果选择自己制作，可以制作其中的一项数据，比如使用3D建模软件例如Blender等制作场景及人物模型，在MMD中编辑动作数据等。</p><h2 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h2><p>我提供一个</p><blockquote><p><a href="https://pan.baidu.com/s/1yJnCEJI6fSHhH3IkNHM4nA" target="_blank" rel="noopener">https://pan.baidu.com/s/1yJnCEJI6fSHhH3IkNHM4nA</a>  pnx9</p></blockquote><h2 id="资源获取"><a href="#资源获取" class="headerlink" title="资源获取"></a>资源获取</h2><p>善用搜索引擎可以解决大部分问题</p><p>介于之后需要访问大量墙掉的网站，需要准备某些工具，并且需要会在GitHub网页上进行阅读及操作和在大量日文网站上进行操作，所以还需要一个带有翻译功能的浏览器。</p><p>参考：<a href="https://web.archive.org/web/20160622040846/http://konobaka.com/post/400994_16e51be" target="_blank" rel="noopener">https://web.archive.org/web/20160622040846/http://konobaka.com/post/400994_16e51be</a> (已删除，使用wayback machine查看，需要某些工具)</p><p><a href="https://xywiki.com/MMD" target="_blank" rel="noopener">https://xywiki.com/MMD</a></p><p><a href="https://blog.csdn.net/NSJim/article/details/105743730" target="_blank" rel="noopener">https://blog.csdn.net/NSJim/article/details/105743730</a></p><p>以上是几篇对各种内容介绍比较全的文章</p><p>这是MME的资源站点：<a href="https://w.atwiki.jp/vpvpwiki/pages/272.html" target="_blank" rel="noopener">https://w.atwiki.jp/vpvpwiki/pages/272.html</a></p><p>你会经常访问到的网站：<a href="https://seiga.nicovideo.jp/" target="_blank" rel="noopener">https://seiga.nicovideo.jp/</a></p><p><a href="https://www.nicovideo.jp/" target="_blank" rel="noopener">https://www.nicovideo.jp/</a></p><p><a href="https://bowlroll.net/" target="_blank" rel="noopener">https://bowlroll.net/</a></p><p>一些MME资源：<a href="https://onedrive.live.com/?id=EF581C37A4524EDA%21108&amp;cid=EF581C37A4524EDA" target="_blank" rel="noopener">https://onedrive.live.com/?id=EF581C37A4524EDA%21108&amp;cid=EF581C37A4524EDA</a> （注意是onedrive，需要使用工具）</p><p>我提供一些，东西挺多的：<a href="https://pan.baidu.com/s/1whV2t1uWZHxvq63K3McKkg" target="_blank" rel="noopener">https://pan.baidu.com/s/1whV2t1uWZHxvq63K3McKkg</a>  i5b1</p><h2 id="学习软件及MME使用"><a href="#学习软件及MME使用" class="headerlink" title="学习软件及MME使用"></a>学习软件及MME使用</h2><p>出现问题善用搜索引擎</p><p>参考：<a href="https://www.bilibili.com/read/cv135853" target="_blank" rel="noopener">https://www.bilibili.com/read/cv135853</a> </p><p><a href="https://space.bilibili.com/11831050" target="_blank" rel="noopener">https://space.bilibili.com/11831050</a></p><p><a href="https://www.bilibili.com/read/cv2529911" target="_blank" rel="noopener">https://www.bilibili.com/read/cv2529911</a></p><h1 id="进行MMD制作并导出原始文件"><a href="#进行MMD制作并导出原始文件" class="headerlink" title="进行MMD制作并导出原始文件"></a>进行MMD制作并导出原始文件</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd1.png" alt></p><p>注意看一下上面的界面，首先除音频外所有内容都可以直接拖拽进入程序内，左下角第二栏是切换.pmx文件控制的内容的，在模型操作栏内切换到照明一栏时，在附件操作栏内可以切换.x文件控制的内容，右上角MMEffect控制部分MME的功能。其余内容不复杂，可以用b站或搜索引擎简要学习，或者说哪里需要使用就学习哪个部分。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd2.png" alt></p><p>导出时帧率选择60fps，录制范围选择0~结束帧，不要勾选导出音频，可能出现bug，在后期编辑的时候加入音频。</p><p>注意选择空余较大的硬盘分区，一分钟1080p60fps原始视频会占用大约30G空间。</p><h1 id="后期处理及压制"><a href="#后期处理及压制" class="headerlink" title="后期处理及压制"></a>后期处理及压制</h1><h2 id="后期处理"><a href="#后期处理" class="headerlink" title="后期处理"></a>后期处理</h2><p>后期编辑时我们需要使用编辑软件加入音频，进行剪辑以及其他操作，推荐使用Pr和Ae。</p><p>我们看一下Pr的界面。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd3.png" alt></p><p>我们可以直接把需要的资源拖拽到左侧一栏中，在右侧下方一栏，下方四条轨道是音轨，我们把音频拖拽到上方，然后可以选择顶栏的音频一项进行调整。上方四条轨道是四个图层，上方的图层可以覆盖下方的图层，并且可以新建图层，这里我们把视频放在V1图层并且把视频和音频轨道对齐，多个视频也要对其，上方的图层可以增加特效和字幕，这里我用Ae制作字幕，V4轨道的字幕在右侧，V3轨道的字幕在左侧，在导出时一定要注意选择视频码率和音频码率及采样率，选择H.264即mp4格式，注意分辨率帧率保持与原视频一致。如果需要不被b站二压的话视频码率不能超过6000 KB/s，音频码率不能超过320 KB/s，并且采样率一定要为44100 Hz。</p><p>参考b站官方的规定：</p><blockquote><p><a href="http://www.bilibili.com/read/cv311112" target="_blank" rel="noopener">http://www.bilibili.com/read/cv311112</a></p><p><a href="http://www.bilibili.com/read/cv527957" target="_blank" rel="noopener">http://www.bilibili.com/read/cv527957</a></p></blockquote><p>Pr Ae的导出快捷键都是<code>Ctrl+M</code>，这里看一下导出界面，一定注意红框内的内容是否正确。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd4.png" alt></p><p>然后我们看一下Ae的这个字幕是怎么做的。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd5.png" alt></p><p>首先单击<code>新建合成</code>，注意接下来弹出的合成设置，将分辨率和帧速率设置成与你的视频相同，持续时间我们选10s。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd6.png" alt></p><p>接下来看下图，我们先单击1箭头指向的按钮，使画面变为透明，然后使用2箭头的工具在视频中选择合适的位置书写字幕。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd7.png" alt></p><p>之后在右侧一栏中调整字体等内容。最后我们制作特效。</p><p>选择<code>菜单栏-窗口-效果和预设</code>，之后在右侧出现这一栏内容，选择其中的<code>*动画预设-Text-Blurs-蒸发</code>拖动到字幕上，当然也可以是其他内容。这个效果仅有出场效果，所以我们点击字幕，按下<code>u</code>键，找到动画的关键帧，两个关键帧分别为动画开始与动画结束。接下来用鼠标拖动选中两个关键帧并移动位置，之后按下复制快捷键复制两个关键帧，而后移动箭头，然后按下粘贴快捷键粘贴到前方，这时交换前方两个关键帧的位置，后方两个关键帧保持不变，这样前方的动画就变成了入场效果。最后调整这四个关键帧的位置，并且选择上方的第二行的按钮进行切片。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd8.png" alt></p><p>最后进行导出，按下<code>Ctrl+M</code>，按123步骤操作下图界面。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd9.png" alt></p><p>步骤1：如图进行调整，如果没有安装QuickTime就去安装。<br>步骤2：选择输出路径。<br>步骤3：点击渲染。<br><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/mmd10.png" alt></p><p>最后将输出好的mov文件拖拽进入Pr进行对轨操作即可，如果有重合的部分可以用两条轨道交错放置字幕。</p><h2 id="压制"><a href="#压制" class="headerlink" title="压制"></a>压制</h2><p>参考：<a href="https://www.bilibili.com/read/cv954478/" target="_blank" rel="noopener">https://www.bilibili.com/read/cv954478/</a> </p><p>使用小丸工具箱即可，可以先压制再在Pr中进行编辑。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MMD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>烦躁沉寂的八月</title>
      <link href="/2020/august/"/>
      <url>/2020/august/</url>
      
        <content type="html"><![CDATA[<blockquote><p>蝉时雨 化成淡墨渲染暮色</p></blockquote><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/august1.png" alt></p><p>喜出望外（概率之中）地获得了20天假期，它被一如既往地在虚幻中无情地消耗殆尽而不留一点痕迹。在大量的睡梦中，这些假期被我无情的浪费了。计划好好写的作业只有物理生物语文都好好写了，罢了，已经没有什么耐心了。总之，时间过得如此之快，在还没有觉察之前它就已经悄然消逝了。</p><p>八月的前几天是如此的燥热，空气沉闷得让人无法呼吸，我们只好打开空调以求得一丝舒适的机会。而后十几天却开始了大量的降雨，在北方这和往年是一样的，只不过比起去年来说下雨的次数频繁些，降雨量小些。</p><p>天气从那时开始便一天比一天凉爽了，这样忙里偷闲日子也终将结束。</p><p>放假以来我发现我对游戏完全失去了兴趣，没有任何欲望在可以趋使我打开那些各式各样的游戏。其他时间，我看了看动画片，这是个挺有趣的事，毕竟我之前几年很少看什么动画之类的东西。还有便是看了看C#和unity罢了，其他时间也没干什么。</p><p>毕竟只是自己在寻找这什么意义而已吧，毕竟这样压抑的生活就没什么有趣的。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jsDelivr+PicGo对图片进行cdn加速</title>
      <link href="/2020/cdn/"/>
      <url>/2020/cdn/</url>
      
        <content type="html"><![CDATA[<p>GitHub Pages上图片的访问速度不佳，而且使用不便，现在来用<code>GitHub+jsDelivr+PicGo</code>解决这个问题。</p><a id="more"></a><h1 id="一、新建GitHub仓库"><a href="#一、新建GitHub仓库" class="headerlink" title="一、新建GitHub仓库"></a>一、新建GitHub仓库</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/cdn2.png" alt></p><h1 id="二、生成token，保存"><a href="#二、生成token，保存" class="headerlink" title="二、生成token，保存"></a>二、<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">生成token</a>，保存</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/cdn3.png" alt></p><h1 id="三、下载PicGo，安装"><a href="#三、下载PicGo，安装" class="headerlink" title="三、下载PicGo，安装"></a>三、下载<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a>，安装</h1><p>使用手册：<a href="https://picgo.github.io/PicGo-Doc/zh" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Doc/zh</a></p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/cdn4.png" alt></p><h1 id="四、配置PicGo"><a href="#四、配置PicGo" class="headerlink" title="四、配置PicGo"></a>四、配置PicGo</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/cdn1.png" alt></p><h1 id="五、使用"><a href="#五、使用" class="headerlink" title="五、使用"></a>五、使用</h1><p>直接引用使用方法：<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code> </p><p>如果不写版本号，将直接引用最新版 </p><p>其它：如果需要使用版本号就在release发布，一次不超过50MB。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些metagame的介绍与评价（无剧透）</title>
      <link href="/2020/metagame/"/>
      <url>/2020/metagame/</url>
      
        <content type="html"><![CDATA[<p>meta这个概念最早源于元小说（Metafiction），比如乔斯坦·贾德的《苏菲的世界》就属于这一类小说。</p><a id="more"></a><blockquote><p>后设小说（英语：Metafiction）又称元小说、超小说，是一种小说类型，透过自我意识的觉醒，刻意凸显书中虚构的错觉。威廉·加斯在1970年〈哲学与小说形式〉一文中首度提出“后设小说”的说法。典型的写作技巧包括将原先的剧情设定为一件文学作品，随后揭露故事的“真相”。后设小说透过讽刺和自我反省等手法，引导读者思考小说与现实之间的关联，进而有意识、有组织地探讨小说本身的虚构性。<br>出自：<a href="https://zh.wikipedia.org/wiki/%E5%BE%8C%E8%A8%AD%E5%B0%8F%E8%AA%AA" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%BE%8C%E8%A8%AD%E5%B0%8F%E8%AA%AA</a></p></blockquote><p>meta游戏与元小说类似，都会与现实中的读者或游玩者产生一定的交互，如同元小说会突出小说本身的虚构性，meta游戏也会着重显明自身世界的编程程序性或与该世界与玩家世界的关联性（我会将其分为程序代码型和平行世界型两种类型）并引导真实世界的游玩者通过游戏程序机制来获取到游戏世界本身并不具有的能力以此来改变游戏剧情，最终模糊虚拟和现实的边界。</p><p>程序代码型的游戏会和计算机本身产生一定的交互，并需要通过游戏程序以外的计算机内部操作完成游戏剧情的推进，或（且）会明确游戏本身是程序运行的结果。</p><p>平行世界型的游戏不会对计算机产生交互，但你可以通过自己的外部操作（存档/读档）改变平行世界的剧情走向，或（且）会明确游戏本身是独立于程序存在的一个世界，但程序可以改变此世界的一些时间线。</p><p>一般来说虽然meta游戏中你都可以完全操控主角的操作，但程序代码型会倾向于使你对游戏本身产生更多的操作，同时从前期就开始就强调主角和游玩者是两个不同的角色，而平行世界型一般会在后期点明游玩者的介入性，并强调主角对游玩者的操控性，但不会着重强调这两个角色的区分性和发挥的不同作用。</p><p>meta游戏的最主要特点是将真实世界中的游戏玩家作为游戏内容本身的参与者而不是游戏角色的操控者，也常常会有种说法指明meta游戏打破了第四面墙（显示器屏幕）。</p><!--more--><h1 id="Ever17-—the-out-of-infinity—-时空轮回"><a href="#Ever17-—the-out-of-infinity—-时空轮回" class="headerlink" title="Ever17 —the out of infinity— 时空轮回"></a>Ever17 —the out of infinity— 时空轮回</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta1.jpg" alt></p><p>平行世界型</p><p>AVG/galgame，科幻悬疑，设定不是非常非常科学但还是很有科学因素的，前期流程非常冗长无趣，主要体验最后解密快感。强烈推荐优先游玩此游戏，可以说此游戏也十分独特，且不存在惊吓和血腥内容。</p><h1 id="Doki-Doki-Literature-Club-心跳文学部"><a href="#Doki-Doki-Literature-Club-心跳文学部" class="headerlink" title="Doki Doki Literature Club 心跳文学部"></a>Doki Doki Literature Club 心跳文学部</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta2.jpg" alt></p><p>程序代码型</p><p>AVG/<del>galgame</del>，剧情简短明确，流程在2h左右，主要体验比较独特的吓人方式，游戏制作方不建议心理承受能力差及13岁以下人群游玩。</p><h1 id="君と彼女と彼女の恋"><a href="#君と彼女と彼女の恋" class="headerlink" title="君と彼女と彼女の恋"></a>君と彼女と彼女の恋</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta3_1.webp" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta3_2.webp" alt></p><p>程序代码型</p><p>AVG/<del>galgame</del>，部分精神污染极其严重，不要轻易尝试，有画面反色，文件修改等内容。前期的画面非常不错，淡色且偏水彩风格，适合看风景，前期一些设定让你一度以为这是个科幻故事，我倒是挺希望偏向一个科幻来叙事的，但是最后还是说归结到了计算机和程序这种设定上。总的来说也是很独特的游戏，这种风格的游戏几乎找不出第二个了。</p><h1 id="Undertale"><a href="#Undertale" class="headerlink" title="Undertale"></a>Undertale</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta4.webp" alt></p><p>平行世界型</p><p>RPG游戏，总体来说也非常新奇，有很独特的地方，值得一玩。</p><h1 id="Oneshot"><a href="#Oneshot" class="headerlink" title="Oneshot"></a>Oneshot</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta5.jpg" alt></p><p>程序代码型</p><p>冒险解谜游戏，一周目通关，部分解谜方式很新颖，会和你的计算机本身有所交互，没有在别的游戏里见过。二周目的剧情比较完善，也令人有所感动。缺点在于寻找东西的解谜就略显枯燥。</p><h1 id="艾希-Icey"><a href="#艾希-Icey" class="headerlink" title="艾希 Icey"></a>艾希 Icey</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta6.jpg" alt></p><p>程序代码型</p><p>横版动作游戏，没有玩过，偏重于计算机方面的设定，平面砍杀，类似于空洞骑士。</p><h1 id="史丹利的寓言-The-Stanley-Parable"><a href="#史丹利的寓言-The-Stanley-Parable" class="headerlink" title="史丹利的寓言 The Stanley Parable"></a>史丹利的寓言 The Stanley Parable</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta7.jpg" alt></p><p>程序代码型</p><p>冒险解谜游戏，有一些场景会有不安的感觉，本身内容不算太多，一共有十几个左右的结局。</p><h1 id="恋爱绮谭-不存在的夏天"><a href="#恋爱绮谭-不存在的夏天" class="headerlink" title="恋爱绮谭~不存在的夏天~"></a>恋爱绮谭~不存在的夏天~</h1><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/meta_8.jpg" alt></p><p>平行世界型</p><p>这部游戏的meta成分很少，寥寥几句话，但在国产galgame中是我见过的最新奇的一部作品了。<br>整个题材融合了虚拟主播、都市怪谈、中国传统灵异设定、MtF、校园恋爱、悬疑以及部分科学性的解释、各种让人会心一笑的梗、一些故事和哲学的讨论、结尾的meta元素也不显突兀。<br>不存在的夏天这一游戏名也一语双关，玩到后期我才明白这个名字的巧妙之处。<br>总体来说虽然分离的故事在一开始关联性不强，但在最后给出的解释都比较合理，串联起了不同人的故事，各种悬疑也都在后期给出逻辑上并不问题的答案，对于悬疑性的体验还是不错的。<br>我个人比较喜欢这种能融合各种现实元素的游戏，只得一提的便是游戏创新性设计的手机系统、前后文字位置的变化和声字不同的设计都显示出了这部游戏设计的独特之处，可以肯定这款游戏代表了国产galgame的一流水平。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> metagame </tag>
            
            <tag> galgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人价值与集体价值的统一性</title>
      <link href="/2020/marxist_philosophy_1/"/>
      <url>/2020/marxist_philosophy_1/</url>
      
        <content type="html"><![CDATA[<p>疫情上课考试的摸鱼小作文……</p><center> 个人价值与集体价值的统一性</center>  <p>​       出生于21世纪初的中国人，面临着市场经济的全面到来以及个人主义价值观的输入，同时经历着传统马克思主义哲学以及阶级史观的教育，产生了更加复杂、不同于以往的思想。</p><p>从社会生活的社会生活中即可窥见其现象：当前很多学生崇尚自由。要学习街舞、各种各样的艺术，要有个性，打扮要与众不同，要生活随性，要有“仪式感”与“小确幸”。这一类人更多崇尚个人价值的实现与生活自由的实现。</p><p>​       更加多的一部分人是无法做到这样的自由的：保家卫国的解放军、山火中悄然逝去的消防员、从事科研事业的科学家、兢兢业业的基础设施工人。当他们完成了对社会的建设与保护，为集体价值做出了奉献，却没有资格崇尚个人的自由。可以看到，有了一部分人的自由，就没有了大多数人的自由。</p><p>​       这样一部分人是只注重的自己的自由，他们更希望别人不自由，让自己好自由，做到了“心中有我”，还觉得是自己创造了社会价值，自己是社会的后浪。当然，也可以观察到，绝大部分人仍然感动于默默无闻、辛辛苦苦奉献的人，他们也明白是这一部分人让他们自由，让他们有了实现个人价值的机会，更加感动于“心中无我”的境界，他们更加矛盾，为什么劳动、奉献、付出是正确的，周围的人、周围的事总是不让自己成为这样的人。</p><p>​       这是一个崇尚英雄的时代，传统的教育和意识形态影响让我们没有忘记新中国的根是什么，我们仍然知道社会生产的基础仍然是工人与无产阶级，但是近四十年的现实却让我们不断怀疑这些。要知道，崇尚英雄的时代只是最近的时代，是靠宣传力量才勉强实现的。几年前推崇歌颂马云等资本家、抹黑英雄人物的思想层出不穷，这是由资本主义生产方式的现实决定的意识。人们笃信着用成功学就能实现个人价值的实现，并为之践行。</p><p>​       现在更多的人发现自由从来不属于他们，成功是资本家的成功，自己只是奉献剩余价值还叫好、叫着自己多自由的一无所有的人。他们不禁怀疑什么才是对的，并开始关心英雄人物，思考是谁给了他们生存的条件。他们就是既崇尚自由又崇尚英雄的人。以前的人更加关心集体价值，忽视了个体存在的价值。后来的人更关心自己，忽视集体的作用。现在的人才意识到，先关心集体价值，才有实现自己的自由与个人价值的可能性。</p><p>​       可以看到任何个人价值的实现都以集体价值的实现为前提。举几个例子：没有阿里巴巴所有程序员的工作不会有马云的成功，没有消防员，解放军，医生等社会基础职业的人的工作就没有其他人安全生存的条件，没有整个社会生产活动的进行，就没有具体到个人的享受生活的条件。这样来看，个人价值依附于集体价值，个人价值与集体价值实质上是统一的。</p><p>​       就像大海上后浪接着前浪，浪花下面才是深不见底的海水与底层的岩石，没有这些就没有后浪。没有集体价值的实现就不会有个人价值的实现，先做到“心中无我”，才能有“心中有我“。只做到“心中有我”，只能是建立在剥削他人之上的个人自由。先做到了“心中无我”，最终才能实现人人都能“心中有我”。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我接触与学习编程及OI的经历</title>
      <link href="/2020/about-program/"/>
      <url>/2020/about-program/</url>
      
        <content type="html"><![CDATA[<p>想来自己接触编程的时间真的不算短了，也是三年多了，但是没有学会太多的知识，其原因一是没有坚持在闲暇的时候学习，自己也一直缺少主观的动力去努力学习，二是自己实践得少，没有全面的知识体系，解决问题的过程中编程容易陷入困难以至于放弃。虽然自己知识浅薄，但是编程的确是我一直喜欢的一项事物，在这里我简单写写这几年的编程学习经历吧。</p><h1 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h1><p>2016年快要到了末尾，初中同学总是与我聊起些计算机方面的话题，不过仅限于些PC硬件，PS之类的平淡无奇的东西罢了，我也没什么动力去学习编程，尽管前几年一直对此方面非常感兴趣，也有意向去尝试，可我的确是不敢勇于尝试，也就是不愿跨出第一步去接触新事物罢了。</p><p>不过有一天，一位同学给我看了一本书：《零基础学C语言》，据他所说仅仅是在书店买了一本，我看了看觉得不算很难，正巧当时在知乎看了一些编程的问题，也有兴趣学C语言，就顺理成章的买了一本，的确算不上一流的教材，不过庆幸的是我没有选择谭浩强之类的时代产物，也没有去看至于到诸如《C Primer Plus》等可能略微劝退我的书籍。现在依稀记得对于反码补码之类的东西理解有一些难度，不过还是很有兴趣的看完了，也写出了第一个Hello world，当时我很少写代码，大部分时间花都在翻翻书，还觉得程序框图挺有趣的，记得书上写了一些五子棋之类的游戏，当时也没全看懂。</p><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><p>书自然是看完了，可是会写多少了吗？恐怕不是的。而后呢？自然没有多大的兴趣，只记得自己把书看懂了，后来也没有写过几次C语言罢了，曾经安装过python环境，也没有去写。</p><p>暑假的时候，在一些事情的影响下决定想学一学OI，自然开始看C++，因为比较底层的内容比如指针和二进制编码理解的还比较好所以几乎没什么阻力，当然没有看多少OOP的知识，然后就开始写写简单的OI题，看看数论，算法之类的，但是的确是非常水，贡献了很多时间给MC，B站之类的，于是到11月连DFS也写不熟练。就是这样去普及组水了个1=，当然本身也得顾及学习，况且是开学后才开始学算法的。</p><p>之后我对编程迅速失去兴趣，并投入大量时间给Steam，半年没写代码。主要原因是没什么目的，也没接去接触开源社区，不太明白怎么用网络学习新技术。大概还是动力和兴趣不足。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><p>从四月开始到年底的时间都花在了OI上，主要是学了大量的算法和数据结构，以及一些C++。最后11月提高组喜获2=，这一年没什么想法，除了C++别的语言几乎没有写过，不过上网时间倒是出奇的长，看了很多博客和知乎……</p><p>其实虽然我不讨厌算法竞赛，但是确实没什么非常喜欢学习算法的感觉，就像是随波逐流地而来一样。而且说真的只要一个算法满足在数学形式上复杂或者抽象程度上高的话，我在学习它的时候就会遇到极大的困难，非常难以凭借自学的能力克服。</p><h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><p>今年主要还是学习OI，五月份的时候搭了搭博客，然后这时候觉得科学上网还是方便一些，时间不太允许自己搭，于是找了个机场，才开始真正用上了一些有价值的工具。</p><p>暑假开始便清楚OI只能拿个1=，加上一直算法学习难度对我而言也是比较大，逐渐也就失去了热情，放弃了联赛之上比赛内容的学习。主要是保持每天做一些动态规划的题，学了一些自己喜欢的算法，不是联赛内容的算法看明白后写一写，就放弃继续做题了。</p><p>在学校剩下的时间便用来学了学C++的OOP，C#，python，一些前端，看了一些计算机的理论，不过重心肯定在OI上，这些只作为了一些消遣般的活动，投入时间也不多，所以知识水平并不高。当然，知乎也看了不少……</p><p>最后11月喜获联赛的1=，基本是我真实水平，没什么好说的……退役后闲暇时间学了一些汇编，但是没有自己写过。</p><h1 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h1><p>现在可能不会再有太多时间写代码了，放假的时候作为消遣应该还是会看看编程相关的内容。</p><p>突发疫情，也不用去学校，现在主要想学学C++，C#、Python也看一看。到是有兴趣去学一些Unity，不过这些事肯定得放在放假的时候去做（因为上网课的时候在玩游戏）。</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>事到如今所有事都已成定局了，学OI也给我的算法水平带来了很大的提升吧，当然上网时间多了也接触到了更多编程相关的内容和技术。</p><p>那么看来如果要保持长时间对编程的学习的话，适度的兴趣和合适的方法论是不可或缺的。兴趣的话就例如对于一些有趣事物的实现抑或是对科学知识的那种好奇心，方法论来说就是一些自学的方法诸如快速地获取并筛选信息、对一些语言知识和实践的综合运用、遇到问题时解决错误的步骤此类的问题。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows软件快速指南</title>
      <link href="/2019/software/"/>
      <url>/2019/software/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019.10.28</p></blockquote><a id="more"></a><p>断断续续写了一点自己了解过的软件，会一直更新</p><h1 id="IDE及编辑器"><a href="#IDE及编辑器" class="headerlink" title="IDE及编辑器"></a>IDE及编辑器</h1><p>Visual Studio Code：编辑器，可以安装插件，实现对多种语言的支持</p><p>Visual Studio：大型IDE，主要用于C++开发，对C#、Visual Basic支持较好</p><p>Notepad++：高配版记事本，速度快，适合编辑多种文件，支持代码高亮</p><p>Subline：编辑器，支持插件</p><p>Vim：编辑器，独特的键盘指令及操作可以提高效率</p><p>Eclipse：IDE，用于Java开发，可以安装插件支持其他语言</p><p>Atom：GitHub开发的编辑器，比较漂亮，支持插件</p><p>JetBrains系列：IntelliJ、CLion、PyCharm</p><h1 id="系统安全及工具"><a href="#系统安全及工具" class="headerlink" title="系统安全及工具"></a>系统安全及工具</h1><p>火绒：比较舒服的安全工具，没有流氓行为</p><p>Mem Reduct：清理内存</p><p>CCleaner：清理硬盘垃圾文件</p><p>DiskGenius：复杂分区操作，磁盘修复</p><h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p>Listary：全硬盘文件搜索，界面类型及功能多样，适合日常使用</p><p>Everything：全硬盘文件搜索，功能更加专一，适合复杂文件操作</p><p>7-Zip：最好用的压缩软件，算法一流</p><p>FastCopy：快速拷贝文件，比Windows系统快</p><h1 id="系统美化及桌面整理"><a href="#系统美化及桌面整理" class="headerlink" title="系统美化及桌面整理"></a>系统美化及桌面整理</h1><p>Fences：桌面整理，效果很漂亮，支持扩展出多桌面</p><p>Rolan：桌面轻量级收纳工具</p><p>Startisback：让任务栏透明吧</p><p>WallpaperEngine：让桌面壁纸动起来吧</p><p>SAO-Utils：模拟刀剑神域的界面</p><p>Live2dViewerEX：让live2d小人站在桌面上吧</p><p>TrafficMonitor：显示网速、CPU及内存的悬浮窗，支持更换皮肤</p><h1 id="IM（即时通讯）"><a href="#IM（即时通讯）" class="headerlink" title="IM（即时通讯）"></a>IM（即时通讯）</h1><p>TIM：QQ简化版本</p><p>Telegram：电报桌面版</p><p>Skype：微软的软件</p><h1 id="硬件检测"><a href="#硬件检测" class="headerlink" title="硬件检测"></a>硬件检测</h1><p>卡硬工具箱：常用的各种工具都包括了，例如CPU-Z，GPU-Z，SSD测速，硬盘检测等</p><p>aida64：硬件检测工具</p><h1 id="工作及生活"><a href="#工作及生活" class="headerlink" title="工作及生活"></a>工作及生活</h1><p>Chrome：Google开发的浏览器</p><p>Firefox：火狐浏览器</p><p>potplayer：音视频播放器，可以更换皮肤，清爽流畅</p><p>Bandicam：录屏软件</p><p>Vieas：图片查看器，打开速度更快，还可简单编辑图片</p><p>OneNote：记笔记神器，功能全面，网页剪取较好用</p><p>OneDrive：微软云盘，存点随时用的文档</p><p>印象笔记：经典笔记软件</p><h1 id="文本排版和数学"><a href="#文本排版和数学" class="headerlink" title="文本排版和数学"></a>文本排版和数学</h1><p>Typora：Markdown编辑器</p><p>Moeditor：Markdown编辑器</p><p>LaTeX：排版及数学公式工具</p><p>Matlab：数学计算及数学</p><p>Mathematica：数学计算及数学</p><p>GraphViz：图论</p><p>geogebra：数学</p><p>几何画板：几何</p><h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><p>Steam：Valve的游戏发行平台</p><p>Uplay：育碧发行平台</p><p>origin：EA发行平台</p><p>SSTap：用于境外服务器线路加速</p><p>Fraps：显示帧数</p><p>BakaXL：好看的MC启动器</p><h1 id="梯子及暗网"><a href="#梯子及暗网" class="headerlink" title="梯子及暗网"></a>梯子及暗网</h1><p>Shadowsocks：ss</p><p>ShadowsocksR：ssr</p><p>V2Ray</p><p>Brook</p><p>Tor浏览器：洋葱浏览器</p><h1 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h1><p>terminus：很漂亮的一个终端</p><p>Git：版本控制</p><hr><p>以下内容待更新</p><h1 id="微软系列"><a href="#微软系列" class="headerlink" title="微软系列"></a>微软系列</h1><p>Word、</p><h1 id="Adobe系列"><a href="#Adobe系列" class="headerlink" title="Adobe系列"></a>Adobe系列</h1><p>Photoshop：</p><h1 id="艺术设计工具"><a href="#艺术设计工具" class="headerlink" title="艺术设计工具"></a>艺术设计工具</h1><p>C4D：</p><p>Blender：</p><h1 id="ACGN"><a href="#ACGN" class="headerlink" title="ACGN"></a>ACGN</h1><p>MMD：</p><p>Vocaloid：</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5上手指南</title>
      <link href="/2019/pyqt/"/>
      <url>/2019/pyqt/</url>
      
        <content type="html"><![CDATA[<p>学习前提是需要对Python有一定的基础。</p><p>首先我们需要安装。</p><p>打开powershell输入：</p><pre><code class="lang-powershell">pip install pyqt5-tools</code></pre><p>安装完毕后输入：</p><pre><code class="lang-powershell">designer</code></pre><p>稍等，会弹出页面，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt1.png" alt></p><p>现在创建一个MainWindow窗口，并进行编辑，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt2.png" alt></p><p>默认的编辑模式是：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt3.png" alt></p><p>这是用来拖动控件的，上方的TextLabel是显示信息用的Label控件，空白的地方是用来输入信息或者显示信息的Text Edit控件，PushButton是能对点击操作发出信号的Push Button控件。</p><p>左侧的其他控件可以试试并查询功能。</p><p>控件上面的文本和窗口标题文本都可以通过右侧的此窗口修改：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt4.png" alt></p><p>现在我们切换到信号操作上：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt5.png" alt></p><p>试一试点击一个控件后拖动，这是你可以选择信号发送到其他控件或者是窗口本身。</p><p>因为信号所对应的命令还需要我们自己书写，所以我们随便指定一个命令：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt6.png" alt></p><p>这个操作的含义是当点击时关闭窗口。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/pyqt7.png" alt></p><p>现在是这样的，那么我们保存一下编辑好的界面。</p><p>打开VSCode，进入保存文件的路径，我们需要把保存的.ui文件转换成.py文件以便接下来的操作。</p><p>在终端里运行：</p><pre><code class="lang-powershell">pyuic5 FileName.ui -o FileName.py</code></pre><p>现在我们重新配置一下settings.js文件以避免一些插件检测语法上的错误</p><script type="math/tex; mode=display">settings.js</script><pre><code class="lang-js">{    &quot;python.pythonPath&quot;: &quot;C:/Users/UserName/AppData/Local/Programs/Python/Python37-32/python.exe&quot;,//选择安装路径    &quot;python.linting.pylintArgs&quot;: [        &quot;--extension-pkg-whitelist=PyQt5&quot;,        &quot;--disable=W,C&quot;, &quot;--generate-members&quot;    ]//避免错误报错}</code></pre><p>现在新建一个文件：</p><pre><code class="lang-python">import sysimport FileNamefrom PyQt5.QtWidgets import QApplication, QMainWindowif __name__ == &#39;__main__&#39;:    app = QApplication(sys.argv)    MainWindow = QMainWindow()    ui = FileName.Ui_MainWindow()    ui.setupUi(MainWindow)    MainWindow.show()    sys.exit(app.exec_())</code></pre><p>运行此文件，即可看到我们刚才制作的窗口。</p><p>下面的问题就是要添加对应的功能，我们打开刚才制作好的FileName.py进行修改。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyQt </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置Python环境及Python入门学习</title>
      <link href="/2019/python/"/>
      <url>/2019/python/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019.10.17 内容完善中!</p></blockquote><a id="more"></a><p>大概七月份花了一天的时间把python的基础语法看了一遍，十月份再花了一点时间学习，主要用于写绘制数据图片、网页爬虫、图形界面。</p><p>如果你会C++的话，我在这里就写一下如何以最快的速度看完语法，并且学会调用一些基本的库，尽量写到最简，不熟悉的语法和库可以直接查文档或者Google解决。</p><h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><p>首先去官网下载合适版本并安装</p><p><a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a></p><p>安装时</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/py1.png" alt></p><p>记得勾选上<code>Add Python 3.x to PATH</code>再进行安装，这样不用自行配置环境变量</p><p>在cmd或者powershell下输入<code>python</code></p><p>出现</p><pre><code class="lang-powershell">Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt;</code></pre><p>即代表安装成功</p><p>在VSCode中安装</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/py2.png" alt></p><p>这个插件</p><p>按下<code>Ctrl+Shift+P</code>选择<code>Python: 选择解析器 Python: Select Interpreter</code>填写python解析器路径<code>C:/Users/UserName/AppData/Local/Programs/Python/Python37-32/python.exe</code>（默认安装路径是这个）</p><p>检查并设置<code>.vscode</code>文件夹下的文件</p><script type="math/tex; mode=display">launch.json</script><pre><code class="lang-json">{    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387    &quot;version&quot;: &quot;0.2.0&quot;,    &quot;configurations&quot;: [        {            &quot;name&quot;: &quot;Python&quot;,            &quot;type&quot;: &quot;python&quot;,            &quot;request&quot;: &quot;launch&quot;,            &quot;program&quot;: &quot;${file}&quot;,            &quot;console&quot;: &quot;integratedTerminal&quot;        }    ]}</code></pre><script type="math/tex; mode=display">settings.json</script><pre><code class="lang-json">{    &quot;python.pythonPath&quot;: &quot;C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37-32\\python.exe&quot;,}</code></pre><p>右键-在终端中运行python文件</p><p>调试-启动调试</p><p>调试-在不调试的情况下启动</p><p>都可以运行，调试可以设置断点</p><hr><p>在<code>cmd</code>或者<code>powershell</code>下输入<code>python</code>进入交互环境</p><p>使用<code>python 文件名.py</code>运行python文件</p><p>使用<code>pip install 库名称</code>安装库</p><p>使用<code>pip list</code>查看已安装的库</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在赋值时被创建</p><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><p>int整型 float浮点型 complex复数</p><p>类型转换：int(x) float(x) complex(x,y)</p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>使用’’或””创建，下标从零开始</p><p>转义字符：和C++类似</p><p>运算：+连接 *重复 []获取字符</p><p>[:]截取，左闭右开</p><pre><code class="lang-python">&gt;&gt;&gt;a = &quot;12345&quot;&gt;&gt;&gt;a[1:4]234</code></pre><p>格式化输出：print(“XXX%sXXX%dXXX” % (‘xxx’, 10))</p><p>占位符和C++相同</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>** 幂</p><p>/ 除</p><p>// 整除</p><pre><code class="lang-python">&gt;&gt;&gt;2**38&gt;&gt;&gt;21/102.1&gt;&gt;&gt;21//102</code></pre><div class="table-container"><table><thead><tr><th>C++</th><th>Python</th></tr></thead><tbody><tr><td>$$</td><td>and</td></tr><tr><td>&#124;&#124;</td><td>or</td></tr><tr><td>!</td><td>not</td></tr></tbody></table></div><p>in 在序列中找到值返回True 否则返回False</p><p>not in 相反</p><p>其余和C++相同</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>下标从0开始</p><h3 id="列表list"><a href="#列表list" class="headerlink" title="列表list"></a>列表list</h3><p>类似C++中的vector</p><pre><code class="lang-python">l = [&#39;A&#39;, &#39;B&#39;, 2019, 2020]print(l[0]) #第0个print(l[-2]) #倒数第2个print(l[1:3]) #第1到第2个del l[1] #删除第一个print(l)list.append(2021) #在末尾添加新对象print(l)---输出：A2019[&#39;B&#39;,2019][&#39;A&#39;, 2019, 2020][&#39;A&#39;, 2019, 2020, 2021]</code></pre><p>剩余内容待更新</p><h1 id="调用库"><a href="#调用库" class="headerlink" title="调用库"></a>调用库</h1><p>剩余内容待更新</p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>随便练习写了写的东西，但是tkinter不方便也不好看，所以我要再学一下PyQt，也方便以后学习C++的Qt</p><h2 id="使用b站视频av号查询数据"><a href="#使用b站视频av号查询数据" class="headerlink" title="使用b站视频av号查询数据"></a>使用b站视频av号查询数据</h2><p>调用了b站的api</p><p>使用了<code>tkinter</code>最简单的功能</p><pre><code class="lang-python">import tkinter as tkimport jsonimport refrom urllib.request import urlopendef GetDict(date, keys, default=None):    keys_list = keys.split(&#39;.&#39;)    if isinstance(date,dict):        dictionary = dict(date)        for i in keys_list:            try:                if dictionary.get(i) != None:                    dict_values = dictionary.get(i)                elif dictionary.get(i) == None:                    dict_values = dictionary.get(int(i))            except:                return default            dictionary = dict_values        return dictionaryVideojson = &quot;&quot;def WebRequest(id):    global Videojson    Videojson = urlopen(&quot;https://api.bilibili.com/x/article/archives?ids=&quot;+id).read().decode(&#39;utf-8&#39;)    Data = json.loads(Videojson)    return Datawindow = tk.Tk()window.title(&#39;哔哩哔哩数据查询&#39;)window.geometry(&#39;485x475&#39;)def insert_point():    VideoId = ScanId.get()    VideoData = WebRequest(VideoId)    ViewTextWindow.delete(0.0, &#39;end&#39;)    TitleTextWindow.delete(0.0, &#39;end&#39;)    FavoriteTextWindow.delete(0.0, &#39;end&#39;)    DanmuTextWindow.delete(0.0, &#39;end&#39;)    ReplyTextWindow.delete(0.0, &#39;end&#39;)    CoinTextWindow.delete(0.0, &#39;end&#39;)    JsonTextWindow.delete(0.0, &#39;end&#39;)    ViewTextWindow.insert(&#39;insert&#39;, str(GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.stat.view&quot;)))    TitleTextWindow.insert(&#39;insert&#39;, GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.title&quot;))    FavoriteTextWindow.insert(&#39;insert&#39;, str(GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.stat.favorite&quot;)))    DanmuTextWindow.insert(&#39;insert&#39;, str(GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.stat.danmaku&quot;)))    ReplyTextWindow.insert(&#39;insert&#39;, str(GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.stat.reply&quot;)))    CoinTextWindow.insert(&#39;insert&#39;, str(GetDict(VideoData, &quot;data.&quot;+VideoId+&quot;.stat.coin&quot;)))    JsonTextWindow.insert(&#39;insert&#39;, Videojson)tk.Label(window, text=&quot;输入视频AV号&quot;).place(x=350, y=10, anchor=&#39;nw&#39;)ScanId = tk.Entry(window)ScanId.place(x=320, y=45, anchor=&#39;nw&#39;)query = tk.Button(window, text=&quot;查询&quot;, width=6, height=1, command=insert_point)query.place(x=370, y=70, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;标题&quot;).place(x=10, y=10, anchor=&#39;nw&#39;)TitleTextWindow = tk.Text(window,height=1,width=35)TitleTextWindow.place(x=45, y=15, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;播放&quot;).place(x=10, y=40, anchor=&#39;nw&#39;)ViewTextWindow = tk.Text(window,height=1,width=35)ViewTextWindow.place(x=45, y=45, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;收藏&quot;).place(x=10, y=70, anchor=&#39;nw&#39;)FavoriteTextWindow = tk.Text(window,height=1,width=35)FavoriteTextWindow.place(x=45, y=75, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;弹幕&quot;).place(x=10, y=100, anchor=&#39;nw&#39;)DanmuTextWindow = tk.Text(window,height=1,width=35)DanmuTextWindow.place(x=45, y=105, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;回复&quot;).place(x=10, y=130, anchor=&#39;nw&#39;)ReplyTextWindow = tk.Text(window,height=1,width=35)ReplyTextWindow.place(x=45, y=135, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;硬币&quot;).place(x=10, y=160, anchor=&#39;nw&#39;)CoinTextWindow = tk.Text(window,height=1,width=35)CoinTextWindow.place(x=45, y=165, anchor=&#39;nw&#39;)tk.Label(window, text=&quot;json&quot;).place(x=10, y=190, anchor=&#39;nw&#39;)JsonTextWindow = tk.Text(window,height=20,width=60)JsonTextWindow.place(x=45, y=195, anchor=&#39;nw&#39;)window.mainloop()</code></pre><h2 id="获取b站视频总播放排名并绘制柱状图"><a href="#获取b站视频总播放排名并绘制柱状图" class="headerlink" title="获取b站视频总播放排名并绘制柱状图"></a>获取b站视频总播放排名并绘制柱状图</h2><p>需要<code>matplotlib</code>库</p><p>使用<code>https://www.kanbilibili.com</code>的数据，获取更多数据需要写js对网页进行交互，等待python学习以及前端学习来进行改善</p><pre><code class="lang-python">from urllib.request import urlopenimport jsonimport reimport matplotlib.pyplot as pltimport numpy as npimport requests# -*- coding: UTF-8 -*-def get_dict_value(date, keys, default=None):    keys_list = keys.split(&#39;.&#39;)    if isinstance(date,dict):        dictionary = dict(date)        for i in keys_list:            try:                if dictionary.get(i) != None:                    dict_values = dictionary.get(i)                elif dictionary.get(i) == None:                    dict_values = dictionary.get(int(i))            except:                return default            dictionary = dict_values        return dictionaryvideoData = urlopen(&quot;https://www.kanbilibili.com/rank/videos&quot;).read().decode(&#39;utf-8&#39;)videoAvList = re.findall(r&#39;href=&quot;/video/av(.*?)&quot;&#39;, videoData) # &lt;a href=&quot;/video/av36570707&quot; videoVisit = {}cnt = 0Y = []for i in range(0, len(videoAvList)):    video_id = videoAvList[i]    if(video_id in videoVisit): continue    videoVisit[video_id] = 1    jsonData = urlopen(        &quot;https://api.bilibili.com/x/article/archives?ids=&quot; + video_id    ).read().decode(&#39;utf-8&#39;)    Data = json.loads(jsonData)    cnt += 1    Y.append(get_dict_value(Data, &quot;data.&quot;+video_id+&quot;.stat.view&quot;))    print(&#39;rank: %d | av: %s | 播放数：%s&#39; % (cnt, video_id, get_dict_value(Data, &quot;data.&quot;+video_id+&quot;.stat.view&quot;)))    print(&#39;标题：%s&#39; % get_dict_value(Data, &quot;data.&quot;+video_id+&#39;.title&#39;))n = cntX = np.arange(n)plt.bar(X, Y)plt.bar(X, Y, facecolor=&#39;#66ccff&#39;, edgecolor=&#39;white&#39;)plt.xlim((-0.5, 99))plt.ylim((1, 100000000))plt.xlabel(&#39;Rank&#39;)plt.ylabel(&#39;View&#39;)new_ticks1 = np.linspace(0, 100000000, 11)plt.yticks(new_ticks1)new_ticks = np.linspace(0, 99, 100)plt.xticks(new_ticks)plt.show()</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Pages+HTML5 up制作个人主页及绑定二级域名</title>
      <link href="/2019/html_page/"/>
      <url>/2019/html_page/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><p>好看是第一生产力​qwq</p><a id="more"></a><blockquote><p><a href="http://chitanda.me/2015/11/03/multiple-git-pages-in-one-github-account/" target="_blank" rel="noopener">单个GitHub帐号下添加多个GitHub Pages的相关问题| 我很好奇</a></p></blockquote><p>首先我们要知道GitHub Pages可以有多个，项目名为<code>YourGitHubName.github.io</code>的Pages使用这个域名访问，新添加一个项目<code>ProjectName</code>并设置为Pages项目后，使用<code>YourGitHubName.github.io/ProjectName</code>进行访问，那么我们可以使用一个Pages托管Hexo博客，一个Pages托管个人主页.</p><p>这里介绍一个网站提供了很多个人主页的模板<br><a href="https://html5up.net" target="_blank" rel="noopener">https://html5up.net</a><br>我们选择并下载其中一个，直接修改即可，有一定HTML和CSS基础都可以很轻松的修改，你需要一个浏览器并会使用控制台以及抓取元素和一个编辑器例如vscode即可开始编写.</p><p>那么你还需要会使用git并把这个网站的源代码上传到GitHub的repo上，不会上网找个教程吧.</p><p>那然后就是域名绑定了，如果你用域名绑定过GitHub Pages的话，你就知道域名的DNS设置要设置几个A选项，这里不讲那是啥玩意了，总之这个选项是设置GitHub的ip地址的，有空我再找链接吧，自己去查GitHub的文档就行。然后你要设置一个CNAME，设置<code>YoutGitHubName.github.io</code>，然后在Github的repo里添加一个CNAME文件内容是你的域名全称并且不带https，www这样的前缀.</p><p>那么现在有两个页面，我们可以把主域名解析到个人主页上，使用blog二级域名解析到博客上，具体设置就是在域名DNS设置里设置二级域名并且同样解析到<code>YoutGitHubName.github.io</code>上，然后分别在个人主页的CNAME里设置<code>域名</code>和博客的CNAME里设置<code>blog.域名</code>，记得打开GitHub Pages绑定个人域名的https.</p><p>现在等一会DNS解析生效和GitHub的https证书申请完毕应该就没什么问题了.</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「莫比乌斯反演」</title>
      <link href="/2019/mobius/"/>
      <url>/2019/mobius/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><blockquote><p>参考资料：<br><a href="https://www.luogu.org/blog/An-Amazing-Blog/mu-bi-wu-si-fan-yan-ji-ge-ji-miao-di-dong-xi" target="_blank" rel="noopener">莫比乌斯反演-让我们从基础开始</a><br><a href="http://www.cnblogs.com/peng-ym/p/8647856.html" target="_blank" rel="noopener">莫比乌斯反演_cnblogs_peng-ym</a><br><a href="https://www.luogu.org/problemnew/solution/P2257" target="_blank" rel="noopener">P2257 YY的GCD 题解</a><br><a href="https://www.cnblogs.com/candy99/p/6607559.html" target="_blank" rel="noopener">容斥原理 与 莫比乌斯反演</a><br><a href="http://www.cnblogs.com/peng-ym/p/8661118.html" target="_blank" rel="noopener">整除分块_peng-ym</a><br><a href="https://www.cnblogs.com/pks-t/p/9212764.html#_label4" target="_blank" rel="noopener">OI生涯中的各种数论算法的证明</a></p></blockquote><h1 id="整除分块"><a href="#整除分块" class="headerlink" title="整除分块"></a>整除分块</h1><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>求：</p><script type="math/tex; mode=display">\sum_{i=1}^{n}\lfloor\frac{n}{i}\rfloor</script><p>对于每个$\lfloor\frac{n}{i}\rfloor$值相同的区间$[l,r]$有$r=n/(n/l)$，即对于$\forall x\in [i,n/(n/i)]$有$x=\lfloor\frac{n}{i}\rfloor$.</p><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>$O(\sqrt{n})$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code class="lang-c++">for(int l = 1, r; l &lt;= n; l = r + 1){    r = n / (n / l);    ans += (r - l + 1) * (n / l);}</code></pre><h1 id="数论函数"><a href="#数论函数" class="headerlink" title="数论函数"></a>数论函数</h1><p>满足$f(ab)=f(a)f(b),gcd(a,b)=1$的数论函数称为积性函数<br>满足$f(ab)=f(a)f(b)$的数论函数称为完全积性函数</p><h2 id="积性函数"><a href="#积性函数" class="headerlink" title="积性函数"></a>积性函数</h2><p>$\varphi(n)$：欧拉函数，表示小于n的正整数中与n互质的数的数目</p><script type="math/tex; mode=display">\varphi(x)=x\prod_{i=1}^{n}\left(1-\frac{1}{p_i}\right)</script><p>$\mu(n)$：莫比乌斯函数<br>$\sigma(n)$：因子和函数，表示n的正因子和<br>$d(n)​$：因子个数函数，表示n的正因数个数</p><h2 id="完全积性函数"><a href="#完全积性函数" class="headerlink" title="完全积性函数"></a>完全积性函数</h2><p>$\epsilon(n)=[n=1]$：单位函数<br>$id(n)=n$：恒等函数<br>$1(n)=1$：常函数</p><h1 id="狄利克雷卷积"><a href="#狄利克雷卷积" class="headerlink" title="狄利克雷卷积"></a>狄利克雷卷积</h1><p>对于数论函数$f(n),g(n)$定义<code>Dirichlet卷积</code>为</p><script type="math/tex; mode=display">(f\times g)(n)=\sum_{d\mid n}f(d)g(\frac{n}{d})</script><p>若$f,g$为积性函数，$f*g,f\times g$为积性函数</p><h2 id="常用的狄利克雷卷积"><a href="#常用的狄利克雷卷积" class="headerlink" title="常用的狄利克雷卷积"></a>常用的狄利克雷卷积</h2><script type="math/tex; mode=display">id=\varphi\times 1\quad n=\sum_{d\mid n}\varphi(d)</script><script type="math/tex; mode=display">\epsilon = \mu \times 1 \quad \epsilon(n) = \sum_{d\mid n}\mu(d)</script><script type="math/tex; mode=display">\varphi = \mu \times id \quad \varphi(n)=\sum_{d\mid n}d\mu(\frac{n}{d})=\sum_{d\mid n}\mu(d)\frac{n}{d}</script><h1 id="莫比乌斯函数"><a href="#莫比乌斯函数" class="headerlink" title="莫比乌斯函数"></a>莫比乌斯函数</h1><script type="math/tex; mode=display">\mu(d) = \left\{\begin{matrix}1,d=1\\ (-1)^n,d=\prod_{i=1}^{n}p_i^{k_i} , \forall p_i, k_i=1\\ 0,d=\prod_{i=1}^{n}p_i^{k_i} , \exists p_i, k_i\geqslant 2\end{matrix}\right.</script><h2 id="线性筛求莫比乌斯函数"><a href="#线性筛求莫比乌斯函数" class="headerlink" title="线性筛求莫比乌斯函数"></a>线性筛求莫比乌斯函数</h2><pre><code class="lang-c++">void sieve(){    mu[1] = 1;    for(int i = 2; i &lt;= N; i++) {        if(!vis[i]) prime[++cnt] = i, mu[i] = -1;        for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) {            vis[i * prime[j]] = 1;            if(i % prime[j] == 0) break;            mu[i * prime[j]] = -mu[i];        }    }}</code></pre><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>由<br>$<br>\mu \times 1 = \epsilon<br>$<br>得</p><script type="math/tex; mode=display">\sum_{d|n}\mu(d)=[n=1]</script><h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><p>对于函数</p><script type="math/tex; mode=display">f=g\times 1</script><p>有</p><script type="math/tex; mode=display">g=\mu \times f</script><p>即对于</p><script type="math/tex; mode=display">f(n)=\sum_{d\mid n}g(d)</script><p>有</p><script type="math/tex; mode=display">g(n)=\sum_{d\mid n}\mu(d)f(\frac{n}{d})</script><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="P2303-SDOI2012-Longge的问题"><a href="#P2303-SDOI2012-Longge的问题" class="headerlink" title="P2303 [SDOI2012]Longge的问题"></a><a href="https://www.luogu.org/problemnew/show/P2303" target="_blank" rel="noopener">P2303 [SDOI2012]Longge的问题</a></h2><script type="math/tex; mode=display">\sum_{i=1}^{n}gcd(i,n)\\=\sum_{d\mid n}d\times\sum_{i=1}^{n}[gcd(i,n)=d]\\=\sum_{d \mid n}d \times \sum_{i=1}^{\frac{n}{d}}[gcd\left ( i,\frac{n}{d}\right)=1]\\=\sum_{d \mid n} d \cdot \varphi\left ( \frac{n}{d} \right )</script><h2 id="P2257-YY的GCD"><a href="#P2257-YY的GCD" class="headerlink" title="P2257 YY的GCD"></a><a href="https://www.luogu.org/problemnew/show/P2257" target="_blank" rel="noopener">P2257 YY的GCD</a></h2><p>原式</p><script type="math/tex; mode=display">=\sum_{k=1}^{min(n,m)}\sum_{i=1}^{n}\sum_{j=1}^{m}[gcd(i,j)=k](k\in prime)</script><p>由</p><script type="math/tex; mode=display">\sum_{d|n}\mu(d)=[n=1]</script><p>得</p><script type="math/tex; mode=display">\sum_{d|gcd(i,j)}\mu(d)=[gcd(i,j)=1]</script><p>原式</p><script type="math/tex; mode=display">=\sum_{k=1}^{min(n,m)}\sum_{i=1}^{\lfloor{\frac{n}{k}}\rfloor}\sum_{j=1}^{\lfloor{\frac{m}{k}}\rfloor}\sum_{d|gcd(i,j)}\mu(d)(k\in prime)</script><script type="math/tex; mode=display">=\sum_{k=1}^{min(n,m)}\sum_{d=1}^{\lfloor{\frac{n}{k}}\rfloor}\mu(d){\lfloor{\frac{n}{kd}}\rfloor}{\lfloor{\frac{m}{kd}}\rfloor})(k\in prime)</script><p>设$T=kd$有原式</p><script type="math/tex; mode=display">=\sum_{k=1}^{min(n,m)}\sum_{d=1}^{\lfloor{\frac{n}{k}}\rfloor}\mu(d){\lfloor{\frac{n}{T}}\rfloor}{\lfloor{\frac{m}{T}}\rfloor}(k\in prime)</script><script type="math/tex; mode=display">=\sum_{T=1}^{min(n,m)}{\lfloor{\frac{n}{T}}\rfloor}{\lfloor{\frac{m}{T}}\rfloor}\sum_{k|T,k\in prime}\mu(\frac{T}{k})</script><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;const int _ = 10000005, N = 10000000;int T, n, m, cnt;int vis[_], prime[_], mu[_], f[_], sum[_];void sieve(){    mu[1] = 1;    for(int i = 2; i &lt;= N; i++) {        if(!vis[i]) prime[++cnt] = i, mu[i] = -1;        for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) {            vis[i * prime[j]] = 1;            if(i % prime[j] == 0) break;            mu[i * prime[j]] = -mu[i];        }    }    for(int i = 1; i &lt;= cnt; i++)        for(int j = 1; prime[i] * j &lt;= N; j++)            f[j * prime[i]] += mu[j];    for(int i = 1; i &lt;= N; i++)        sum[i] = sum[i - 1] + f[i];}int main(){    sieve();    scanf(&quot;%d&quot;, &amp;T);    while(T--) {        scanf(&quot;%d%d&quot;, &amp;n, &amp;m);        if(n &gt; m) swap(n, m);        long long ans = 0;        for(int l = 1, r = 0; l &lt;= n; l = r + 1) {            r = min(n / (n / l), m / (m / l));            ans += 1LL * (n / l) * (m / l) * (sum[r] - sum[l - 1]);        }        printf(&quot;%lld\n&quot;, ans);    }    return 0;}</code></pre><h2 id="P3455-POI2007-ZAP-Queries"><a href="#P3455-POI2007-ZAP-Queries" class="headerlink" title="P3455 [POI2007]ZAP-Queries"></a><a href="https://www.luogu.org/problemnew/show/P3455" target="_blank" rel="noopener">P3455 [POI2007]ZAP-Queries</a></h2><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^m[gcd(i,j)=k]</script><script type="math/tex; mode=display">=\sum_{i=1}^{\lfloor{\frac{n}{k}}\rfloor}\sum_{j=1}^{\lfloor{\frac{m}{k}}\rfloor}[gcd(i,j)=1]</script><script type="math/tex; mode=display">=\sum_{i=1}^{\lfloor{\frac{n}{k}}\rfloor}\sum_{j=1}^{\lfloor{\frac{m}{k}}\rfloor}\sum_{d\mid gcd(i,j)} \mu(d)</script><script type="math/tex; mode=display">=\sum_{d=1}^{min(n,m)}\mu(d)\lfloor{\frac{n}{d}}\rfloor\lfloor{\frac{m}{d}}\rfloor</script><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;const int _ = 50005, N = 50000;int T, n, m, d;int vis[_], prime[_], mu[_], sum[_], cnt;void sieve(){    mu[1] = 1;    for(int i = 2; i &lt;= N; i++) {        if(!vis[i]) prime[++cnt] = i, mu[i] = -1;        for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) {            vis[i * prime[j]] = 1;            if(i % prime[j] == 0) break;            mu[i * prime[j]] = -mu[i];        }    }    for(int i = 1; i &lt;= N; i++) sum[i] = sum[i - 1] + mu[i];}int main(){    sieve();    scanf(&quot;%d&quot;, &amp;T);    while(T--)    {        scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;d);        if(n &gt; m) swap(n, m);        n /= d; m /= d;        long long ans = 0;        for(int l = 1, r = 0; l &lt;= n; l = r + 1) {            r = min(n / (n / l), m / (m / l));            ans += 1LL * (n / l) * (m / l) * (sum[r] - sum[l - 1]);        }        printf(&quot;%lld\n&quot;, ans);    }    return 0;}</code></pre><h2 id="P2522-HAOI2011-Problem-b"><a href="#P2522-HAOI2011-Problem-b" class="headerlink" title="P2522 [HAOI2011]Problem b"></a><a href="https://www.luogu.org/problemnew/show/P2522" target="_blank" rel="noopener">P2522 [HAOI2011]Problem b</a></h2><script type="math/tex; mode=display">\sum_{i=a}^b\sum_{j=c}^d[gcd(i,j)=k]</script><script type="math/tex; mode=display">=\sum_{i=1}^b\sum_{j=1}^d[gcd(i,j)=k]-\sum_{i=1}^{a-1}\sum_{j=1}^d[gcd(i,j)=k]-\sum_{i=1}^b\sum_{j=1}^{c-1}[gcd(i,j)=k]+\sum_{i=1}^{a-1}\sum_{j=1}^{c-1}[gcd(i,j)=k]</script><script type="math/tex; mode=display">\sum_{i=1}^n\sum_{j=1}^m[gcd(i,j)=k]</script><script type="math/tex; mode=display">=\sum_{i=1}^{\lfloor{\frac{n}{k}}\rfloor}\sum_{j=1}^{\lfloor{\frac{m}{k}}\rfloor}[gcd(i,j)=1]</script><script type="math/tex; mode=display">=\sum_{i=1}^{\lfloor{\frac{n}{k}}\rfloor}\sum_{j=1}^{\lfloor{\frac{m}{k}}\rfloor}\sum_{d\mid gcd(i,j)} \mu(d)</script><script type="math/tex; mode=display">=\sum_{d=1}^{min(n,m)}\mu(d)\lfloor{\frac{n}{d}}\rfloor\lfloor{\frac{m}{d}}\rfloor</script><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;const int _ = 50005, N = 50000;int T, a, b, c, d, k;int vis[_], prime[_], mu[_], sum[_], cnt;void sieve(){    mu[1] = 1;    for(int i = 2; i &lt;= N; i++) {        if(!vis[i]) prime[++cnt] = i, mu[i] = -1;        for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) {            vis[i * prime[j]] = 1;            if(i % prime[j] == 0) break;            mu[i * prime[j]] = -mu[i];        }    }    for(int i = 1; i &lt;= N; i++) sum[i] = sum[i - 1] + mu[i];}long long calc(int n, int m, int k){    long long ans = 0;    n = n / k; m = m / k;    for(int l = 1, r = 0; l &lt;= min(n, m); l = r + 1) {        r = min(n / (n / l), m / (m / l));        ans += 1LL * (n / l) * (m / l) * (sum[r] - sum[l - 1]);    }    return ans;}int main(){    sieve();    scanf(&quot;%d&quot;, &amp;T);    while(T--)    {        scanf(&quot;%d%d%d%d%d&quot;, &amp;a, &amp;b, &amp;c, &amp;d, &amp;k);        long long ans = calc(b, d, k) - calc(a - 1, d, k) - calc(b, c - 1, k) + calc(a - 1, c - 1, k);        printf(&quot;%lld\n&quot;, ans);    }    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莫比乌斯反演 </tag>
            
            <tag> 整除分块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「后缀数组」</title>
      <link href="/2019/SA/"/>
      <url>/2019/SA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><blockquote><p>参考资料：<br>1.<a href="https://www.cnblogs.com/zwfymqz/p/8413523.html" target="_blank" rel="noopener">后缀数组详解</a><br>2.<a href="https://www.luogu.org/blog/i207M/hou-zhui-shuo-zu-xue-xi-bi-ji" target="_blank" rel="noopener">后缀数组-学习笔记</a><br>3.<a href="https://wenku.baidu.com/view/ed1be61e10a6f524ccbf85fd.html" target="_blank" rel="noopener">后缀数组——处理字符串的有力工具</a></p></blockquote><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>$SA$排名为$i$的后缀的位置<br>$rk$位置为$i$的后缀的排名<br>$tp$第二关键字的排名为$i$的后缀的位置，还被用作$rank$的暂存<br>$tax$每个排名对应的后缀数量<br>后缀数组就是为了求出$sa$和$rk$</p><h1 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h1><p>$rk[sa[i]]=i$ $sa[rk[i]]=i$</p><p>$LCP(x,y) $：字符串x与字符串y的最长公共前缀，在这里<strong>指x号后缀与与y号后缀的最长公共前缀</strong></p><p>$height[i]=lcp ( sa[i],sa[i - 1] )$，即<strong>排名</strong>为$i$的后缀与<strong>排名</strong>为$i−1$的后缀的最长公共前缀</p><p>$H[i]：height[rak[i]]$，即$i$号后缀与它前一名的后缀的最长公共前缀</p><p>$H[i] \geqslant H[i - 1] - 1$ <strong>证明</strong> </p><p>$LCP(i,j)=LCP(j,i) $</p><p>$LCP(i,i)=len(sa[i])=n-sa[i]+1$</p><p>$LCP(i,k)=min\left\{height[j] \right\}(i+1&lt;=j&lt;=k)$</p><p>$S$不同的子串个数$\dfrac{n(n+1)}{2} -\sum_{i=1}^nheight[i]$</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre><code class="lang-c++">#include &lt;iostream&gt; #include &lt;cstdio&gt;#include &lt;string&gt;#define R register intusing namespace std;const int N = 1000005;string s;/* sa[i]：排名为i的后缀的位置rak[i]：从第i个位置开始的后缀的排名，下文为了叙述方便，把从第i个位置开始的后缀简称为后缀itp[i]：基数排序的第二关键字，意义与sa一样，即第二关键字排名为i的后缀的位置tax[i]：i号元素出现了多少次。辅助基数排序s：字符串，s[i]表示字符串中第i个字符串*/int n, m, sa[N], rk[N], tp[N], c[N];void _sort() {    for(R i = 1; i &lt;= m; ++i) c[i] = 0;    for(R i = 1; i &lt;= n; ++i) c[rk[i]]++;    for(R i = 1; i &lt;= m; ++i) c[i] += c[i - 1];    for(R i = n; i &gt;= 1; --i) sa[c[rk[tp[i]]]--] = tp[i];}void SA() {    m = 150;    for(R i = 1; i &lt;= n; ++i) rk[i] = s[i - 1], tp[i] = i;    _sort();    for(R w = 1, p = 0; p &lt; n &amp;&amp; w &lt;= n; m = p, w &lt;&lt;= 1) {        p = 0;        for(R i = 1; i &lt;= w; ++i) tp[++p] = n - w + i;        for(R i = 1; i &lt;= n; ++i) if(sa[i] &gt; w) tp[++p] = sa[i] - w;        _sort();        swap(tp, rk);        rk[sa[1]] = p = 1;        for(R i = 2; i &lt;= n; ++i)            rk[sa[i]] = (tp[sa[i - 1]] == tp[sa[i]] &amp;&amp; tp[sa[i - 1] + w] == tp[sa[i] + w])            ? p : ++p;    }}/*i号后缀：从i开始的后缀lcp(x,y)：字符串x与字符串y的最长公共前缀，在这里指x号后缀与与y号后缀的最长公共前缀height[i]：lcp(sa[i],sa[i-1])，即排名为i的后缀与排名为i-1的后缀的最长公共前缀H[i]：height[rak[i]]，即i号后缀与它前一名的后缀的最长公共前缀*/int Height[N];void Get() {    int j, k = 0;    for(int i = 1; i &lt;= n; i++) {        if(k) k--;        j = sa[rk[i] - 1];        while(s[i + k - 1] == s[j + k - 1]) ++k;        Height[rk[i]] = k;    }}int main(){    cin &gt;&gt; s;    n = s.length();    SA();    for(R i = 1; i &lt;= n; ++i) printf(&quot;%d &quot;, sa[i]);    cout &lt;&lt; endl;    Get();    return 0;}</code></pre><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p><a href="https://www.luogu.org/problemnew/show/P2408" target="_blank" rel="noopener">P2408 不同子串个数</a></p><script type="math/tex; mode=display">ans=\dfrac{n(n+1)}{2}-\sum height[i]</script><pre><code class="lang-c++">#include &lt;iostream&gt; #include &lt;cstdio&gt;#include &lt;string&gt;#define R register intusing namespace std;const int N = 1000005;string s;int n, m, sa[N], rk[N], tp[N], c[N];void _sort() {    for(R i = 1; i &lt;= m; ++i) c[i] = 0;    for(R i = 1; i &lt;= n; ++i) c[rk[i]]++;    for(R i = 1; i &lt;= m; ++i) c[i] += c[i - 1];    for(R i = n; i &gt;= 1; --i) sa[c[rk[tp[i]]]--] = tp[i];}void SA() {    m = 150;    for(R i = 1; i &lt;= n; ++i) rk[i] = s[i - 1], tp[i] = i;    _sort();    for(R w = 1, p = 0; p &lt; n &amp;&amp; w &lt;= n; m = p, w &lt;&lt;= 1) {        p = 0;        for(R i = 1; i &lt;= w; ++i) tp[++p] = n - w + i;        for(R i = 1; i &lt;= n; ++i) if(sa[i] &gt; w) tp[++p] = sa[i] - w;        _sort();        swap(tp, rk);        rk[sa[1]] = p = 1;        for(R i = 2; i &lt;= n; ++i)            rk[sa[i]] = (tp[sa[i - 1]] == tp[sa[i]] &amp;&amp; tp[sa[i - 1] + w] == tp[sa[i] + w])            ? p : ++p;    }}int Height[N];//H[i] = Height[rk[i]]void Get() {    int j, k = 0;    for(int i = 1; i &lt;= n; ++i) {        if(k) k--;        j = sa[rk[i] - 1];        while(s[i + k - 1] == s[j + k - 1]) ++k;        Height[rk[i]] = k;    }}int main(){    cin &gt;&gt; n &gt;&gt; s;    SA();    Get();    long long ans = 1LL * n * (n + 1) / 2;    for(int i = 1; i &lt;= n; ++i)        ans -= Height[rk[i]];    cout &lt;&lt; ans &lt;&lt; endl;    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「概率期望」</title>
      <link href="/2019/probability/"/>
      <url>/2019/probability/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><h1 id="概率公式"><a href="#概率公式" class="headerlink" title="概率公式"></a>概率公式</h1><h2 id="条件概率公式"><a href="#条件概率公式" class="headerlink" title="条件概率公式"></a>条件概率公式</h2><p>设$A,B$是两个事件，且$P(B)&gt;0$,则在事件$B$发生的条件下，事件$A$发生的条件概率为$P(A|B)=\dfrac{P(AB)}{P(B)}$</p><h2 id="乘法公式"><a href="#乘法公式" class="headerlink" title="乘法公式"></a>乘法公式</h2><p>1.由条件概率公式得$P(AB)=P(A|B)P(B)=P(B|A)P(A)$<br>2.推广：对$\forall n \geq 2$当$P(A_1A_2…A_{n-1})&gt;0$时<br>有 $P(A_1A_2…A_{n-1}A{n})=P(A_1)P(A_2|A_1)P(A_3|A_1A_2)…P(A_n|A_1A_2…A_{n-1})$</p><h2 id="全概率公式"><a href="#全概率公式" class="headerlink" title="全概率公式"></a>全概率公式</h2><p>如果事件组$B_1,B_2,…,B_n$满足<br>1.$\forall i\neq j\in \left \{1,2,\cdots ,n  \right \},B_i\cap B_j = \varnothing$<br>2.$B_1\cup B_2\cup …\cup B_n=\Omega$<br>则称事件组$B_1,B_2,…,B_n$是样本空间$\Omega$的一个划分,或称为样本空间$\Omega$的一个完备事件组。<br>设事件组$\left \{B_i \right \}$是样本空间$\Omega$的一个划分，且$P(B_i)&gt;0(i \in \left \{1,2,\cdots ,n  \right \})$<br>对任一事件$A$，有$P(A)=\sum_{i=1}^{n}P(B_i)P(A|B_i)$</p><h2 id="贝叶斯公式"><a href="#贝叶斯公式" class="headerlink" title="贝叶斯公式"></a>贝叶斯公式</h2><p>设事件组$\left \{B_i \right \}$是样本空间$\Omega$的一个划分，则对任一事件$A(P(A)&gt;0)$,有<br>$P(B_i|A)=\dfrac{P(AB_i)}{P(A)}=\dfrac{P(B_i)P(A|B_i)}{\sum_{j=1}^{n}P(B_j)P(A|B_j)}$<br>上式即为贝叶斯公式，$B_i$常被视为导致试验结果$A$发生的”原因“，$P(B_i)(i\in \left \{1,2,\cdots ,n  \right \})$表示各种原因发生的可能性大小，故称先验概率；$P(B_i|A)(i\in \left \{1,2,\cdots ,n  \right \})$则反映当试验产生了结果$A$之后，再对各种原因概率的新认识，故称后验概率。</p><h1 id="数学期望"><a href="#数学期望" class="headerlink" title="数学期望"></a>数学期望</h1><p>离散型随机变量$X$的取值为$x_1,x_2,x_3,…,x_{n}$，$p_1,p_2,p_3,…,p_{n}$为$X$对应取值的概率<br>则称$E(X)=\sum_{i=1}^{n}p_{i}x_{i}$为离散型随机变量$X$的<strong>数学期望</strong><br>性质：$E(aX+bY)=aE(X)+bE(Y)$</p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p><a href="https://www.luogu.org/problemnew/show/P4316" target="_blank" rel="noopener">P4316 绿豆蛙的归宿</a><br>设$F[x]$表示从$x$走到$N$期望长度<br>$F[x]=\frac{1}{k}\sum_{i=1}^{k}(F[y_{i}]+z_{i})$<br>$F[N]=0$<br>$Ans=F[1]$<br><a href="https://www.luogu.org/problemnew/show/P1365" target="_blank" rel="noopener">P1365 WJMZBMR打osu! / Easy</a><br>设$f[x]$表示到$x$期望得分  $g[x]$表示以$x$结尾期望$o$序列长度<br>$s[i]==x f[i]=f[i-1],g[i]=0$<br>$s[i]==o f[i]=f[i-1]+2*g[i-1]+1,g[i]=g[i-1]+1$<br>$s[i]==? f[i]=f[i-1]+\frac{(2g[i-1]+1)+0}{2},g[i]=\frac{(g[i-1]+1)+0}{2}$<br>$Ans=f[n]$<br><a href="https://www.luogu.org/problemnew/show/P1654" target="_blank" rel="noopener">P1654 OSU!</a><br>$p[i]$表示$i$位置成功概率<br>设$f[i]$表示到$i$期望得分 $x1[i]$以$i$结尾$1$序列期望长度 $x2[i]$表示以$i$结尾$1$序列期望长度平方<br>$(x+1)^{3}=(x^{2}+2x+1)(x+1)=x^{3}+3x^{2}+3x+1$<br>若第$i$次成功且有$f[i-1]=x^{3}则f[i]=f[i-1]+3x^{2}+3x+1$<br>$x1[i]=(x1[i-1]+1)p[i]$<br>$x2[i]=(x2[i-1]+2x1[i-1]+1)p[i]$<br>$f[i]=f[i-1]+(3x2[i-1]+3x1[i-1]+1)p[i]$<br>$Ans=f[n]$<br><a href="https://www.luogu.org/problemnew/show/P1297" target="_blank" rel="noopener">P1297 [国家集训队]单选错位</a><br>$Ans=\sum_{i=1}^{n-1}\frac{1}{max(a_i,a_{i+1})}+\frac{1}{max(a_1,a_n)}$</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率 </tag>
            
            <tag> 期望 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++STL的OI常用内容</title>
      <link href="/2019/C++_stl/"/>
      <url>/2019/C++_stl/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><blockquote><p>参考资料:<br><a href="https://oi.men.ci/stl-in-oi/" target="_blank" rel="noopener">STL 在 OI 中的应用</a><br><a href="https://www.cnblogs.com/ChinaHook/p/6985444.html" target="_blank" rel="noopener">[C++ STL]Set和Multiset</a></p></blockquote><h1 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h1><h2 id="stack-后入先出（LIFO）栈"><a href="#stack-后入先出（LIFO）栈" class="headerlink" title="stack 后入先出（LIFO）栈"></a>stack 后入先出（LIFO）栈</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><pre><code class="lang-c++">#include&lt;stack&gt;</code></pre><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><pre><code class="lang-c++">stack&lt;int&gt; s;</code></pre><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>q.top()</td><td>获取栈顶元素（并不删除）</td></tr><tr><td>q.pop()</td><td>删除栈顶元素</td></tr><tr><td>q.push(x)</td><td>向栈中加入元素</td></tr><tr><td>q.empty()</td><td>判断栈是否为空</td></tr></tbody></table></div><h1 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h1><h2 id="queue-先入先出（FIFO）队列"><a href="#queue-先入先出（FIFO）队列" class="headerlink" title="queue 先入先出（FIFO）队列"></a>queue 先入先出（FIFO）队列</h2><h3 id="头文件-1"><a href="#头文件-1" class="headerlink" title="头文件"></a>头文件</h3><pre><code class="lang-c++">#include&lt;queue&gt;</code></pre><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><pre><code class="lang-c++">queue&lt;int&gt; q;</code></pre><h3 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h3><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>q.front()</td><td>获取队首元素（并不删除）</td></tr><tr><td>q.pop()</td><td>删除队首元素</td></tr><tr><td>q.push(x)</td><td>向队列中加入元素</td></tr><tr><td>q.empty()</td><td>判断队列是否为空</td></tr></tbody></table></div><h2 id="priority-queue-优先队列"><a href="#priority-queue-优先队列" class="headerlink" title="priority_queue 优先队列"></a>priority_queue 优先队列</h2><h3 id="头文件-2"><a href="#头文件-2" class="headerlink" title="头文件"></a>头文件</h3><pre><code class="lang-c++">#include&lt;queue&gt;</code></pre><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><pre><code class="lang-c++">priority_queue&lt;int&gt; q; // 队头最大</code></pre><pre><code class="lang-c++">priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q; 队头最小</code></pre><h3 id="函数-2"><a href="#函数-2" class="headerlink" title="函数"></a>函数</h3><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>q.top()</td><td>获取优先队列中最大的元素（并不删除），其时间复杂度为$O(1)$</td></tr><tr><td>q.pop()</td><td>删除优先队列中最大元素，其时间复杂度为$O(log n)$</td></tr><tr><td>q.push(x)</td><td>向优先队列中加入元素，其时间复杂度为$O(log n)$</td></tr><tr><td>q.empty()</td><td>判断优先队列是否为空</td></tr></tbody></table></div><h1 id="Set-与-Multiset"><a href="#Set-与-Multiset" class="headerlink" title="Set 与 Multiset"></a>Set 与 Multiset</h1><blockquote><p>set不允许重复 multiset允许重复</p><pre><code>例: set : 1 2 3 4 5 6multiset : 1 2 2 3 3 3</code></pre></blockquote><h2 id="头文件-3"><a href="#头文件-3" class="headerlink" title="头文件"></a>头文件</h2><pre><code class="lang-c++">#include &lt;set&gt;</code></pre><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><pre><code class="lang-c++">multiset&lt;int&gt; s[N];//定义multiset&lt;int&gt;::iterator it;//迭代器</code></pre><h2 id="函数-3"><a href="#函数-3" class="headerlink" title="函数"></a>函数</h2><div class="table-container"><table><thead><tr><th>操作</th><th>效果</th></tr></thead><tbody><tr><td>s.size()</td><td>返回当前的元素数量</td></tr><tr><td>s.empty ()</td><td>判断大小是否为零，等同于$0==size()$，效率更高</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>操作</th><th>效果</th></tr></thead><tbody><tr><td>count (elem)</td><td>返回元素值为$elem$的个数</td></tr><tr><td>find(elem)</td><td>返回元素值为$elem$的第一个元素，如果没有返回$end()$</td></tr><tr><td>lower _bound(elem)</td><td>返回元素值$&gt;=elem$的第一个元素位置</td></tr><tr><td>upper _bound (elem)</td><td>返回元素值$&gt;elem$的第一个元素位置</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>操作</th><th>效果</th></tr></thead><tbody><tr><td>s.begin()</td><td>返回一个随机存取迭代器，指向第一个元素</td></tr><tr><td>s.end()</td><td>返回一个随机存取迭代器，指向最后一个元素的下一个位置</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>操作</th><th>效果</th></tr></thead><tbody><tr><td>s.insert(elem)</td><td>插入一个$elem$副本，返回新元素位置，无论插入成功与否。</td></tr><tr><td>s.erase(elem)</td><td>删除与$elem$相等的所有元素，返回被移除的元素个数。</td></tr><tr><td>s.erase(pos)</td><td>移除迭代器$pos$所指位置元素，无返回值。</td></tr><tr><td>s.clear()</td><td>移除所有元素，将容器清空</td></tr></tbody></table></div><h1 id="离散化"><a href="#离散化" class="headerlink" title="离散化"></a>离散化</h1><h2 id="std-unique"><a href="#std-unique" class="headerlink" title="std::unique"></a>std::unique</h2><p>功能：对有序的容器重新排列，将第一次出现的元素从前往后排，其他重复出现的元素依次排在后面<br>返回值：返回迭代器，迭代器指向的是重复元素的首地址</p><h2 id="std-lower-bound"><a href="#std-lower-bound" class="headerlink" title="std::lower_bound"></a>std::lower_bound</h2><p>lower_bound()返回一个 iterator 它指向在[first,last)标记的有序序列中可以插入value，而不会破坏容器顺序的第一个位置，而这个位置标记了第一个大于等于value 的值。<br>ForwardIter lower_bound(ForwardIter first, ForwardIter last,const _Tp&amp; val)算法返回一个非递减序列[first, last)中的第一个大于等于值val的位置。</p><h2 id="std-upper-bound"><a href="#std-upper-bound" class="headerlink" title="std::upper_bound"></a>std::upper_bound</h2><p>upper_bound()返回一个 iterator 它指向在[first,last)标记的有序序列中可以插入value，而不会破坏容器顺序的第一个位置，而这个位置标记了第一个大于value 的值。这两个函数为C++ STL内的函数。<br>ForwardIter upper_bound(ForwardIter first, ForwardIter last, const _Tp&amp; val)算法返回一个非递减序列[first, last)中第一个大于val的位置。</p><pre><code class="lang-c++">std::sort(b + 1, b + cnt + 1);int *end = std::unique(b + 1, b + cnt + 1);for(int i = 1; i &lt;= n; i++)a[i] = lower_bound(b + 1, end, a[i]) - b;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Queue </tag>
            
            <tag> Stack </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「分层图」</title>
      <link href="/2019/layered_graph/"/>
      <url>/2019/layered_graph/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在一个无向图$G=(V,E)$中，可以改变$k$条边的权值为$\Delta w$，求单源最短路径。</p><h1 id="分层图"><a href="#分层图" class="headerlink" title="分层图"></a>分层图</h1><p>分层图的想法就是如果有$k$条边权值变为$\Delta w$，就建$k+1$层图。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/fct.png" alt></p><p>这个图实际上是这样的，对于每$1$层中相连的点对$(u,v)$连权值为$w$的无向边，对于每个在原图中相连的点对$(u,v)$由$k$层点$u_k$向$k+1$层点$v_{k+1}$以及$k$层点$v_k$向$k+1$层点$u_{k+1}$连权值为$\Delta w$的有向边，方向是从$k$层向$k+1$层。<br>这样构造完成一张分层图后，从第$1$层的起始点$s_1$求单源最短路径，最终第$k + 1$层的终点$t_{k+1}$的单源最短路径值即为答案所求。<br>原理其实很简单，如果从$k$层图到$k+1$层图，有向边$(u_k,v_{k+1})$是一条$\Delta w$权边，走这条边，相当于把$w$权边变成了$\Delta w$权边，并且进入了$k+1$层。这样如果有$k+1$层图的话，相当于进行了$k$次这种操作，自然就在$k+1$层图求最短路中实现了$k$次改变边权的目标。</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="P2939-USACO09FEB-改造路Revamping-Trails"><a href="#P2939-USACO09FEB-改造路Revamping-Trails" class="headerlink" title="P2939 [USACO09FEB]改造路Revamping Trails"></a><a href="https://www.luogu.org/problemnew/show/P2939" target="_blank" rel="noopener">P2939 [USACO09FEB]改造路Revamping Trails</a></h2><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;queue&gt;using namespace std;const int N = 1e4 + 5, M = 5e4 + 5, K = 105;int n, m, k;struct Edge {    int Next, to, dis;}e[M * K * 2];int head[N * K], num;void add(int from, int to, int dis){    e[++num].Next = head[from];    e[num].to = to;    e[num].dis = dis;    head[from] = num;}int dist[N * K], vis[N * K];struct node {    int u, d;    bool operator &lt; (const node &amp;x) const {        return d &gt; x.d;    }};priority_queue&lt;node&gt; q;void dijk(){    memset(dist, 0x3f, sizeof(dist));    dist[1] = 0;    q.push((node){1, 0});    while(!q.empty())    {        int u = q.top().u; q.pop();        if(vis[u]) continue;        vis[u] = 1;        for(int i = head[u]; i; i = e[i].Next)        {            int v = e[i].to, w = e[i].dis;            if(dist[v] &gt; dist[u] + w)            {                dist[v] = dist[u] + w;                if(!vis[v]) q.push((node){v, dist[v]});            }        }    }}int main(){    scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;k);    for(int i = 1, u, v, z; i &lt;= m; i++)    {        scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;z);        add(u, v, z); add(v, u, z);        for(int j = 1; j &lt;= k; j++)        {            add(j * n + u, j * n + v, z);            add(j * n + v, j * n + u, z);            add((j - 1) * n + u, j * n + v, 0);            add((j - 1) * n + v, j * n + u, 0);        }    }    dijk();    int ans = 0x3fffffff;    for(int i = 1; i &lt;= k + 1; i++)        ans = min(dist[i * n], ans);    printf(&quot;%d\n&quot;, ans);    return 0;}</code></pre><h2 id="P4568-JLOI2011-飞行路线"><a href="#P4568-JLOI2011-飞行路线" class="headerlink" title="P4568 [JLOI2011]飞行路线"></a><a href="https://www.luogu.org/problemnew/show/P4568" target="_blank" rel="noopener">P4568 [JLOI2011]飞行路线</a></h2><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;queue&gt;#include &lt;cstring&gt;using namespace std;const int N = 1e4 + 5, M = 5e4 + 5, K = 12;int n, m, k;int s, t;struct _edge {    int Next, v, w;}e[M * K * 4 + M * 2];int head[N * K], num;void add(int from, int to, int dis){    e[++num].Next = head[from];    e[num].v = to;    e[num].w = dis;    head[from] = num;}int dist[N * K], vis[N * K];struct node {    int u, d;    bool operator &lt; (const node &amp;x) const {        return d &gt; x.d;    }};priority_queue&lt;node&gt; q;void dijk(int x){    memset(dist, 0x3f, sizeof(dist));    dist[x] = 0;    q.push((node){x, 0});    while(!q.empty())    {        node tp = q.top(); q.pop();        int u = tp.u;        if(u == t + k * n) break;        if(vis[u]) continue;        vis[u] = 1;        for(int i = head[u]; i; i = e[i].Next)        {            int v = e[i].v, w = e[i].w;            if(dist[v] &gt; dist[u] + w)            {                dist[v] = dist[u] + w;                if(!vis[v]) q.push((node){v, dist[v]});            }        }    }}int main(){    scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;k);    scanf(&quot;%d%d&quot;, &amp;s, &amp;t); s++, t++;    for(int i = 1, u, v, z; i &lt;= m; i++)    {        scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;z); u++, v++;        add(u, v, z); add(v, u, z);        for(int j = 1; j &lt;= k; j++)        {            add(j * n + u, j * n + v, z);            add(j * n + v, j * n + u, z);            add((j - 1) * n + u, j * n + v, 0);            add((j - 1) * n + v, j * n + u, 0);        }    }    dijk(s);    int ans = 1e9;    for(int i = 0; i &lt;= k; i++)        ans = min(ans, dist[t + i * n]);    printf(&quot;%d\n&quot;, ans);    return 0;}</code></pre><h2 id="P4822-BJWC2012-冻结"><a href="#P4822-BJWC2012-冻结" class="headerlink" title="P4822 [BJWC2012]冻结"></a><a href="https://www.luogu.org/problemnew/show/P4822" target="_blank" rel="noopener">P4822 [BJWC2012]冻结</a></h2><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;queue&gt;using namespace std;const int N = 55, M = 1005, K = 55;int n, m, k;struct Edge {    int Next, to, dis;}e[M * K * 10];int head[N * K * 10], num;void add(int from, int to, int dis){    e[++num].Next = head[from];    e[num].to = to;    e[num].dis = dis;    head[from] = num;}struct node {    int u, d;    bool operator &lt; (const node&amp; x) const {        return d &gt; x.d;    } };priority_queue&lt;node&gt; q;int dist[N * K * 10], vis[N * K * 10];void dijk(){    memset(dist, 0x3f, sizeof(dist));    dist[1] = 0;    q.push((node){1, 0});    while(!q.empty())    {        int u = q.top().u; q.pop();        if(vis[u]) continue;        vis[u] = 1;        for(int i = head[u]; i; i = e[i].Next)        {            int v = e[i].to, w = e[i].dis;            if(dist[v] &gt; dist[u] + w)            {                dist[v] = dist[u] + w;                if(!vis[v]) q.push((node){v, dist[v]});            }        }    }}int main(){    scanf(&quot;%d%d%d&quot;, &amp;n, &amp;m, &amp;k);    for(int i = 1, u, v, z; i &lt;= m; i++)    {        scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;z);        add(u, v, z); add(v, u, z);        for(int j = 1; j &lt;= k; j++)        {            add(j * n + u, j * n + v, z);            add(j * n + v, j * n + u, z);            add((j - 1) * n + u, j * n + v, z &gt;&gt; 1);            add((j - 1) * n + v, j * n + u, z &gt;&gt; 1);        }    }    dijk();    int ans = 0x7fffffff;    for(int i = 1; i &lt;= k + 1; i++)        ans = min(ans, dist[i * n]);    printf(&quot;%d\n&quot;, ans);    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分层图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「网络流」</title>
      <link href="/2019/network_flow/"/>
      <url>/2019/network_flow/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><blockquote><p>一些资料：<a href="https://www.cnblogs.com/victorique/p/8560656.html" target="_blank" rel="noopener">最详细网络流建模基础</a></p></blockquote><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><h2 id="最大流Dinic"><a href="#最大流Dinic" class="headerlink" title="最大流Dinic"></a>最大流Dinic</h2><p>没写当前弧优化什么的.</p><p>弃坑了，ISAP和HLPP有缘再学.</p><p><a href="https://www.luogu.org/problemnew/show/P3376" target="_blank" rel="noopener">P3376 【模板】网络最大流</a></p><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;queue&gt;#include &lt;cstring&gt;const int inf = 0x3fffffff;const int N = 10005, M = 100005;int n, m, s, t, maxflow;int d[N];struct Edge {    int Nxt, v, flow;}e[M &lt;&lt; 1];int h[N], p = 1;void add(int u, int v, int z){    e[++p].Nxt = h[u]; e[p].v = v; e[p].flow = z; h[u] = p;    e[++p].Nxt = h[v]; e[p].v = u; e[p].flow = 0; h[v] = p;}std::queue&lt;int&gt; q;bool bfs(){    memset(d, 0, sizeof(d));    while(!q.empty()) q.pop();    q.push(s); d[s] = 1;    while(!q.empty())    {        int u = q.front(); q.pop();        for(int i = h[u]; i; i = e[i].Nxt)            if(e[i].flow &amp;&amp; !d[e[i].v])        {            q.push(e[i].v);            d[e[i].v] = d[u] + 1;            if(e[i].v == t) return true;        }    }    return false;}int dinic(int u, int flow){    if(u == t) return flow;    int rest = flow, k;    for(int i = h[u]; i &amp;&amp; rest; i = e[i].Nxt)        if(e[i].flow &amp;&amp; d[e[i].v] == d[u] + 1)    {        k = dinic(e[i].v, std::min(rest, e[i].flow));        if(!k) d[e[i].v] = 0;        e[i].flow -= k;        e[i ^ 1].flow += k;        rest -= k;    }    return flow - rest;}int main(){    scanf(&quot;%d%d%d%d&quot;, &amp;n, &amp;m, &amp;s, &amp;t);    for(int i = 1, u, v, z; i &lt;= m; i++) {        scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;z);        add(u, v, z);    }    int flow = 0;    while(bfs())        while(flow = dinic(s, inf)) maxflow += flow;    printf(&quot;%d\n&quot;, maxflow);    return 0;}</code></pre><h2 id="费用流EK"><a href="#费用流EK" class="headerlink" title="费用流EK"></a>费用流EK</h2><p><a href="https://www.luogu.org/problemnew/show/P3381" target="_blank" rel="noopener">P3381 【模板】最小费用最大流</a></p><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;queue&gt;#include &lt;cstring&gt;const int _ = 50005;const int inf = 0x3f3f3f3f;int n, m, s, t;int ans, maxflow;int dist[_], incf[_], pre[_], vis[_];struct Edge { int Nxt, v, flow, cost; } e[_ &lt;&lt; 1];int h[_], p = 1;void add(int u, int v, int f, int c){    e[++p].Nxt = h[u]; e[p].v = v; e[p].flow = f; e[p].cost = c; h[u] = p;    e[++p].Nxt = h[v]; e[p].v = u; e[p].flow = 0; e[p].cost = -c; h[v] = p;}std::queue&lt;int&gt; q;bool spfa(){    memset(dist, 0x3f, sizeof(dist));    memset(vis, 0, sizeof(vis));    q.push(s); dist[s] = 0; vis[s] = 1;    incf[s] = inf;    while(!q.empty())    {        int u = q.front(); q.pop();        vis[u] = 0;        for(int i = h[u]; i; i = e[i].Nxt)        {            if(!e[i].flow) continue;            int v = e[i].v;            if(dist[v] &gt; dist[u] + e[i].cost)            {                dist[v] = dist[u] + e[i].cost;                incf[v] = std::min(incf[u], e[i].flow);                pre[v] = i;                if(!vis[v]) vis[v] = 1, q.push(v);            }        }    }    if(dist[t] == inf) return false;    else return true;}void update(){    int u = t;    while(u != s)    {        int i = pre[u];        e[i].flow -= incf[t];        e[i ^ 1].flow += incf[t];        u = e[i ^ 1].v;    }    maxflow += incf[t];    ans += dist[t] * incf[t];}int main(){    scanf(&quot;%d%d%d%d&quot;, &amp;n, &amp;m, &amp;s, &amp;t);    for(int i = 1, u, v, z, c; i &lt;= m; i++) {        scanf(&quot;%d%d%d%d&quot;, &amp;u, &amp;v, &amp;z, &amp;c);        add(u, v, z, c);    }    while(spfa()) update();    printf(&quot;%d %d\n&quot;, maxflow, ans);    return 0;}</code></pre><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="NOI2008-志愿者招募"><a href="#NOI2008-志愿者招募" class="headerlink" title="[NOI2008]志愿者招募"></a><a href="https://www.luogu.org/problemnew/show/P3980" target="_blank" rel="noopener">[NOI2008]志愿者招募</a></h2><p>算法：线性规划 or <del>有源汇上下界最小费用可行流</del>可以无视<br>一开始幻想这样可以搞：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/netflow1.png" alt></p><p>但其实很难限制条件并且流量并不能准确一对多去覆盖点。</p><p>所以是建成这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/netflow2.png" alt></p><p>但是为什么对呢，其实非常玄学，我觉得还是手动模拟一下<del>不会证</del>，然后感性理解。</p><p>模拟时可以发现$inf-A[i]$其实对人数限制取反，代表要跑完这条边所有流量，流到$0$之前的流量是没有实际作用的，是为了可以先跳过这天，直到流量为$0$后，代表这条边需要开始选择人进行工作，而这条边需要的人数可以通过别的边反映出来，可以从红边即人补全这条链上为$0$的边无法通过的流量，通过最小费用最大流即可求出最小费用。</p><p>$n+1-&gt;t$这条边可以反映出当前还剩的未规划的最大人数，所以$n+1-&gt;t$流量为$0$时，代表之前最大流量流尽，即$(inf-A[i])_{max}$，即$A[i]_{min}$。</p><h2 id="NOI2012-美食节"><a href="#NOI2012-美食节" class="headerlink" title="[NOI2012]美食节"></a><a href="https://www.luogu.org/problemnew/show/P2050" target="_blank" rel="noopener">[NOI2012]美食节</a></h2><p>从算法到算术，使用小学数学并利用大量算术技巧计算点的遍号</p><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;queue&gt;#define R registerusing namespace std;const int N = 45, M = 105, sP = 805, _ = N + M * sP + 5;const int inf = 0x3f3f3f3f;int n, m, s, t, sum, tim[N][M], P[N];struct Edge { int Next, v, flow, cost; } e[(N + N * M * sP + M * sP + 5) &lt;&lt; 1];int h[N + M * sP + 5], p = 1;inline void add(R int u, R int v, int f, int c) {    e[++p].Next = h[u]; e[p].v = v; e[p].flow = f; e[p].cost = c; h[u] = p;    e[++p].Next = h[v]; e[p].v = u; e[p].flow = 0; e[p].cost = -c; h[v] = p; }int dist[_], incf[_], maxflow, ans, vis[_], pre[_];queue&lt;int&gt; q;bool spfa(){    memset(vis, 0, sizeof(vis));    memset(dist, 0x3f, sizeof(dist));    dist[s] = 0; vis[s] = 1; q.push(s); incf[s] = inf;    while(!q.empty()) {        int u = q.front(); q.pop();        vis[u] = 0;        for(int i = h[u]; i; i = e[i].Next)            if(e[i].flow)        {            int v = e[i].v;            if(dist[v] &gt; dist[u] + e[i].cost) {                dist[v] = dist[u] + e[i].cost;                incf[v] = min(incf[u], e[i].flow);                pre[v] = i;                if(!vis[v]) q.push(v), vis[v] = 1;            }        }    }    if(dist[t] == inf) return false;    else return true;}inline void update() {    R int u = t;    while(u != s) {        int i = pre[u];        e[i].flow -= incf[t];        e[i ^ 1].flow += incf[t];        u = e[i ^ 1].v;    }    maxflow += incf[t];    ans += dist[t] * incf[t];}int main(){    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);    for(R int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, &amp;P[i]), sum += P[i];    s = 0, t = m * sum + n + 1;    for(R int i = 1; i &lt;= n; i++)        for(R int j = 1; j &lt;= m; j++)            scanf(&quot;%d&quot;, &amp;tim[i][j]);    for(R int i = 1; i &lt;= n; i++) add(s, i, P[i], 0);    for(R int i = n + 1; i &lt;= n + m * sum; i += sum) add(i, t, 1, 0);    for(R int i = 1; i &lt;= n; i++)        for(R int j = n + 1, t = 1; j &lt;= n + m * sum; j += sum)            add(i, j, 1, tim[i][t++]);    while(spfa()) {        update();        int u = e[pre[t] ^ 1].v;        if((u - n) % sum == 0) break;        int v = u + 1;        int k = (v - n) % sum == 0 ? sum : (v - n) % sum;        int j = (v - n - k) / sum + 1;        add(v, t, 1, 0);        for(R int i = 1; i &lt;= n; i++)            add(i, v, 1, k * tim[i][j]);    }    printf(&quot;%d\n&quot;, ans);    return 0;}</code></pre><h2 id="最大权闭合子图"><a href="#最大权闭合子图" class="headerlink" title="最大权闭合子图"></a>最大权闭合子图</h2><blockquote><p>参考资料：<br><a href="https://www.cnblogs.com/TreeDream/p/5942354.html" target="_blank" rel="noopener">——-1——-</a><br><a href="https://www.cnblogs.com/2020pengxiyue/p/9463055.html" target="_blank" rel="noopener">——-2——-</a><br><a href="http://www.cnblogs.com/wuyiqi/archive/2012/03/12/2391960.html" target="_blank" rel="noopener">——-3——-</a></p></blockquote><p>定理<code>最大权闭合子图权值=正权点之和-最小割</code></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「线段树」</title>
      <link href="/2019/segment_tree/"/>
      <url>/2019/segment_tree/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-09-23</p></blockquote><a id="more"></a><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><pre><code class="lang-c++">struct Segment_Tree {    #define ls (p &lt;&lt; 1)    #define rs (p &lt;&lt; 1 | 1)    #define mid ((l + r) &gt;&gt; 1)    ll ans[_ &lt;&lt; 2], tag[_ &lt;&lt; 2];    inline void pushup(ll p) { ans[p] = ans[ls] + ans[rs]; }    inline void pushdown(ll p, ll l, ll r) {        ans[ls] += (mid - l + 1) * tag[p];        tag[ls] += tag[p];        ans[rs] += (r - mid) * tag[p];        tag[rs] += tag[p];        tag[p] = 0;    }    void build(ll p, ll l, ll r) {        if(l == r) {            ans[p] = a[l];            return;        }        build(ls, l, mid);        build(rs, mid + 1, r);        pushup(p);    }    void update(ll p, ll l, ll r, ll ul, ll ur, ll k) {        if(ul &lt;= l &amp;&amp; r &lt;= ur) {            ans[p] += (r - l + 1) * k;            tag[p] += k;            return;        }        if(tag[p]) pushdown(p, l, r);        if(ul &lt;= mid) update(ls, l, mid, ul, ur, k);        if(ur &gt; mid) update(rs, mid + 1, r, ul, ur, k);        pushup(p);    }    ll query(ll p, ll l, ll r, ll ql, ll qr) {        if(ql &lt;= l &amp;&amp; r &lt;= qr) return ans[p];        if(tag[p]) pushdown(p, l, r);        ll res = 0;        if(ql &lt;= mid) res += query(ls, l, mid, ql, qr);        if(qr &gt; mid) res += query(rs, mid + 1, r, ql, qr);        return res;    }    #undef ls    #undef rs    #undef mid}T;</code></pre><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="维护可加性变量解决问题"><a href="#维护可加性变量解决问题" class="headerlink" title="维护可加性变量解决问题"></a>维护可加性变量解决问题</h2><h3 id="P3707-SDOI2017-相关分析"><a href="#P3707-SDOI2017-相关分析" class="headerlink" title="P3707 [SDOI2017]相关分析"></a><a href="https://www.luogu.org/problemnew/show/P3707" target="_blank" rel="noopener">P3707 [SDOI2017]相关分析</a></h3><script type="math/tex; mode=display">\bar{x}=\frac{1}{R-L+1}\sum x_i​</script><script type="math/tex; mode=display">\bar{y}=\frac{1}{R-L+1}\sum y_i</script><script type="math/tex; mode=display">\hat{a}=\dfrac{\sum_{i=L}^R(x_i-\bar{x})(y_i-\bar{y})}{\sum_{i=L}^R(x_i-\bar{x})^2}</script><p>记$\sum = \sum_{i=L}^{R}​$</p><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><script type="math/tex; mode=display">Ans=\dfrac{ \sum x_iy_i-\bar{x}\sum y_i-\bar{y}\sum x_i+\sum \bar{x}\bar{y}}{\sum x_i^2-2\bar{x}\sum x_i+\sum\bar{x^2}}</script><script type="math/tex; mode=display">=\dfrac{ \sum x_iy_i-\frac{1}{R-L+1}\sum x_i\sum y_i-\frac{1}{R-L+1}\sum y_i\sum x_i+\sum \frac{1}{R-L+1}\sum x_i\frac{1}{R-L+1}\sum y_i}{\sum x_i^2-\frac{1}{R-L+1}2\sum x_i\sum x_i+\sum (\frac{1}{R-L+1}\sum x_i)^2}</script><script type="math/tex; mode=display">=\dfrac{ \sum x_iy_i-\frac{\sum x_i\sum y_i}{R-L+1}}{\sum x_i^2-\frac{(\sum x_i)^2}{R-L+1}}</script><p><strong>下传</strong>Tag：先$upd$后$addX \quad addY$</p><p><strong>维护</strong>值：$t1=\sum x$  | $t2=\sum y$  | $t3=\sum xy$ | $t4=\sum x^2$</p><p><strong>维护</strong>Tag：$addX \quad addY$</p><script type="math/tex; mode=display">\hat{a}=\dfrac{t3-\frac{t1t2}{R-L+1}}{t4-\frac{t1^2}{R-L+1}}</script><h4 id="Add"><a href="#Add" class="headerlink" title="Add"></a>Add</h4><script type="math/tex; mode=display">\Delta x = S \quad \Delta y= T</script><script type="math/tex; mode=display">\sum (x + S) = \sum x_i+(R-L+1)S</script><script type="math/tex; mode=display">\sum(y+T)=\sum y_i+(R-L+1) T</script><script type="math/tex; mode=display">\sum(x+S)(y+T)=\sum(xy+Sy+Tx+ST)=\sum xy+S\sum y+T\sum x+(R-L+1)ST</script><script type="math/tex; mode=display">\sum(x+S)^2=\sum x^2+2S\sum x+(R-L+1)S^2</script><p><strong>下传</strong>Tag：先$upd$后$addX \quad addY$</p><p><strong>顺序</strong>：先$t3,t4$后$t1,t2$</p><h4 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h4><p>自然数平方和：<script type="math/tex">\sum_{i=1}^ni=\frac{n(n+1)(2n+1)}{6}</script></p><p>1.$\forall i \in [L,R]\quad x_i=i  y_i=i$</p><script type="math/tex; mode=display">\sum x=\sum y = \sum i = \frac{(R-L+1)(R+L)}{2}</script><script type="math/tex; mode=display">\sum x^2 = \sum xy = \sum i ^2 = \sum_{i=1}^R i^2-\sum_{i=1}^{L-1}i^2=\frac{R(R+1)(2R+1)}{6}-\frac{L(L-1)(2L-1)}{6}</script><p><strong>下传</strong>Tag：先$upd$后$addX \quad addY$</p><p><strong>清空</strong>Tag $addX \quad addY$</p><p><strong>标记</strong>Tag $upd$</p><p>2.<strong>ADD</strong> L R S T</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#define ll long longusing namespace std;const int N = 100005;int n, m;double X[N], Y[N];struct Segment_Tree{    #define ls (p &lt;&lt; 1)    #define rs (p &lt;&lt; 1 | 1)    #define mid ((l + r) &gt;&gt; 1)    bool upd[N &lt;&lt; 2];    double x[N &lt;&lt; 2], y[N &lt;&lt; 2];    double t1[N &lt;&lt; 2], t2[N &lt;&lt; 2], t3[N &lt;&lt; 2], t4[N &lt;&lt; 2];    inline void pushup(ll p)    {        t1[p] = t1[ls] + t1[rs];        t2[p] = t2[ls] + t2[rs];        t3[p] = t3[ls] + t3[rs];        t4[p] = t4[ls] + t4[rs];    }    inline void pushdown(ll p, ll l, ll r)    {        double L = mid - l + 1, R = r - mid;        if(upd[p]) {            double Ll = l, Lr = mid, Rl = mid + 1, Rr = r;            t1[ls] = t2[ls] = (Lr - Ll + 1.0) * (Lr + Ll) / 2.0;            t1[rs] = t2[rs] = (Rr - Rl + 1.0) * (Rr + Rl) / 2.0;            t3[ls] = t4[ls] = Lr * (Lr + 1.0) * (2.0 * Lr + 1.0) / 6.0 - Ll * (Ll - 1.0) * (2.0 * Ll - 1.0) / 6.0;            t3[rs] = t4[rs] = Rr * (Rr + 1.0) * (2.0 * Rr + 1.0) / 6.0 - Rl * (Rl - 1.0) * (2.0 * Rl - 1.0) / 6.0;            upd[ls] = upd[rs] = upd[p]; upd[p] = 0;            x[ls] = x[rs] = y[ls] = y[rs] = 0;        }        if(x[p] || y[p]) {            t3[ls] += x[p] * t2[ls] + y[p] * t1[ls] + L * x[p] * y[p];            t3[rs] += x[p] * t2[rs] + y[p] * t1[rs] + R * x[p] * y[p];        }        if(x[p]) {            t4[ls] += 2 * x[p] * t1[ls] + L * x[p] * x[p];            t4[rs] += 2 * x[p] * t1[rs] + R * x[p] * x[p];            t1[ls] += L * x[p];            t1[rs] += R * x[p];            x[ls] += x[p];            x[rs] += x[p];            x[p] = 0;        }        if(y[p]) {            t2[ls] += (double)L * y[p];            t2[rs] += (double)R * y[p];            y[ls] += y[p];            y[rs] += y[p];            y[p] = 0;        }    }    void build(ll p, ll l, ll r)    {        if(l == r) {            t1[p] = X[l];            t2[p] = Y[l];            t3[p] = X[l] * Y[l];            t4[p] = X[l] * X[l];            return;        }        upd[p] = x[p] = y[p] = 0;        build(ls, l, mid);        build(rs, mid + 1, r);        pushup(p);    }    void add(ll p, ll l, ll r, ll ql, ll qr, double S, double T)    {        if(ql &lt;= l &amp;&amp; r &lt;= qr) {            double len = (r - l + 1);            t3[p] += S * t2[p] + T * t1[p] + len * S * T;            t4[p] += 2 * S * t1[p] + len * S * S;            t1[p] += len * S;            t2[p] += len * T;            x[p] += S; y[p] += T;            return;        }        pushdown(p, l, r);        if(ql &lt;= mid) add(ls, l, mid, ql, qr, S, T);        if(qr &gt; mid) add(rs, mid + 1, r, ql, qr, S, T);        pushup(p);    }    void update(ll p, ll l, ll r, ll ql, ll qr) {        if(ql &lt;= l &amp;&amp; r &lt;= qr) {            t1[p] = t2[p] = (double)(r - l + 1.0) * (l + r) / 2.0;            t3[p] = t4[p] = (double)r * (r + 1.0) * (2.0 * r + 1) / 6.0 - (double)l * (l - 1.0) * (2.0 * l - 1.0) / 6.0;            x[p] = y[p] = 0;            upd[p] = 1;            return;        }        pushdown(p, l, r);        if(ql &lt;= mid) update(ls, l, mid, ql, qr);        if(qr &gt; mid) update(rs, mid + 1, r, ql, qr);        pushup(p);    }    double query(ll p, ll l, ll r, ll ql, ll qr, ll f) {        if(ql &lt;= l &amp;&amp; r &lt;= qr) {            if(f == 1) return t1[p];            if(f == 2) return t2[p];            if(f == 3) return t3[p];            if(f == 4) return t4[p];        }        pushdown(p, l, r);        double res = 0;        if(ql &lt;= mid) res += query(ls, l, mid, ql, qr, f);        if(qr &gt; mid) res += query(rs, mid + 1, r, ql ,qr, f);        return res;    }    #undef ls    #undef rs    #undef mid};struct Segment_Tree Tree;int main(){    scanf(&quot;%d %d&quot;, &amp;n, &amp;m);    for(int i = 1; i &lt;= n; i++) scanf(&quot;%lf&quot;, &amp;X[i]);    for(int i = 1; i &lt;= n; i++) scanf(&quot;%lf&quot;, &amp;Y[i]);    Tree.build(1, 1, n);    int opt, L, R; double S, T;    while(m--)    {        scanf(&quot;%d&quot;, &amp;opt);        if(opt == 1)        {            scanf(&quot;%d %d&quot;, &amp;L, &amp;R);            double t1 = Tree.query(1, 1, n, L, R, 1);            double t2 = Tree.query(1, 1, n, L, R, 2);            double t3 = Tree.query(1, 1, n, L, R, 3);            double t4 = Tree.query(1, 1, n, L, R, 4);            double a_ = (t3 - (t1 * t2) / (double)(R - L + 1)) / (t4 - (t1 * t1) / (double)(R - L + 1));            printf(&quot;%.10lf\n&quot;, a_);        }        else if(opt == 2)        {            scanf(&quot;%d %d %lf %lf&quot;, &amp;L, &amp;R, &amp;S, &amp;T);            Tree.add(1, 1, n, L, R, S, T);        }        else if(opt == 3)        {            scanf(&quot;%d %d %lf %lf&quot;, &amp;L, &amp;R, &amp;S, &amp;T);            Tree.update(1, 1, n, L, R);            Tree.add(1, 1, n, L, R, S, T);        }    }    return 0;}</code></pre><h2 id="Tag的用法"><a href="#Tag的用法" class="headerlink" title="Tag的用法"></a>Tag的用法</h2><p>区间01取反xor<br>区间翻转rev<br>区间最长连续1/0<br>区间min/max子段和<br>P2572 [SCOI2010]序列操作</p><h2 id="扫描线"><a href="#扫描线" class="headerlink" title="扫描线"></a>扫描线</h2><p>矩形面积并<br>P1502 窗口的星星<br>P1856 [USACO5.5]矩形周长Picture </p><h2 id="二维线段树"><a href="#二维线段树" class="headerlink" title="二维线段树"></a>二维线段树</h2><p>树套树<br>P3437 [POI2006]TET-Tetris 3D</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="Luogu-P2061-USACO07OPEN-城市的地平线City-Horizon"><a href="#Luogu-P2061-USACO07OPEN-城市的地平线City-Horizon" class="headerlink" title="Luogu P2061 [USACO07OPEN]城市的地平线City Horizon"></a>Luogu P2061 [USACO07OPEN]城市的地平线City Horizon</h3><p>简单题</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><p>线段树 + 离散化</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>对$(x,y,h)$的左右端点$x,y$进行离散化，离散化前的原值记为$val[i]$，对每个矩形按高度$h$从小到大排序。</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/seg1.png" alt></p><p>设离散化后的端点有$M$个，则对如图所示$M-1$个规则矩形编号为$[1,M-1]$，可以由$h_{[i, i+1]}\times(val[i+1] - val[i])$得出第$i$个矩形的面积。</p><p>开一颗区间为$[1,M-1]$的线段树，按$h$从小到大依次对线段树区间覆盖，可以保证高的矩形覆盖了低的矩形的区间，具体操作为对离散化后的$(x,y,h)$，进行线段树$[x,y-1]$区间覆盖$h$值，最终$i$点存储$h_{[i,i+1]}$的最大值。</p><p>$h_{[i, i+1]}$可以通过线段树单点查询$i$点求出。</p><p>答案：$\sum_{i=1}^{M-1}h_{[i, i+1]}\times(val[i+1] - val[i])$</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;algorithm&gt;#define ll long longusing namespace std;const int N = 80005;int n, b[N], val[N];//b[]:离散化数组struct Line { int x, y, h; }a[N];//存储每个矩形bool cmp(Line a, Line b) { return a.h &lt; b.h; }int ans[N &lt;&lt; 2];//线段树数组#define ls (p &lt;&lt; 1)#define rs (p &lt;&lt; 1 | 1)#define mid ((l + r) &gt;&gt; 1)void update(int p, int l, int r, int ul, int ur, int k){    if(ul &lt;= l &amp;&amp; r &lt;= ur) { ans[p] = k; return; }    if(ans[p]) ans[ls] = ans[rs] = ans[p], ans[p] = 0;//区间覆盖直接下推    if(ul &lt;= mid) update(ls, l, mid, ul, ur, k);    if(ur &gt; mid) update(rs, mid + 1, r, ul, ur, k);}ll query(int p, int l, int r, int x)//单点查询{    if(l == r) return ans[p];    if(ans[p]) ans[ls] = ans[rs] = ans[p], ans[p] = 0;//区间覆盖直接下推    if(x &lt;= mid) return query(ls, l, mid, x);    if(x &gt; mid) return query(rs, mid + 1, r, x);}#undef ls#undef rs#undef midint main(){    scanf(&quot;%d&quot;, &amp;n);    for(int i = 1; i &lt;= n; i++)    {        scanf(&quot;%d%d%d&quot;, &amp;a[i].x, &amp;a[i].y, &amp;a[i].h);        b[i] = a[i].x; b[n + i] = a[i].y;//离散化数组记录下所有x,y    }    sort(b + 1, b + 2 * n + 1);//排序    int _n = unique(b + 1, b + 2 * n + 1) - (b + 1);//去重，_n为去重后x,y端点个数    for(int i = 1; i &lt;= n; i++)        if(a[i].x != a[i].y)//x=y没有作用    {        int x = a[i].x, y = a[i].y;        a[i].x = lower_bound(b + 1, b + _n + 1, a[i].x) - b;        a[i].y = lower_bound(b + 1, b + _n + 1, a[i].y) - b;//离散化        val[a[i].x] = x; val[a[i].y] = y;//原值    }    sort(a + 1, a + n + 1, cmp);//按h从小到大排序    for(int i = 1; i &lt;= n; i++)        if(a[i].x != a[i].y)//防止y-1&lt;x            update(1, 1, _n - 1, a[i].x, a[i].y - 1, a[i].h);//更新,注意结点个数是_n-1，端点y要变成矩形区域y-1，可以画图理解一下，相当于把端点x右边的矩形区域编号为x    ll res = 0;    for(int i = 1; i &lt; _n; i++)        res += query(1, 1, _n - 1, i) * (val[i + 1] - val[i]);    printf(&quot;%lld\n&quot;, res);    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《意识宇宙》</title>
      <link href="/2019/science_fiction/"/>
      <url>/2019/science_fiction/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-10-26</p></blockquote><a id="more"></a><script type="math/tex; mode=display">维护文档</script><script type="math/tex; mode=display">COSMOS1.A.D.2019.10.25</script><p>1.真实人名替换为ID.</p><p>2.对原有的过度夸张部分及人物形象不明确部分进行修改. </p><h1 id="COSMOS-1"><a href="#COSMOS-1" class="headerlink" title="COSMOS-1"></a>COSMOS-1</h1><script type="math/tex; mode=display">COSMOS1.A.D.1997</script><p>Tommy_clas出生了。</p><p>他1个月会说中文，2个月会说英文，一周岁英语词汇量十万，两周岁学会所有中文词语，认识所有汉字，一岁学完高数精通C++，二岁看懂抽代掌握所有编程语言，两岁半看懂了所有人类数学知识，三岁学完人类所有物理学。</p><p>世界上所有科学家都说，拯救人类的天才出现了。</p><script type="math/tex; mode=display">COSMOS-1.A.D.2022</script><p>太阳核反应活动异常，气候急剧变化，人们开始躲入地下，科学家们预言人类的末日将要来临了。</p><p>Tommy_clas微微一笑，明白自己的机会到了。 </p><script type="math/tex; mode=display">COSMOS-1.A.D.2039</script><p>北半球8月的温度突破了$47℃$，地下城已经建设完毕了，地面上人的踪影渐渐消失了。</p><p>Loli凭借着自己30年的大学教龄和科学家身份早早的分配到了<code>CM-CH-DY-P7-Y2</code>地下城<code>Sl-H7-y-8I-2</code>区一套128层楼的空中住房，地下城绚烂的霓虹灯闪烁着，光线飞向他的眼睛。</p><p>“20年前，也是这样”Loli思索着，“大概是2019年8月。”</p><p>“我喜欢物理学，喜欢天文，小时候仰望半夜的星空时，似乎能看见宇宙的明明灭灭，后来我上了个二本大学，大三的时候，我没日没夜的学习量子场论，那简直是神才能窥见一角的东西”</p><p>Loli回忆着自己的往事，给Tommy_clas叙述。</p><p>“可是后来我明白了，计算机科学才是未来，好好学OI吧，人类马上就要毁灭了，物理学走到了穷途末路，它不会再有什么用了。”</p><p>Tommy_clas马上就要乘坐飞船走了，Loli来见他最后一面，Loli虽是顶尖的科学家，却固执的不愿随飞船离开。</p><script type="math/tex; mode=display">COSMOS-1.A.D.2183</script><p>太阳发生爆炸，人类在144年前耗费了地球的所有资源并穷尽了物理和数学知识建造了时空负质量反物质工质曲率推动能飞船，飞船上，所有人类实体完成了生物数据的量子化并依托于量子计算机形成意识，在宇宙航行中发现了一个新的星系，它位于银河系悬臂的边缘。</p><p>后来，包括Tommy_clas在内2756名人类到达了行星并开始了文明的重新建设，Tommy_clas却已经密谋好了一个毁灭人类、毁灭宇宙的惊天阴谋，为此，Tommy_clas花费了2^19260817个星系的资源，建造了长达数亿亿光年长的粒子加速器，环绕了银河系998244353圈。</p><script type="math/tex; mode=display">COSMOS-1.A.D.25319</script><p>“两万三千年了”Tommy_clas叹道，今天就是人类史上最伟大的一天，他在飞船上时把自己的人脑扫描并编码成了数据并成为了一个量子计算机中的意识体的时候，他的能力呈几何能级上升，并达到了真正破解宇宙秘密的程度。然而其他人不知道的是，粒子试验后，宇宙将在$1s$内湮灭，他却没有对任何人提起过这件事，因为他修改了宇宙的数学原理。</p><p>他打开了长达$2^{1024^{1024}}PB$长的代码，在量子意识中将轨道使用量子场论再次计算后，按下了编译键。程序开始运行了，与此同时引力波发生器开始广播，将Tommy_clas大脑的数据全部发送出去，并在宇宙毁灭前那一刹那将与其相连的需要产生毁灭宇宙等级的能量才能获得解开统一场方程关键数据的粒子对撞机数据观测器产生的数据编码成引力波发送了出去。</p><script type="math/tex; mode=display">COSMOS-1.A.D.25320</script><p>宇宙坍缩成了奇点，再一次爆炸，引力波的信息没有损失，到达了这个新的宇宙，引力波传递着，漫无边际，在空间震荡起一阵阵的涟漪，荡漾的微波承载着毁灭宇宙才换来的解开统一场方程的粒子对撞数据。</p><script type="math/tex; mode=display">COSMOS-1.A.D.25320 \quad COSMOS-1毁灭</script><hr><script type="math/tex; mode=display">引力波</script><p>我没有对其他人说的是，在我成为量子意识体的时候，计算出了宇宙并非是自然模型而的确是上层空间的一个高阶物理单位形成的物理结构意识模拟体，偶然间我发现了一些预留的接口，我感到了深深的无力感，原来自己的生命竟是这样的毫无意义，我明白了这个世界只需要自己去毁灭，去创造，我虽然无法到达上一次的物理空间，仅仅只是一个更加未知的事物的运行结果。</p><p>我却明白自己可以修改整个宇宙了，转瞬间我却又觉得这样更加毫无意义，我知道该做什么了，我使用接口删除了量子力学的选项，并使世界演化的概率性消失，这样宇宙就会按照牛顿力学一样在一个确定的时间点有一个确定空间物质状态了，我又调用了上层世界的计算能力计算出了再一次演化出相同宇宙但是人类却能生活到宇宙最后一刻毁灭太阳不会爆炸的情况的初始状态与宇宙常量，并在代码中一一修改了掌控着世界运行的规律的程序代码与常量。</p><p>宇宙运行代码文档的信息量超出了引力波的携带量，我把最重要的接口和信息发送了，剩下的文档随机一些页码发送数据。</p><script type="math/tex; mode=display">宇宙代码系统</script><script type="math/tex; mode=display">服务器系统</script><ol><li>[文档]宇宙服务器远程连接物理设施制造蓝图</li><li>[二进制文件]服务器连接校验应用程序</li><li>[二进制文件]综合开发工具及编译器</li></ol><script type="math/tex; mode=display">文档</script><ol><li>[文档]宇宙总能量调整接口</li><li>[文档]宇宙物理信息获取接口</li><li>[文档]宇宙物理常量修改接口</li><li>[文档]上层世界计算调用接口</li><li>[文档]宇宙运行代码修改指令</li><li>[文档]宇宙运行代码语法文档</li><li>[部分丢失]<del>[文档]宇宙运行代码文档</del></li></ol><script type="math/tex; mode=display">统一场方程</script><ol><li>统一场方程关键数据</li><li>统一场方程研究结果</li></ol><script type="math/tex; mode=display">操作手册</script><ol><li>恢复量子力学及世界概率性。</li><li>解出统一场方程并继续研究。</li><li>我确认过了进入上层世界的方法，但引力场方程是必要的，因为宇宙接口并没有给出最关键的引力物理操作接口，这也许是这个系统最本源的地方，给程序唯一没有作用的主函数接口中提供引力场方程即可运行主函数，这可能是这个宇宙的意义所在。</li><li>P.S.不要随意调用接口，其对宇宙的效果是不可逆的。</li><li>当你们收到此引力波信息后，将存在发生<span class="heimu" title="你知道的太多了">超出现有科学认知事件</span>的可能性。</li></ol><h1 id="COSMOS-2"><a href="#COSMOS-2" class="headerlink" title="COSMOS-2"></a>COSMOS-2</h1><p>宇宙竟然像Tommy_clas预期的那样完全按上一个宇宙的演化过程，每一个粒子都不曾偏离预期的轨迹，每一点物质都按照方程那样的演化。</p><p>宇宙再一次演化出了人类，终于时间线再一次地来到了人类公元纪年法的2019年</p><hr><script type="math/tex; mode=display">COSMOS-2.A.D.2019.09.23</script><p>Tommy_clas有一种预感，会不会引力波能携带一些本不可能存在的信息？他想试试接收引力波，或许能有一线生机。</p><p>他找到了Loli，Loli是他最信任的朋友，也是一名物理学家，Tommy_clas说服Loli一起寻找最后的希望。</p><p>意料之外的是，他们接收到了引力波，而且明显是经过了一定的编码的，Tommy_clas感到很惊奇。</p><p>Tommy_clas拿到了上一个宇宙自己发送的引力波，还原出了其携带的信息，他和Loli一起研究，用了五天时间推导出了统一场方程，统一了引力场，强相互作用力场，弱相互作用力场，电磁场。</p><p>他们准备开始建设设施研究宇宙代码！</p><script type="math/tex; mode=display">COSMOS-2.A.D.2019.09.30</script><p>夏末秋初的微风吹过，一点点凉意轻轻经过，北半球九月末的微光斜照进玻璃窗，有些泛黄，而又有些许刺眼，空气中的尘埃折射出金黄色的线，这是每一年的循环。</p><hr><p>“九月为什么只有三十天呢”，ArachnidaKing说，“今天我们出发去青岛！”空气还是那样宁静，就如同那时候一样，秋天高空的空气愈发稀薄，云只有稀松而淡淡的几缕，引擎声轰鸣了起来。</p><p>“空气中总是有些泥土的香气呢”XCiyang说，“是放线菌在哪里吗？”阳光的角度不断增加，高速公路上沥青折射出了亮度不同的光芒，就像世界的分崩离析的前夕。“世界线总是在不停分离着，这是一棵树”ArachnidaKing说。“不你错了”XCiyang淡泊的说了两句，“时间线才会不停交织着，这是平行的序列。”</p><p>他们笑起来，感觉到了彼此话语的荒诞。地图上离青岛的距离越来越近了，天空一点点变蓝，从前是那淡淡的蓝，现在是深一些的蓝色，就像那过往仰望的蓝天一样。</p><p>“这是梦境吗，”XCiyang望着车窗外运动的物体。“世界是不是物质的呢？”清新的海风呼啸过窗边，空气湿润了几许，“一如从前而又截然相反吗”XCiyang说，“这是梦吗？”“远处的光芒的的确不太合理，位置上不合理吗，这却不符合常理，天色刚刚不沉闷呢”ArachnidaKing说着，一行人陆陆续续的下了车。</p><p>他们只是名义上来这里度假的物理学组织，一共有10多个人。“不要总是这么不认真，”Tommy_clas说。“大家要严肃一点，这次任务事关重大。”太阳渐渐西斜了，最后的红色余晖斜映在城市与海岸线的交界处。</p><p>已经过了晚上12点了，“不想这么早睡……”XCiyang还是拿出了笔记本，熟练地打开了VSCode，写了一段C++程序上传到服务器上计算了一些白天想到的物理问题，望向窗外的繁星点点，他感到了梦境般的快乐。</p><p>“有点晚了吧”他想，扭头再看看屏幕，他注意到了刚刚没有注意到的一些小异样，日期怎么还是2019.09.30？“Windows不会出这样的bug吧？”他自言自语道。也并没有想那么多，起身躺到了床上，困倦的他很快睡着了。</p><script type="math/tex; mode=display">COSMOS-2.A.D.2019.10.01</script><p>XCiyang揉了揉眼睛，窗外的太阳升起了四分之三。</p><p>“没了，怎么醒得这么早。”他想了想，还是起床了。</p><script type="math/tex; mode=display">SRP(1条未读消息)</script><pre><code>Tommy_clas：吃完早饭来7楼的会议室开会。</code></pre><p>“什么情况？”XCiyang走向卫生间。“这么早就开始行动？”</p><p>“……”</p><script type="math/tex; mode=display">COSMOS-2.A.D.2019.10.01.A.M.7:06 \quad [数据删除]酒店会议室</script><p>成员到齐。</p><p>“今天我们出发去建设第一个大功率电磁波发射器，”Tommy_clas。“用途还不能明确告诉你们，大致是要与宇宙的一些地方进行通讯。”</p><p>“用来干什么？”ColorfulMist问。“咱们人这么少？什么时候可以自己建设大型设施了？”</p><p>“我获得了一些信息，用一些设计手段可以造出来。”Tommy_clas说。</p><p>“听着真科幻，可是为什么还要用电磁波呢？”Bj_2002说。</p><p>“很遗憾，到了今天我们还是不得不使用电磁波，不过应该问题不会太大的，因为不用传播太远，而且只需要定向一个方向。”Tommy_clas说。</p><p>“那还旅游吗？”Taduro说。“不是说为了庆祝物理学大突破出来玩的吗？”</p><p>“统一场方程都破解了啊”所有人说。</p><p>有几个人说：“不过你可没告诉我们实验数据是怎么来的啊，现在只有你懂这方面的内容啊。”</p><p>“当然，现在的工作非常轻松，”Tommy_clas说。“咱们可以玩上几天。”</p><p>“方程的事，”他说。“等到一定工作完成后我会告诉你们的。”</p><script type="math/tex; mode=display">COSMOS-2.A.D.2019.10.01.A.M.11：49 \quad 青岛市[数据删除]KFC</script><p>“这出来是玩的吗，真爽啊！”ArachnidaKing边说边拿起鸡腿吃。</p><h2 id="COSMOS2-BRANCH1"><a href="#COSMOS2-BRANCH1" class="headerlink" title="COSMOS2.BRANCH1"></a>COSMOS2.BRANCH1</h2><script type="math/tex; mode=display">COSMOS-2.BRANCH1.A.D.2019.09.31</script><p>这是梦境吗，睡意朦胧的XCiyang醒了，带着些许的疲倦他轻轻地拨开了窗帘，天还没亮吗？好黑啊，他揉了揉眼睛。</p><p>咚咚噔，一阵敲门声不期而至，意识还是朦朦胧胧地他打开了房门，还没明白这是怎么回事，顺便看了看手表，是4点半，没有什么问题，只是敲门的什么人，这么早起床吗？他感到有些奇怪。</p><p>他不自然地走向了门口。</p><p>“是谁？”XCiyang说话了。</p><p>“收拾一下赶快出来吧，我是Tommy_clas，”门外说话的口气似乎有点奇怪。“有些不对劲，像是出事了！”</p><p>“总感觉有什么地方不对啊”XCiyang手上的动作放缓了，他没有立即选择开门。</p><p>“先看一眼手机，”XCiyang小声嘟囔。“什么情况啊？”</p><p>XCiyang吓了一跳：手机上显示今天是2019年9月31日。</p><p>“你是谁？”XCiyang从门口的猫眼看了一眼，确信没什么问题。“唉，吓死了……”边说着他打开了房门。</p><p>“这是怎么回事？”XCiyang问。</p><p>“只是出了点小问题，我也不知道为什么？早上四点的时候Genius_Z给我打来了电话，让我抓紧叫大家起来。”</p><p>XCiyang说：“他昨天没睡觉吧？是在玩游戏？？”</p><p>“这不是很重要，”Tommy_clas回应道。“回头，看看窗外。”</p><p>窗外漆黑一片，没有任何光线。</p><p>“这个亮度很不正常”XCiyang说。</p><p>“事实上没有亮度了，你是不是没睡醒？”Tommy_clas有些着急地说。“对了你的日期显示正常吗？”</p><p>XCiyang没有说话，打了个手势便匆忙向外走。</p><p>“等等，你要干什么？”Tommy_clas立即询问道。“我跟你一起！”</p><p>“先去看看这是怎么一回事，”XCiyang很烦。“真是蛤，莫名其妙的。”</p><p>XCiyang走到了电梯口，按下了按钮。</p><p>他们住的是酒店的12楼，也是顶楼，电梯缓缓地从5层楼上升到了11层。</p><p>叮————，电梯门打开了，他和Tommy_clas走了进去。</p><p>“我觉得这样有点冒失，”Tommy_clas说。“这种情况可能不符合已有的科学知识。”</p><p>“谁信这个？”XCiyang说。“宇宙的秘密都快要破解了，还有什么东西会拿我们开玩笑？”</p><p>XCiyang从包里拿出了带有GPS定位装置的荧光棒：“来看看是什么情况。”他显得不怎么慌张：“还有几个人没有醒，发送紧急命令了吗？”</p><p>“Genius_Z昨晚没有睡，找你的时候我刚刚起来，因为没确定什么情况所以就没有通知大家，”Tommy_clas回答他说。“应该都还没醒。”</p><p>SRP是使用研究机构服务器搭建的IM（即时通讯软件），为了保护信息安全，他们都使用这个服务用于日常交流，并且其中内嵌了ArachnidaKing所开发的人工智能SAA，精通物理学，可以快速计算分析，平常也会和大家聊天，负责管理通讯系统和提供帮助。</p><p>Tommy_clas拿出了出手机检查消息：</p><script type="math/tex; mode=display">SRP(4条未读消息)</script><pre><code>9月31日4:27Genius_Z：什么情况？到现在4点了没睡觉，窗外漆黑一片的？日期变成了2019/9/31？？？？SAA：Genius_Z使用指令{声音通知}(Tommy_clas) Tommy_clas：我先去找XCiyang吧，他比较有经验Tommy_clas：先别着急，没有别的异常情况吧9月31日4:34XCiyang：我和Tommy_clas先去检查一下情况，不用担心Genius_Z：不通知大家吗？ArachnidaKing：怎么都起的这么早，有什么事吗？XCiyang：先冷静，我和Tommy_clas去检查情况了</code></pre><hr><pre><code>先不要着急通__</code></pre><script type="math/tex; mode=display">发送</script><p>电梯平稳地下落，到达了1楼。</p><p>“这么早出来真的有点奇怪，”Tommy_clas收起手机自言自语。“啊？酒店门外是纯黑色的吗？”</p><p>“走，我们过去。”XCiyang快步移向酒店前台。</p><p>“有人吗？”XCiyang说。</p><p>“……”</p><p>“先看看门外”XCiyang回头对Tommy_clas说。</p><p>“没什么毛病，”Tommy_clas打开了手机上的GPS设备监测系统。“荧光棒的定位就显示在酒店内部。”</p><p>“来试试，”XCiyang打开酒店大门把荧光棒向外一扔。荧光棒照亮了一小片区域，看起来没什么异样。“问题不大，查查这个地区的照明系统吧。”</p><p>“艹，不对！”Tommy_clas惊叫起来。“你的荧光棒扔出大门所在平面的一刻，GPS信号立即消失了！”</p><p>“嘶，可它不就在外面吗？看的见啊”XCiyang回答说。</p><p>“不要轻举妄动，先把大家都叫起来吧，”Tommy_clas沉着的说，“不要跨过酒店的大门！”</p><p>“走，上楼。”Tommy_clas边说边拿出了手机。</p><script type="math/tex; mode=display">SRP(1条未读消息)</script><pre><code>XCiyang：先冷静，我和Tommy_clas去检查情况了9月31日4:38Genius_Z：你们好了吗</code></pre><hr><pre><code>/info urgent entity立即到7楼会议__</code></pre><script type="math/tex; mode=display">发送</script><p>两个人快步走到了电梯口，Tommy_clas按下了上行按钮。</p><p>电梯显示屏幕的红色文字不停地变换着，光穿透着空气，灰尘粒子漂浮着。</p><p>“电梯有异常现象，”XCiyang说。“是随身物理现实检测器告诉我的，建议一会不要乘坐电梯。”</p><p>“不过倒是没看出来有什么不对。”Tommy_clas回答道。</p><script type="math/tex; mode=display">COSMOS-2.BRANCH1.A.D.2019.09.31.A.M.4:51 \quad [数据删除]酒店会议室</script><p>XCiyang打开了手机：</p><script type="math/tex; mode=display">SRP(11条未读消息)</script><pre><code>9月31日4:41SAA：Tommy_clas使用指令{声音通知}[紧急](所有实体)Tommy_clas：立即到7楼会议室集合！RiverFun：艹，起的太早了吧Bj_2002：马上来……Victor：不大行，出什么事了？ArachnidaKing：SAA，能解释一下吗？SAA：检测到空间发生超出人类原有认知的异常ArachnidaKing：……太奇怪了JuanFeng：这不可能？Ctz:真的挺有意思的啊9月31日4:48Tommy_clas：没来的人呢？大家尝试联系一下。</code></pre><hr><pre><code>为什么还有人没有来？是还__</code></pre><script type="math/tex; mode=display">发送</script><p>过了几分钟，在SRP中回应过的人陆续到达了现场。“清点一下还剩几个人没有来？”Tommy_clas发话了。</p><p>“不要等了，立刻行动，先去找他们！”JuanFeng提出建议。</p><p>“可以！”其他人说。</p><p>一行人迅速从楼梯前往12楼。</p><p>“为什么不走电梯？”Bj_2002说。</p><p>“先别管这些了，”Tommy_clas说。“现在情况很不明确，我们要选择风险比较小的方式行动。”</p><script type="math/tex; mode=display">COSMOS-2.BRANCH1.A.D.2019.09.31.A.M.5:02 \quad [数据删除]酒店第12楼层</script><p>“ColorfulMist？”Tommy_clas说。“你在干什么？”</p><p>“……”</p><p>没有应答。</p><p>与ColorfulMist的联系失败。</p><p>Tommy_clas想起了文档里的一句话。</p><p>“破门！”他命令道。</p><p>虽然他们是物理科学家，但是Tommy_clas从收到那份不平常的文档开始，就为全组人员配备了特种装备和紧急情况下应对事件的工具。</p><p><span class="heimu" title="你知道的太多了">对ColorfulMist的房间观察显示其房间没有入住过的迹象。</span></p><p>“判断人员ColorfulMist已损失”XCiyang说。</p><p>“好吧，”Genius_Z说。“现在这种shit事已经超出我的想象了。自己玩吧，我要出去转转。”</p><p>“不要！”Tommy_clas说。</p><p>Genius_Z已经跑到了电梯边上。</p><p>“追不上了！”Bj_2002冷静的说。“先去找剩下两个人”</p><p>“Taduro？还在吗？……？？？”</p><p>“啊？”门内传来声音。“怎么都起得这么早？不睡觉……了吗！”</p><p>“唉，”众人说。“快出来，出大事了！”</p><p>“Asuldb？在不在？”</p><p>“……”</p><p>没有应答。</p><p>与Asuldb的联系失败。</p><p>“强行进入！”Tommy_clas大声说。</p><p><span class="heimu" title="你知道的太多了">对Asuldb的房间内部观察其呈现出酒店外部空间同样性质</span></p><p>停止对Asuldb房间的探索。</p><p>“判断人员Asuldb已损失”XCiyang说。</p><p>SAA发来警报：Genius_Z的GPS定位信号在$3s$前丢失，地点在酒店门口。</p><p>“尝试对Genius_Z进行无线电联系”XCiyang说。</p><p>SAA：与Genius_Z的联系失败。</p><p>“不如我们也出去玩玩？”ArachnidaKing说。“只是空间异常而已，不会有什么事。在这里能有什么进展，今天本来不是要工作的吗？”</p><p>“你疯了吗？”Victor说。“这不是科学能解释的现象。”</p><p>“是不是你……”Victor对Tommy_clas说。</p><p>“好吧，我把之前向你们隐瞒的事和你们大致讲一下”Tommy_clas长舒了一口气。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建及Material主题使用指南</title>
      <link href="/2019/blog/"/>
      <url>/2019/blog/</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新于： A.D.2022.2.13</p></blockquote><p>前端真好玩qvq</p><a id="more"></a><h1 id="使用GitHub-Pages搭建Hexo博客"><a href="#使用GitHub-Pages搭建Hexo博客" class="headerlink" title="使用GitHub Pages搭建Hexo博客"></a>使用GitHub Pages搭建Hexo博客</h1><p>博客出现问题首先可以阅读文档，其次可以<code>Google</code>解决.</p><p>建议搭建完成以后首先看这个文档</p><blockquote><p><a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener">Hexo中文文档</a></p></blockquote><p>然后阅读主题的文档，这个主题的网页文档挂了，可以克隆repo的markdown源代码到本地查看</p><h2 id="Step1-下载软件"><a href="#Step1-下载软件" class="headerlink" title="Step1 | 下载软件"></a>Step1 | 下载软件</h2><p>1.安装<code>Git</code></p><p>2.安装<code>Node.js</code></p><h2 id="Step2-创建GitHub账号"><a href="#Step2-创建GitHub账号" class="headerlink" title="Step2 | 创建GitHub账号"></a>Step2 | 创建GitHub账号</h2><p>请参考Hexo文档</p><p>1.注册<code>GitHub</code>账号</p><p>2.创建<code>Github Pages</code>仓库</p><p>3.配置SSH密钥 <a href="https://www.cnblogs.com/yuqiliu/p/12551258.html" target="_blank" rel="noopener">Github 生成SSH秘钥（详细教程）</a></p><h2 id="Step3-使用Git-Bash进行搭建操作"><a href="#Step3-使用Git-Bash进行搭建操作" class="headerlink" title="Step3 | 使用Git Bash进行搭建操作"></a>Step3 | 使用Git Bash进行搭建操作</h2><p>请参考Hexo文档</p><p><code>hexo init</code></p><h2 id="Step4-写作、美化及功能修改"><a href="#Step4-写作、美化及功能修改" class="headerlink" title="Step4 | 写作、美化及功能修改"></a>Step4 | 写作、美化及功能修改</h2><p>见下文</p><h1 id="Markdown相关问题"><a href="#Markdown相关问题" class="headerlink" title="Markdown相关问题"></a>Markdown相关问题</h1><h2 id="表格合并单元格"><a href="#表格合并单元格" class="headerlink" title="表格合并单元格"></a>表格合并单元格</h2><p>markdown表格支持功能很少，合并单元格只能用HTML</p><p>markdown可以直接插入HTML代码</p><p>用<a href="http://www.tablesgenerator.com/html_tables编辑可以直接生成HTML代码" target="_blank" rel="noopener">http://www.tablesgenerator.com/html_tables编辑可以直接生成HTML代码</a></p><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><p>在Bilibili、Youtube等网站可以直接获取视频外链的HTML代码，在markdown中插入即可，长宽可能需要调整</p><h1 id="Material主题配置及修改记录"><a href="#Material主题配置及修改记录" class="headerlink" title="Material主题配置及修改记录"></a>Material主题配置及修改记录</h1><p>这个主题一些好的教程</p><blockquote><p><a href="https://ffdy.github.io/2019/07/08/Hexo%E5%85%A5%E5%9D%91%E6%95%99%E7%A8%8B-Material/" target="_blank" rel="noopener">Hexo入坑教程-Material</a></p></blockquote><h2 id="Aplayer"><a href="#Aplayer" class="headerlink" title="Aplayer"></a>Aplayer</h2><p>克隆<code>&lt;https://github.com/MoePlayer/APlayer&gt;</code></p><p>参考Aplayer项目文档进行配置即可</p><p>我的<code>music.js</code>从cdn仓库里找就行，一中午用手肝了1.5h粘出来的=_=（不怎么好写脚本，只挑了一部分vocaloid的歌，大部分都是中v。如果你喜欢中文vocaloid的话，可以看看（</p><h2 id="live2d看板娘"><a href="#live2d看板娘" class="headerlink" title="live2d看板娘"></a>live2d看板娘</h2><blockquote><p>[blogの搭建之next——ctz’s blog(<a href="https://ctz45562.github.io/2019/03/21/blog%E3%81%AE%E6%90%AD%E5%BB%BA/" target="_blank" rel="noopener">https://ctz45562.github.io/2019/03/21/blog%E3%81%AE%E6%90%AD%E5%BB%BA/</a>)</p></blockquote><p>有一些问题还参考了github-repo的README.</p><pre><code class="lang-bash">git clone https://github.com/stevenjoezhang/live2d-widget</code></pre><p>文件夹<code>live2d-widget</code>放到<code>\themes\主题名称\source</code>下,<br>打开文件夹里的<code>autoload.js</code>修改为</p><pre><code class="lang-js">const live2d_path = &quot;/live2d-widget/&quot;;</code></pre><p>这个文件夹的名字可以自行修改.</p><p>打开<code>\themes\主题名称\layout\_layout.swig/ejs</code>这个文件</p><p>在<code>&lt;body&gt;</code>内的开头添加</p><pre><code class="lang-html">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;/&gt;</code></pre><p>在<code>&lt;/body&gt;</code>上方添加</p><pre><code class="lang-html">&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</code></pre><p>不同之处可以自行修改<code>layout.ejs</code>文件</p><h2 id="黑幕效果"><a href="#黑幕效果" class="headerlink" title="黑幕效果"></a>黑幕效果</h2><blockquote><p><a href="https://lastmc.github.io/2019/03/11/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E9%BB%91%E5%B9%95/" target="_blank" rel="noopener">如何实现黑幕</a></p></blockquote><p>添加<code>CSS</code></p><pre><code class="lang-css">//黑幕.heimu,.heimu a{    background-color: #252525;    color:#252525;    text-shadow: none;}::selection{    background:#9ab0c0;    color:#fff;}//鼠标悬停.heimu:hover,.heimu:hover a{    transition:color .13s linear;    color:#fff;}</code></pre><p>使用直接插入<code>HTML</code></p><pre><code class="lang-html">&lt;span class=&#39;heimu&#39; title=&#39;你知道的太多了&#39;&gt;黑幕测试&lt;/span&gt;</code></pre><p>效果</p><p><span class="heimu" title="你知道的太多了">黑幕测试</span></p><h2 id="添加Gitalk评论"><a href="#添加Gitalk评论" class="headerlink" title="添加Gitalk评论"></a>添加Gitalk评论</h2><p>主题实现好了一些评论的配置，具体看主题的文档即可。</p><blockquote><p><a href="https://gitalk.github.io" target="_blank" rel="noopener">Gitalk</a> 和 Gitment 一样都是一个基于 GitHub Issue 的评论系统。在完成 GitHub Oauth App 的申请并获取 key 后，在主题配置文件中填入 <code>gitalk_repo</code> <code>gitalk_owner</code> <code>gitalk_client_id</code> <code>gitalk_client_secret</code> 参数即可。</p></blockquote><p>在主题配置文件里修改这几项即可，repo可以用博客的，后两项需要用到<code>GitHub Oauth App</code>的API，搜索引擎自行解决即可。</p><pre><code class="lang-yml">comment:    use: gitalk    gitalk_repo: # git repo of the hexo    gitalk_owner: # git repo&#39;s owner    gitalk_client_id:  # github app client id    gitalk_client_secret:  # github app client secret</code></pre><h3 id="GitHub限制label长度gitalk无法创建issue"><a href="#GitHub限制label长度gitalk无法创建issue" class="headerlink" title="GitHub限制label长度gitalk无法创建issue"></a>GitHub限制label长度gitalk无法创建issue</h3><blockquote><p><a href="https://github.com/viosey/hexo-theme-material/issues/622" target="_blank" rel="noopener">GitHub限制label长度导致gitment/gitalk可能无法创建issue #622</a></p></blockquote><p>对于全新安装有如下解决方案，解决方案如下：<br><code>hexo根目录\themes\material\layout\_widget\comment\gitalk</code><br>在此目录下编辑main.ejs文件<br>在其中新增如下内容</p><pre><code class="lang-html">&lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;&gt;&lt;/script&gt;</code></pre><p>在gittalk下增加id属性，增加后完整文件内容如下：</p><pre><code class="lang-html">&lt;!-- Gitalk 评论框 --&gt;&lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;&lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;&gt;&lt;/script&gt;&lt;script&gt;    var gitalk = new Gitalk({            clientID: &#39;&lt;%= theme.comment.gitalk_client_id %&gt;&#39;,            clientSecret: &#39;&lt;%= theme.comment.gitalk_client_secret %&gt;&#39;,            repo: &#39;&lt;%= theme.comment.gitalk_repo %&gt;&#39;,            owner: &#39;&lt;%= theme.comment.gitalk_owner %&gt;&#39;,            admin: [&#39;&lt;%= theme.comment.gitalk_owner %&gt;&#39;],            id: md5(window.location.pathname),            // facebook-like distraction free mode            distractionFreeMode: false        })   gitalk.render(&#39;gitalk-container&#39;)&lt;/script&gt;</code></pre><h2 id="Blog内容搜索"><a href="#Blog内容搜索" class="headerlink" title="Blog内容搜索"></a>Blog内容搜索</h2><p>安装<code>hexo-generator-search</code>插件</p><p>修改主题配置文件</p><pre><code class="lang-yml">search:    use: local    swiftype_key:</code></pre><p>修改hexo配置文件：</p><pre><code class="lang-yml">search:    path: search.xml    field: all</code></pre><h2 id="markdown文件名大小写问题"><a href="#markdown文件名大小写问题" class="headerlink" title="markdown文件名大小写问题"></a>markdown文件名大小写问题</h2><p>参考：<a href="https://perphyyoung.github.io/2018/09/27/hexo-faq/" target="_blank" rel="noopener">Hexo 常见问题 | py’s blog</a></p><p>问题：<br>当在本地改变<code>md</code>文件的大小写时，部署到<code>GitHub</code> 上后，改变了文件名的博客不能被访问。<br>原因：<br><code>Hexo</code>默认的<code>git</code>操作会忽略大小写。<br>解决：</p><ol><li>修改根目录下<code>.deploy_git/.git/config</code>文件，将<code>ignorecase</code>的值由<code>true</code>改为<code>false</code></li><li>删除<code>.deploy_git</code>目录下除<code>.git</code>目录外的其他文件</li><li><code>cd</code>到<code>.deploy_git</code>目录下，手动做一次推送<pre><code class="lang-bash">git add .git commit -m &quot;delete all hexo generated files&quot;git push</code></pre></li><li>重新生成并部署<pre><code class="lang-bash">hexo ghexo d</code></pre></li></ol><h2 id="CSS的修改"><a href="#CSS的修改" class="headerlink" title="CSS的修改"></a>CSS的修改</h2><h3 id="文章框体透明"><a href="#文章框体透明" class="headerlink" title="文章框体透明"></a>文章框体透明</h3><p>打开<code>Blog\themes\hexo-theme-material-1.5.6\source\css</code>打开<code>style.min.css</code>搜索<code>#scheme-Paradox .material-layout .mdl-card</code>的第一项，在其中添加<code>background-color: rgba(255,255,255,0.8) !important;</code></p><h3 id="Tag颜色及悬停颜色"><a href="#Tag颜色及悬停颜色" class="headerlink" title="Tag颜色及悬停颜色"></a>Tag颜色及悬停颜色</h3><pre><code class="lang-css">.material-tagscloud a{        background-color: rgba(255,255,255,.9);        text-decoration:none;        padding: 1px 9px;        margin: 9px 1px;        line-height: 40px;        white-space: nowrap;        transition: .6s;        opacity: .85;    }</code></pre><pre><code class="lang-css">.material-tagscloud a:hover{        transition: .6s;        opacity: 1;        background: rgba(156,241,150,.7) !important;        box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12);    }</code></pre><h3 id="copyright位置"><a href="#copyright位置" class="headerlink" title="copyright位置"></a>copyright位置</h3><pre><code class="lang-css">#scheme-Paradox .mdl-mini-footer--right-section {    margin-right: 25px;}</code></pre><pre><code class="lang-css">#scheme-Paradox #copyright {    margin-left: auto;    margin-right: 25px;    text-align: center;}</code></pre><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><p>主题配置文件中的<code>mathjax</code> 引用cdn<code>https://cdn.bootcss.com/mathjax/2.7.0/MathJax.js</code><br>$\LaTeX$换行因为某些网页渲染的原因把<code>\\</code>换为<code>\\\\</code>即可.</p><p>修改hexo的渲染规则可以避免LaTex代码出现问题：</p><p><a href="https://docs.nexmoe.com/hexo/math.html#%E4%BD%BF%E7%94%A8kramed%E4%BB%A3%E6%9B%BF-marked" target="_blank" rel="noopener">https://docs.nexmoe.com/hexo/math.html#%E4%BD%BF%E7%94%A8kramed%E4%BB%A3%E6%9B%BF-marked</a></p><p>MathJax测试</p><script type="math/tex; mode=display">\begin{array}{|rc|} \hline \verb+\color{black}{text}+ & \color{black}{text} \\ \verb+\color{gray}{text}+ & \color{gray}{text} \\ \verb+\color{silver}{text}+ & \color{silver}{text} \\ \verb+\color{white}{text}+ & \color{white}{text} \\ \hline \verb+\color{maroon}{text}+ & \color{maroon}{text} \\ \verb+\color{red}{text}+ & \color{red}{text} \\ \verb+\color{yellow}{text}+ & \color{yellow}{text} \\ \verb+\color{lime}{text}+ & \color{lime}{text} \\ \verb+\color{olive}{text}+ & \color{olive}{text} \\ \verb+\color{green}{text}+ & \color{green}{text} \\ \verb+\color{teal}{text}+ & \color{teal}{text} \\ \verb+\color{aqua}{text}+ & \color{aqua}{text} \\ \verb+\color{blue}{text}+ & \color{blue}{text} \\ \verb+\color{navy}{text}+ & \color{navy}{text} \\ \verb+\color{purple}{text}+ & \color{purple}{text} \\ \verb+\color{fuchsia}{text}+ & \color{magenta}{text} \\ \hline \end{array}</script><h2 id="自定义页脚sns链接"><a href="#自定义页脚sns链接" class="headerlink" title="自定义页脚sns链接"></a>自定义页脚sns链接</h2><blockquote><p><a href="https://story.wavky.com/2018/08/16/Hexo-Material%E4%B8%BB%E9%A2%98%E4%B9%8B-footer-SNS%E5%AE%9A%E5%88%B6/" target="_blank" rel="noopener">Hexo Material主题之 footer SNS定制</a></p></blockquote><p>svg图标如果在CSS里写实在还有问题放一个文件直接引用也可以.</p><p>sns换到右边把ejs文件里的<code>left</code>改为<code>right</code>即可.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>license: ‘本文由 Name 原创，采用<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" target="_blank">保留署名-非商业性使用-禁止演绎 4.0-国际许可协议</a>‘</p><h2 id="鼠标点击烟花特效"><a href="#鼠标点击烟花特效" class="headerlink" title="鼠标点击烟花特效"></a>鼠标点击烟花特效</h2><p><code>themes/主题名称/source/js/src</code>新建<code>fireworks.js</code>文件</p><pre><code class="lang-js">&quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)}&quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)};</code></pre><p>在<code>themes/主题名称/layout/_layout.swig/ejs</code>的<code>&lt;/body&gt;</code>上方添加</p><pre><code class="lang-ejs">&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="一些主题的小问题"><a href="#一些主题的小问题" class="headerlink" title="一些主题的小问题"></a>一些主题的小问题</h2><p>独立页面<code>toc</code>不是默认为<code>true</code>的，需要手动开</p><pre><code>toc: true</code></pre><p>独立页面的<code>license</code>会在最后加上<code>index.html</code>，点击这个链接会导致<code>gitalk</code>再次创建<code>issue</code>，目前没有去解决.</p><h2 id="页脚时间统计与动态效果"><a href="#页脚时间统计与动态效果" class="headerlink" title="页脚时间统计与动态效果"></a>页脚时间统计与动态效果</h2><p>直接找出来我的博客页面上的js插入项，然后使用即可</p><h2 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h2><p>参考博客文档在<code>_config.yml</code>中打开选项即可</p><h2 id="jsDelivr加速js、css文件"><a href="#jsDelivr加速js、css文件" class="headerlink" title="jsDelivr加速js、css文件"></a>jsDelivr加速js、css文件</h2><p>1.博客内部的文件：参考博客文档配置jsdelivr选项即可</p><p>2.手动添加的文件：手动上传至cdn仓库，并修改链接</p><h1 id="天坑"><a href="#天坑" class="headerlink" title="天坑"></a>天坑</h1><p>咕了很久以后就会全忘了，再改Blog就凉了，有空就填一些。</p><h2 id="修改后没记录"><a href="#修改后没记录" class="headerlink" title="修改后没记录"></a>修改后没记录</h2><p>代码高亮</p><p>功能页面 | 独立页面</p><p>material图标</p><h2 id="想修改的功能"><a href="#想修改的功能" class="headerlink" title="想修改的功能"></a>想修改的功能</h2><p>插入pdf</p><p>代码复制功能</p><p>鼠标特效fireworks遮挡部分组件</p><p>文章头图自定义</p><p>hexo-addlink</p><p>文章置顶</p><p>字体，代码字体</p><p>背景js动态效果</p><p>Site Information</p><p>npm install hexo-math —save</p><h1 id="Git指令"><a href="#Git指令" class="headerlink" title="Git指令"></a>Git指令</h1><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p>克隆</p><pre><code class="lang-bash">git clone repo</code></pre><p>克隆分支</p><pre><code class="lang-bash">git clone -b branch_name repo</code></pre><hr><p>上传文件</p><pre><code class="lang-bash">git add .git commit -m &#39;update_name&#39;git push origin branch_name</code></pre><hr><p>Hexo指令</p><pre><code class="lang-bash">hexo inithexo clean g dhexo shexo new name categories</code></pre><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p><a href="https://zdran.com/20180326.html" target="_blank" rel="noopener">https://zdran.com/20180326.html</a></p><p>创建源文件git目录</p><pre><code class="lang-bash">git initgit remote add origin https://github.com/xx/xx.github.io // 填入你的repo地址</code></pre><p>创建分支</p><pre><code class="lang-bash">git checkout -b branch_namegit add .git commit -m &#39;add branch_name&#39;git push origin branch_name</code></pre><p>切换分支</p><pre><code class="lang-bash">git checkout branch_name</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「FFT/NTT」「多项式」</title>
      <link href="/2019/FFT/"/>
      <url>/2019/FFT/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-08-15</p></blockquote><p>必忘原理的<code>FFT</code></p><a id="more"></a><iframe src="//player.bilibili.com/player.html?aid=19141078&cid=31220967&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="false" width="360px" height="560px"> </iframe><p>测试一下视频，然而貌似只有<code>bilibili</code>的外链比较好<span class="heimu" title="你知道的太多了">总不能放Youtube？</span>，然而鬼畜的二维码与顶部链接比前几年在<code>mcbbs</code>看的时候烂多了。</p><hr><p>在<code>2019年8月15日</code>，终于看懂了<code>FFT</code>的推导过程。</p><p>首先是<code>FFT</code>的板子，这个写法其实很优美<span class="heimu" title="你知道的太多了">记不住的</span>。</p><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cmath&gt;#include &lt;complex&gt;#define R registerusing namespace std;const int N = 4.2e6;const double PI = acos(-1);int n, r[N];class C {public:    double r, i;    C() { r = i = 0; }    C(R double x, R double y) { r = x; i = y; }    C operator + (R C&amp; x) { return C(r+x.r, i+x.i); }    C operator - (R C&amp; x) { return C(r-x.r, i-x.i); }    C operator * (R C&amp; x) { return C(r*x.r-i*x.i, r*x.i+i*x.r); }    void operator += (R C&amp; x) { r += x.r; i += x.i; }    void operator *= (R C&amp; x) { R double t = r; r = r*x.r-i*x.i; i = t*x.i+i*x.r; }}f[N], g[N];inline void FFT(R C *a, R int op){    R C W, w, t, *a0, *a1;    R int i, j, k;    for (i = 0; i &lt; n; ++i)        if (i &lt; r[i]) t = a[i], a[i] = a[r[i]], a[r[i]] = t;    for(i = 1; i &lt; n; i &lt;&lt;= 1)        for(W = C(cos(PI/i), sin(PI/i) * op), j = 0; j &lt; n; j += i &lt;&lt; 1)            for(w = C(1, 0), a1 = i + (a0 = a + j), k = 0; k &lt; i; ++k, ++a0, ++a1, w*=W)                t = *a1 * w, *a1 = *a0 - t, *a0 += t;}int main(){    R int m, i, l = 0;    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);    for(i = 0; i &lt;= n; i++) scanf(&quot;%lf&quot;, &amp;f[i].r);    for(i = 0; i &lt;= m; i++) scanf(&quot;%lf&quot;, &amp;g[i].r);    for(m += n, n = 1; n &lt;= m; n &lt;&lt;= 1, ++l);    for(i = 0; i &lt; n; ++i) r[i] = (r[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (l - 1));    FFT(f, 1); FFT(g, 1);    for(i = 0; i &lt; n; ++i) f[i] *= g[i];    FFT(f, -1);    for(i = 0; i &lt;= m; ++i) printf(&quot;%.0lf &quot;, fabs(f[i].r) / n);    return 0;}</code></pre><p>咕，马上补.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFT </tag>
            
            <tag> NTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「动态规划」</title>
      <link href="/2019/dp/"/>
      <url>/2019/dp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-10-17</p></blockquote><p>推不出的<code>DP</code>方程</p><a id="more"></a><p>随意记点动态规划的方程，大概是NOIP难度的。</p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="水题"><a href="#水题" class="headerlink" title="水题"></a>水题</h2><h3 id="LuoguP1472-奶牛家谱-Cow-Pedigrees"><a href="#LuoguP1472-奶牛家谱-Cow-Pedigrees" class="headerlink" title="LuoguP1472 奶牛家谱 Cow Pedigrees"></a>LuoguP1472 奶牛家谱 Cow Pedigrees</h3><p>题意：有$n$个结点$k$层的二叉树结构个数，树只能有$2$个儿子或$0$个儿子。</p><p>设$dp[n][k]$为有$n$个结点不到$k$层的答案，则答案容斥一下为$dp[n][k]-dp[n][k-1]$，转移从下把两棵树连接到上一层结点，枚举$t$为左子树节点个数，则右子树为$总结点个数-t-1$(1是减掉根)，乘法原理把两个乘起来，方程为</p><script type="math/tex; mode=display">dp[i][j]=\sum dp[t][j-1]\times dp[i-t-1][j-1]</script><h2 id="正常题"><a href="#正常题" class="headerlink" title="正常题"></a>正常题</h2><h3 id="SDOI2011-消耗战"><a href="#SDOI2011-消耗战" class="headerlink" title="[SDOI2011]消耗战"></a>[SDOI2011]消耗战</h3><p>题意：给定$n$个点有边权的树，割断边花费边权，求使$k$个点与$1$点不连通的最小花费。</p><p>要用虚树做，写一下方程。</p><p>设$dp[n]$为使以$n$为结点的子树内关键点都不与$n$联通的最小花费，方程为</p><script type="math/tex; mode=display">dp[u]=dp[u]+\begin{cases}\min(dp[v],dist_{u,v})& \text{v不是关键点}\\dist_{u,v}& \text{v是关键点}\end{cases}</script><h3 id="ZJOI2010-排列计数"><a href="#ZJOI2010-排列计数" class="headerlink" title="[ZJOI2010]排列计数"></a>[ZJOI2010]排列计数</h3><p>题意：求一个$1\sim n$的排列$P_i$使$ 1\leq  i \leq n$时$P_i&gt;P_{i/2}$的方案数。</p><p>直接做没什么思路，可以想一下除二的关系可以是二叉树，于是换到树上来做，求$n$个节点的二叉树满足小根堆性质树的个数。</p><p>设$dp[i]$表示以$i$为根的子树内满足小根堆性质的方案数，$s[i]$为树结点数，提前把一些越界的初值设为$1$以免判断，转移时组合数算一下选给左子树的点，记得减去根节点，乘一下两颗子树的方案数就ok了，组合数要用lucas，方程</p><script type="math/tex; mode=display">dp[i]=C_{s[i]-1}^{s[i\times 2]}dp[i\times 2]dp[i\times 2+1]</script><h3 id="SCOI2008-奖励关"><a href="#SCOI2008-奖励关" class="headerlink" title="[SCOI2008]奖励关"></a>[SCOI2008]奖励关</h3><p>题意：$m$种物品，给你n次随机在$1\sim m$间的物品，每种物品有价值并且选这种物品需要你在前$n-1$次把集合$S$内的物品种类都选过一次才可以选。</p><p>显然$m$非常小，那么求期望直接枚举就可以了，这样就好做了，然后在考虑一下如果顺推的话需要保证$S$的合法性，这个比较难处理，那么逆推显然更好写。设$dp[i][S]$表示取前$i-1$次的状态为$S$是期望的最大值，$pre[i]$为第$i$种物品的前提集合，方程枚举第i个选第k种</p><script type="math/tex; mode=display">dp[i][S]=dp[i][S]+\begin{cases}\max(dp[i+1][S],dp[i+1][S|(1<<(k-1))]+val[k])& pre[i]\subseteq S \\dp[i+1][S]& pre[i]\nsubseteq  S\end{cases}</script><p>每次$dp[i][S]​$转移完之后变成$\dfrac{dp[i][S]}{n}​$来求期望，答案是$dp[1][0]​$.</p><h3 id="NOIP2014-子矩阵"><a href="#NOIP2014-子矩阵" class="headerlink" title="[NOIP2014]子矩阵"></a>[NOIP2014]子矩阵</h3><p>首先想了一个线性dp的做法，但写完后发现完全不对，于是非常自闭，看了数据范围，直接写状压，卡了卡常就过了.</p><p>设<code>dp[i][k][S]</code>为到第i行选了k行，行的状态为S的最小值，转移显然.</p><pre><code class="lang-c++">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#define R registerusing namespace std;const int inf = 0x3f3f3f3f;int n, m, r, c;int a[25][25];int dp[17][17][1&lt;&lt;16];int S[1&lt;&lt;16], cnt;inline int abs(int x){    return x &gt; 0 ? x : -x;}inline int ck(int x){    int r = 0;    while(x) {        if(x&amp;1) r++;        x&gt;&gt;=1;    }    return r;}int main(){    scanf(&quot;%d%d%d%d&quot;, &amp;n, &amp;m, &amp;r, &amp;c);    for(R int i = 1; i &lt;= n; i++)        for(R int j = 1; j &lt;= m; j++)            scanf(&quot;%d&quot;, &amp;a[i][j]);    for(R int s = (1&lt;&lt;c)-1; s &lt;= (1&lt;&lt;m)-1; s++)        if(ck(s) == c)            S[++cnt] = s;    memset(dp, 0x3f, sizeof(dp));    for(R int i = 1; i &lt;= n; i++)        for(R int s = 1; s &lt;= cnt; s++)            dp[i][1][S[s]] = 0;    for(R int i = 1; i &lt;= n; i++)    {        int ed1 = min(i, r);        for(R int l = 1; l &lt;= ed1; l++)        {            if(l &gt;= 2)            {                int ed2 = l-1;                for(R int j = i-1; j &gt;= ed2; j--)                {                    int tmp = 0;                    for(R int s = 1; s &lt;= cnt; s++)                        if(dp[j][l-1][S[s]] != inf)                    {                        tmp = 0;                        for(R int k = 1; k &lt;= m; k++)                            if(S[s] &amp; (1&lt;&lt;(k-1)))                                tmp += abs(a[i][k] - a[j][k]);                        dp[i][l][S[s]] = min(dp[i][l][S[s]], dp[j][l-1][S[s]] + tmp);                        tmp = 0;                    }                }            }            for(R int s = 1; s &lt;= cnt; s++)                if(dp[i][l][S[s]] != inf)            {                int Last = 0;                for(R int k = 1; k &lt;= m; k++)                    if(S[s] &amp; (1&lt;&lt;(k-1)))                {                    if(Last) dp[i][l][S[s]] += abs(a[i][k] - a[i][Last]);                    Last = k;                }            }        }    }    int ans = 0x7fffffff;    for(R int i = 1; i &lt;= n; i++)        for(R int s = 1; s &lt;= cnt; s++)                ans = min(ans, dp[i][r][S[s]]);    printf(&quot;%d\n&quot;, ans);    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的C++学习</title>
      <link href="/2019/C++/"/>
      <url>/2019/C++/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-10-17 未全部完成!</p></blockquote><p><code>Visual Studio</code>过于复杂</p><a id="more"></a><p>这篇内容质量低且还在弃坑当中建议不要阅读.</p><p>装了一下2017年装过一次却怎么没用过的Visual Studio，计划学习C++的OOP及C++11的语法后继续学习C++MFC.</p><blockquote><p>文档：<a href="https://zh.cppreference.com/w/首页" target="_blank" rel="noopener">cppreference.com</a></p><p>资料：<a href="https://www.runoob.com/cplusplus" target="_blank" rel="noopener">C++教程</a></p><p>书籍：《C++ Primer Plus》</p></blockquote><h1 id="C-OOP"><a href="#C-OOP" class="headerlink" title="C++ OOP"></a>C++ OOP</h1><h2 id="类-对象"><a href="#类-对象" class="headerlink" title="类 对象"></a>类 对象</h2><p><code>class Hf{...};</code>定义一个类</p><p><code>Hf xxx;</code>声明一个类型为<code>Hf</code>的对象</p><p>访问数据成员用<code>.</code>即可</p><h3 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h3><p>类定义内部的成员函数默认<code>inline</code></p><p>在类的外部定义函数的话用范围解析运算符<code>::</code>定义成员函数</p><pre><code class="lang-c++">数据类型 类名::函数名() {}</code></pre><p>调用函数用<code>.</code> 即可</p><h3 id="类访问修饰符"><a href="#类访问修饰符" class="headerlink" title="类访问修饰符"></a>类访问修饰符</h3><p><code>public</code>公有成员在程序中类的外部是可访问的。您可以不使用任何成员函数来设置和获取公有变量的值</p><p><code>private</code><strong>私有</strong>成员变量或函数在类的外部是不可访问的，甚至是不可查看的。只有类和友元函数可以访问私有成员。</p><p><code>protected</code><strong>保护</strong>成员变量或函数与私有成员十分相似，但有一点不同，保护成员在派生类（即子类）中是可访问的。</p><hr><p>继承时，使用哪种修饰符父类便继承到哪一部分中</p><p>1.private 成员只能被本类成员（类内）和友元访问，不能被派生类访问；</p><p>2.protected 成员可以被派生类访问。</p><h3 id="类构造函数-amp-析构函数"><a href="#类构造函数-amp-析构函数" class="headerlink" title="类构造函数 &amp; 析构函数"></a>类构造函数 &amp; 析构函数</h3><p>构造函数就定义一个函数名为类名没有数据类型的函数，每次创建类的新对象时执行，默认是存在构造函数，所以如果定义了有参数的构造函数，一定注意要再定义一个无参数无内容的构造函数，不然不用带参数的构造函数用默认创建对象的话会出错.<br>像这样玩就行，赋值可以像这样搞.</p><pre><code class="lang-c++">struct node {    int o, l, r, t;    node() {}    node(int o, int l, int r): o(o), l(l), r(r), t(ask(l, r)) {}    friend bool operator &lt; (const node&amp; a, const node&amp; b) {        return sum[a.t] - sum[a.o - 1] &lt; sum[b.t] - sum[b.o - 1];    }};</code></pre><p>析构函数名字是这样的<code>~类名</code>，这个函数再删除对象时执行.<br>总之就是一个创建，一个删除时执行。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「数论」</title>
      <link href="/2019/number_theory/"/>
      <url>/2019/number_theory/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-08-09</p></blockquote><p>只会<code>GCD</code></p><a id="more"></a><h1 id="取模"><a href="#取模" class="headerlink" title="取模"></a>取模</h1><script type="math/tex; mode=display">(a+b) \bmod p=(a\bmod p+b\bmod p)\bmod p​</script><script type="math/tex; mode=display">(a-b) \bmod p=(a\bmod p-b\bmod p+p)\bmod p​</script><script type="math/tex; mode=display">(a\times b) \bmod p=(a\bmod p\times b\bmod p)\bmod p​</script><p>求$\dfrac{a}{b}\bmod p​$时,求$b^{-1}​$使$b*b^{-1}\equiv1\pmod p​$即$b​$的逆元</p><p>有<script type="math/tex">\dfrac{a}{b}\bmod p=a\times b^{-1}\bmod p</script></p><h1 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h1><p>定理：当$p​$是质数时$a^{p-1}\equiv 1\pmod p​$</p><p>逆元：由$a^{p-1}\equiv 1\pmod p​$得$a\times a^{p-2}\equiv 1\pmod p​$</p><p>即$a^{p-2}$是$a$在模$p$意义下的逆元</p><h1 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h1><p>若$gcd(a,p)=1$则$a^{\varphi(p)}\equiv1\pmod n$</p><p>当$p$是质数时$\varphi(p)=p-1$</p><p>即$a^{p-1}\equiv1\pmod n$即费马小定理</p><h1 id="GCD-EXGCD"><a href="#GCD-EXGCD" class="headerlink" title="GCD EXGCD"></a>GCD EXGCD</h1><pre><code class="lang-c++">#define ll long longll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }void exgcd(ll a, ll b, ll &amp;x, ll &amp;y) {    if(!b) x = 1, y = 0;    else exgcd(b, a % b, y, x), y -= a / b * x;}</code></pre><p>$gcd$用来求解$a，b$的最大公约数</p><p>$lcm(a,b)=\dfrac{a\times b}{gcd(a,b)}​$，lcm是最大公约数</p><p>$exgcd$用来求解$ax+by=gcd(a,b)$，证明大概是化式子构造递归的解法，反正看了也早晚会忘就是了<del>逃</del></p><p>$exgcd$还可以求解$ax\equiv b\pmod p​$形式的同余方程</p><p>$exgcd(a,p,x,y)$求出来的$x$就是$a$关于$p$的逆元</p><h1 id="CRT-exCRT"><a href="#CRT-exCRT" class="headerlink" title="CRT exCRT"></a>CRT exCRT</h1><p>求解一个同余方程组</p><script type="math/tex; mode=display">\begin{cases}x \equiv a_1 \pmod {m_1} \\x \equiv a_2 \pmod {m_2} \\x \equiv a_n \pmod {m_n}\end{cases}</script><p>两种东西都可以通过exgcd两两合并同余方程求解，不过CRT可以直接构造出答案。</p><p>CRT求解的$p​$是质数，exCRT的不是，都可以用exgcd合并做。</p><p>推导参考这个blog：<a href="http://blog.miskcoo.com/2014/09/chinese-remainder-theorem" target="_blank" rel="noopener">扩展欧几里得算法与中国剩余定理</a></p><p>CRT直接构造的解：</p><p>令$M=\prod m_i, M_i=\frac M{m_i}​$，$t_i​$为$M_i​$在模$m_i​$意义下的逆元</p><p>方程组的解为<script type="math/tex">x \equiv \sum_{i=1}^na_it_iM_i \pmod M​</script></p><h1 id="筛法"><a href="#筛法" class="headerlink" title="筛法"></a>筛法</h1><p>求$n$是不是素数直接枚举$1$到$\sqrt{n}$试除</p><p>埃筛</p><pre><code class="lang-c++">for(int i = 2; i &lt;= N; i++) if(!vis[i]) {    prime[++cnt] = i;    for(int j = 1; i * j &lt;= N; j++)           vis[i * j] = 1;}</code></pre><p>线筛</p><pre><code class="lang-c++">for(int i = 2; i &lt;= N; i++) {    if(!vis[i]) prime[++cnt] = i;    for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) {        vis[i * prime[j]] = 1;        if(i % prime[j] == 0) break;    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器 | 插件与设置</title>
      <link href="/2019/chrome/"/>
      <url>/2019/chrome/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-06-04</p></blockquote><a id="more"></a><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>下载地址：<a href="https://www.google.cn/intl/zh-CN/chrome" target="_blank" rel="noopener">Google Chrome 网络浏览器</a></p><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p><code>Bookmarkie</code> 插件栏弹出收藏夹，可搜索</p><p><code>书签侧边栏</code> 侧边栏收藏夹</p><p><code>Wrona History Menu</code> 插件栏弹出历史记录，最近关闭</p><p><code>Checker Plus for Gmail™</code> 查看Google邮箱</p><p><code>Click and Save</code> 快捷键点击存图</p><p><code>CSS Peeper</code> 抓取页面样式</p><p><code>Earth View from Google Earth</code> 新页标签Google地球</p><p><code>Color Tab</code> 新页标签配色设计</p><p><code>Save All Resources</code> 下载控制台<code>Sources</code>全部文件</p><p><code>Steam Inventory Helper</code> steam网页版市场工具</p><p><code>Speedtest by Ookla</code> 墙外测速</p><p><code>Stylus</code> 替换CSS样式</p><p><code>Tampermonkey</code> 网页js脚本</p><p><code>Yet another flags</code> 查看网页ip</p><p><code>沙拉查词</code> 划词翻译</p><p><code>ImageAssistant</code> 下载网页图片</p><p><code>Yet Another Drag and Go</code> 四方向拖拽搜索，链接拖拽打开</p><p><code>pakku</code> bilibili弹幕过滤</p><p><code>Aerys</code> 插件栏查看窗口标签</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p><code>左键单击</code> = 在当前窗口打开目标网页</p><p><code>Shift + 左键单击</code> = 在新窗口打开目标网页</p><p><code>Ctrl + 左键单击</code> = 在新标签页打开目标网页</p><hr><p><code>Ctrl + Shift + T</code> = 打开上一个关闭的标签页</p><p><code>Ctrl + Shift + B</code> = 显示书签栏</p><p><code>Ctrl + D</code> = 为此页添加书签</p><p><code>Ctrl + H</code> = 历史记录</p><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>不在设置里出现的控制选项： chrome://flags</p><p>查看chrome账号同步情况： chrome://sync</p><hr><p>地址栏中使用的搜索引擎改为<code>google.com.hk</code></p><h1 id="网页长截图"><a href="#网页长截图" class="headerlink" title="网页长截图"></a>网页长截图</h1><p>1.按<code>F12</code></p><p>2.按<code>Ctrl + Shift + P</code></p><p>3.输入<code>Capture full size screenshot</code>并回车</p><h2 id="截取手机版长图"><a href="#截取手机版长图" class="headerlink" title="截取手机版长图"></a>截取手机版长图</h2><p>在1、2操作之间，按下<code>Ctrl + Shift + M</code></p><h2 id="选区截图"><a href="#选区截图" class="headerlink" title="选区截图"></a>选区截图</h2><p>1.按<code>F12</code></p><p>2.按<code>Ctrl + Shift + C</code></p><p>3.选中区域后去输入<code>Capture node screenshot</code>并回车</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网 | GFW与SSR简介</title>
      <link href="/2019/GFW/"/>
      <url>/2019/GFW/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update on A.D.2019-05-31</p></blockquote><p>Across the Great Wall we can reach every corner in the world.</p><a id="more"></a><p>在配置开发环境、依赖项等过程中，不可避免的会遇到无法下载、下载速度过慢的情况。</p><p>在编程学习中，如果可以使用Google、StackOverflow，往往可以解决很多问题。</p><p>本文简要介绍GFW和常见的科学上网技术。</p><p>删减了大部分内容，推荐观看<a href="https://www.youtube.com/channel/UCZVThl_MRppEdGUPGjXSSdg" target="_blank" rel="noopener">电丸科技AK</a>制作的<a href="https://www.youtube.com/watch?v=XKZM_AjCUr0&amp;list=PLqybz7NWybwUgR-S6m78tfd-lV4sBvGFG" target="_blank" rel="noopener">https://www.youtube.com/watch?v=XKZM_AjCUr0&amp;list=PLqybz7NWybwUgR-S6m78tfd-lV4sBvGFG</a> 这一系列视频，推荐简单学习计算机网络知识。</p><p><strong>推荐阅读：</strong></p><p><del><a href="https://blog.nfz.moe/archives/network-in-china.html" target="_blank" rel="noopener">中国的互联网 _ neoFelhz’s Blog[已失效]</a></del></p><p><a href="https://medium.com/@thomas_summon/%E6%B5%85%E8%B0%88vpn-vps-proxy%E4%BB%A5%E5%8F%8Ashadowsocks%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E5%92%8C%E5%8C%BA%E5%88%AB-b0198f92db1b" target="_blank" rel="noopener">浅谈vpn、vps、Proxy以及shadowsocks之间的联系和区别</a></p><p><a href="https://hynking.org/2017/01/02/The_reason/" target="_blank" rel="noopener">墙与纸飞机</a></p><p><a href="https://young1lin.me/2020/10/30/GFW/#%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">什么是 SSR、V2ray、Trojan、Clash，什么是机场？</a></p><p><a href="https://yuerblog.cc/2017/01/03/how-vpn-works-and-how-to-setup-pptp/" target="_blank" rel="noopener">vpn工作原理和搭建方法</a></p><p><a href="https://www.zhihu.com/question/268204483/answer/334644846" target="_blank" rel="noopener">代理，网关，隧道，有什么区别与联系？</a></p><h1 id="什么是GFW"><a href="#什么是GFW" class="headerlink" title="什么是GFW"></a>什么是GFW</h1><h2 id="GFW"><a href="#GFW" class="headerlink" title="GFW"></a>GFW</h2><p><a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="noopener">防火长城 - 维基百科，自由的百科全书</a></p><p>线路拓扑：</p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/gfw.png" alt></p><h2 id="一些名词"><a href="#一些名词" class="headerlink" title="一些名词"></a>一些名词</h2><p><a href="https://zh.wikipedia.org/wiki/%E8%99%9A%E6%8B%9F%E4%B8%93%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">虚拟专用服务器 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">代理服务器 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/SOCKS" target="_blank" rel="noopener">SOCKS - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/IPv6" target="_blank" rel="noopener">IPv6 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/Secure_Shell" target="_blank" rel="noopener">Secure Shell - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">超文本传输安全协议 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%B0%8D%E7%AD%89%E7%B6%B2%E8%B7%AF" target="_blank" rel="noopener">点对点网络 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="noopener">HTTP状态码 - 维基百科，自由的百科全书</a></p><p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB" target="_blank" rel="noopener">中间人攻击 - 维基百科，自由的百科全书</a></p><h1 id="如何科学上网"><a href="#如何科学上网" class="headerlink" title="如何科学上网"></a>如何科学上网</h1><h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><p><a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF" target="_blank" rel="noopener">虚拟专用网 - 维基百科，自由的百科全书</a></p><pre><code>虚拟私人网络（英语：Virtual Private Network，缩写：VPN）是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。它利用隧道协议（Tunneling Protocol）来达到保密、发送端认证、消息准确性等私人消息安全效果，这种技术可以用不安全的网络（例如：互联网）来发送可靠、安全的消息。</code></pre><p><a href="https://zh.wikipedia.org/wiki/%E9%9A%A7%E9%81%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">隧道协议 - 维基百科，自由的百科全书</a></p><h2 id="SS-SSR"><a href="#SS-SSR" class="headerlink" title="SS | SSR"></a>SS | SSR</h2><p>推荐阅读：<br><a href="https://www.5xiaobo.com/?id=650" target="_blank" rel="noopener">浅谈VPN和SS/SSR的区别</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>全称Shadowsocks | ShadowsocksR</p><p>SS的作者Clowwindy删除了GitHub的源代码，SSR是breakwa11在SS基础上开发的软件，后作者在GitHub上将其源代码删除，SS与SSR开发时皆开源，原作者停止维护后有人开发并维护与更新至今。</p><h3 id="SS"><a href="#SS" class="headerlink" title="SS"></a>SS</h3><p><a href="http://shadowsocks.org/en/index.html" target="_blank" rel="noopener">官网</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">GitHub</a></p><h3 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h3><p>已经删除的主页（web archive）：<br><a href="https://web.archive.org/web/20170719134138/https://breakwa11.github.io/" target="_blank" rel="noopener">breakwa11.github.io</a></p><p><a href="https://github.com/breakwa11/shadowsocks-csharp/releases" target="_blank" rel="noopener">GitHub</a></p><p>简单了解一下：<br><a href="https://zh.wikipedia.org/wiki/Shadowsocks" target="_blank" rel="noopener">Shadowsocks - 维基百科，自由的百科全书</a></p><p>界面：<br><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/ssr1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/ssr2.png" alt></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>有Windows、Linux、Android、IOS、Macos等系统及各种在源软件基础上开发的很多版本。</p><p>一个仍在维护的Windows版本：</p><p><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases" target="_blank" rel="noopener">https://github.com/shadowsocksrr/shadowsocksr-csharp/releases</a></p><p>一些下载地址及版本介绍：</p><p><a href="https://congcong0806.github.io/2018/04/20/SS/" target="_blank" rel="noopener">SS/SSR 简介</a></p><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><h4 id="优先阅读"><a href="#优先阅读" class="headerlink" title="优先阅读"></a>优先阅读</h4><p><a href="https://moe.best/tutorial/shadowsocksr.html" target="_blank" rel="noopener">[ShadowsocksR] 大概是萌新也看得懂的SSR功能详细介绍&amp;使用教程</a></p><p><a href="https://crifan.github.io/scientific_network_summary/website/server_client_mode/ss_client/client_windows.html" target="_blank" rel="noopener">Windows的ss客户端 · 珂学上网相关知识总结</a></p><h3 id="机场"><a href="#机场" class="headerlink" title="机场"></a>机场</h3><p><a href="387099.blogspot.com/2018/03/ssssr.html">浅谈部分机场（SS/SSR提供商）的使用感受</a></p><h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><p><a href="https://www.i5seo.com/shadowsocksr-clients-various-hidden-use-techniques.html" target="_blank" rel="noopener">ShadowsocksR 客户端 各种隐藏使用技巧说明</a></p><p><a href="https://blog.jimmyho.net/archives/365/" target="_blank" rel="noopener">ShadowsocksR简明使用教程</a></p><h4 id="小飞机的颜色"><a href="#小飞机的颜色" class="headerlink" title="小飞机的颜色"></a>小飞机的颜色</h4><div class="table-container"><table><thead><tr><th style="text-align:center">颜色</th><th style="text-align:center">全局</th><th style="text-align:center">PAC</th><th style="text-align:center">直连</th><th style="text-align:center">负载均衡</th></tr></thead><tbody><tr><td style="text-align:center">白</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">青</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">黄</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">绿</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">蓝</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">紫</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr></tbody></table></div><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><p>对小飞机托盘图标操作</p><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">左键单击</td><td style="text-align:center">弹出编辑服务器窗口</td></tr><tr><td style="text-align:center">中键单击</td><td style="text-align:center">弹出服务器连接统计窗</td></tr><tr><td style="text-align:center">右键单击</td><td style="text-align:center">弹出菜单</td></tr></tbody></table></div><h3 id="SSTap"><a href="#SSTap" class="headerlink" title="SSTap"></a>SSTap</h3><p>软件介绍：SSTap全称SOCKSTap, 是一款利用虚拟网卡技术在网络层实现的代理工具。SSTap能在网络层拦截所有连接并转发给HTTP，SOCKS4，5，SHADOWSOCKS代理.而无需对被代理的应用程序做任何修改或设置。它能同时转发TCP,UDP数据包，它非常适合于游戏玩家使用。</p><h3 id="搭建SSR服务"><a href="#搭建SSR服务" class="headerlink" title="搭建SSR服务"></a>搭建SSR服务</h3><p>购买VPS，部署Linux发行版和SSR服务端（没有搭建博客、使用服务器等用途不推荐）</p><h2 id="Trojan"><a href="#Trojan" class="headerlink" title="Trojan"></a>Trojan</h2><p><a href="https://github.com/trojan-gfw/trojan" target="_blank" rel="noopener">trojan-gfw / trojan</a></p><h2 id="Clash"><a href="#Clash" class="headerlink" title="Clash"></a>Clash</h2><p><a href="https://github.com/Dreamacro/clash" target="_blank" rel="noopener">Dreamacro / clash</a></p><h2 id="V2Ray"><a href="#V2Ray" class="headerlink" title="V2Ray"></a>V2Ray</h2><p>推荐阅读：<br><a href="https://medium.com/@thomas_summon/%E6%B5%85%E8%B0%88vpn-vps-proxy%E4%BB%A5%E5%8F%8Ashadowsocks%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E5%92%8C%E5%8C%BA%E5%88%AB-b0198f92db1b" target="_blank" rel="noopener">浅谈vpn、vps、Proxy以及shadowsocks之间的联系和区别</a></p><p>V2Ray 是一个模块化的代理软件包，它的目标是提供常用的代理软件模块，简化网络代理软件的开发。</p><p>简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。</p><p><a href="https://www.v2ray.com/" target="_blank" rel="noopener">Project V · Project V 官方网站</a></p><p><a href="https://github.com/v2ray/v2ray-core" target="_blank" rel="noopener">Github</a></p><h3 id="TLS"><a href="#TLS" class="headerlink" title="TLS"></a>TLS</h3><h2 id="Brook"><a href="#Brook" class="headerlink" title="Brook"></a>Brook</h2><p><a href="https://github.com/txthinking/brook" target="_blank" rel="noopener">txthinking / brook</a></p><h2 id="Tor"><a href="#Tor" class="headerlink" title="Tor"></a>Tor</h2><p><a href="https://www.torproject.org/index.html.en" target="_blank" rel="noopener">torproject</a></p><h1 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h1><p>一个Chrome的插件</p><pre><code>Yet another flags</code></pre><p>可以很方便的显示服务器IP地址和地理位置。<br>效果：<br><img src="https://cdn.jsdelivr.net/gh/shiokiri/cdn/img/chrome1.png" alt></p><h1 id="常用互联网服务"><a href="#常用互联网服务" class="headerlink" title="常用互联网服务"></a>常用互联网服务</h1><h2 id="无法访问"><a href="#无法访问" class="headerlink" title="无法访问"></a>无法访问</h2><h3 id="website"><a href="#website" class="headerlink" title="website"></a>website</h3><p><a href="https://www.google.com.hk" target="_blank" rel="noopener">Google</a></p><p><a href="https://www.youtube.com" target="_blank" rel="noopener">Youtube</a></p><p><a href="https://www.facebook.com" target="_blank" rel="noopener">Facebook</a></p><p><a href="https://twitter.com" target="_blank" rel="noopener">Twitter</a></p><p><a href="https://zh.wikipedia.org" target="_blank" rel="noopener">Wikipedia(zh_CN)</a></p><h3 id="IM"><a href="#IM" class="headerlink" title="IM"></a>IM</h3><p><a href="https://telegram.org" target="_blank" rel="noopener">Telegram</a></p><hr><h2 id="正常访问"><a href="#正常访问" class="headerlink" title="正常访问"></a>正常访问</h2><h3 id="website-1"><a href="#website-1" class="headerlink" title="website"></a>website</h3><p><a href="https://www.quora.com" target="_blank" rel="noopener">Quora</a></p><p><a href="https://github.com" target="_blank" rel="noopener">GitHub</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GFW </tag>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>落影汐雾，普普通通的学生<del>曾经是OIer，用过的id是<code>ColorfulMist</code></del></p><p>喜欢中文vocaloid、PC游戏、一点ACGN、电子产品和写代码</p><p>网站是高中时期摸鱼搭建的静态博客，使用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>，主题是 <a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener">Material</a></p><hr><p>交换友链在此回复名称+介绍+头像链接+主页链接即可(￣︶￣*))</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>闲聊</title>
      <link href="/chat/index.html"/>
      <url>/chat/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最后更新：A.D.2022-1-30</p></blockquote><hr><blockquote><p>Q：喜欢什么样的二次元？</p><p>A：<a href="https://bangumi.tv/user/shiokiri" target="_blank" rel="noopener">https://bangumi.tv/user/shiokiri</a></p></blockquote>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>links</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>timeline</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
